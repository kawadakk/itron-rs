var searchIndex = JSON.parse('{\
"itron_asp3":{"doc":"Rust interface to interact with operating systems based on …","t":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,6,6,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,17,17,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,3,3,3,3,3,3,3,3,3,19,3,3,19,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,12,12,12,3,5,12,12,12,12,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,12,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,12,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,12,5,12,12,12,12,12,5,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,5,5,12,5,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,12,12,12,12,12,5,5,5,5,5,5,5,6,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,5,5,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,12,12,12,12,12,12,5,5,12,12,12,12,5,12,12,5,12,5,5,5,12,12,5,5,5,5,5,5,12,5,5,5,12,12,5,5,5,12,12,12,5,12,5,5,5,12,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,5,5,12,5,5,12,12,12,12,12,5,12,12,12,5,6,8,10,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,3,6,3,3,4,13,13,13,13,3,4,4,13,13,13,13,13,4,4,13,13,13,13,4,4,4,13,13,13,13,13,13,13,13,4,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,8,3,6,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,11,11,11,11,5,11,11,11,11,5,5,5,5,5,11,11,11,11,12,14,14,14,14,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,6,4,3,4,13,13,4,4,3,4,4,3,3,13,13,13,13,4,13,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,4,4,3,13,13,13,13,4,4,13,13,13,13,4,4,13,13,13,13,13,13,13,13,4,4,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,3,13,13,13,13,4,13,13,3,4,4,4,4,3,3,13,13,13,13,4,13,13,13,13,13,13,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,4,3,3,18,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,3,6,4,13,13,3,4,4,13,13,13,4,13,13,13,3,3,4,13,13,13,13,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,3,4,4,3,4,4,4,4,13,6,4,3,4,8,4,13,13,13,13,13,13,13,13,13,13,6,4,13,13,13,13,4,13,4,13,13,13,4,13,4,4,4,4,4,4,13,3,3,4,13,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,5,11,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,18,3,3,18,18,11,11,11,11,11,11,11,11,11,11,11,11,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,11,11,11,11,11,11,11,11,11,11,11],"n":["_changelog_","abi","closure","dataqueue","error","eventflag","interrupt","kernel","macros","memorypool","messagebuffer","mutex","prioritydataqueue","processor","semaphore","task","time","wait","ACPTN","ATR","ER","ER_BOOL","ER_ID","ER_UINT","EXCNO","EXINF","E_BOVR","E_CLS","E_COMM","E_CTX","E_DLT","E_ID","E_ILUSE","E_MACV","E_NOEXS","E_NOID","E_NOMEM","E_NORES","E_NOSPT","E_OACV","E_OBJ","E_OK","E_PAR","E_QOVR","E_RASTER","E_RLWAI","E_RSATR","E_RSFN","E_SYS","E_TMOUT","E_WBLK","FALSE","FLGPTN","FN","FP","HRTCNT","ID","INHNO","INTNO","ISR","MB_T","MODE","MPF_T","NonNullID","NonZeroER","PRCTIM","PRI","RELTIM","STAT","SYSTIM","TACP_KERNEL","TACP_SHARED","TASK","TA_ACT","TA_CEILING","TA_CLR","TA_NOACTQUE","TA_NULL","TA_RSTR","TA_STA","TA_TPRI","TA_WMUL","TENFY_ACTTSK","TENFY_INCVAR","TENFY_SETFLG","TENFY_SETVAR","TENFY_SIGSEM","TENFY_SNDDTQ","TENFY_WUPTSK","TIPM_ENAALL","TMAX_RELTIM","TMEHDR","TMO","TMO_FEVR","TMO_NBLK","TMO_POL","TNFY_ACTTSK","TNFY_HANDLER","TNFY_INCVAR","TNFY_SETFLG","TNFY_SETVAR","TNFY_SIGSEM","TNFY_SNDDTQ","TNFY_WUPTSK","TPRI_INI","TPRI_SELF","TRUE","TSK_NONE","TSK_SELF","TTS_DMT","TTS_RDY","TTS_RUN","TTS_SUS","TTS_WAI","TTS_WAS","TTW_DLY","TTW_FLG","TTW_MPF","TTW_MTX","TTW_RDTQ","TTW_RMBF","TTW_RPDQ","TTW_SDTQ","TTW_SEM","TTW_SLP","TTW_SMBF","TTW_SPDQ","TWF_ANDW","TWF_ORW","T_CALM","T_CCYC","T_CDTQ","T_CFLG","T_CISR","T_CMPF","T_CMTX","T_CPDQ","T_CSEM","T_CTSK","T_ENFY","T_ENFY_DTQ","T_ENFY_VAR","T_NFY","T_NFYINFO","T_NFY_DTQ","T_NFY_FLG","T_NFY_HDR","T_NFY_IVAR","T_NFY_SEM","T_NFY_TSK","T_NFY_VAR","T_RALM","T_RCYC","T_RDTQ","T_RFLG","T_RMBF","T_RMPF","T_RMTX","T_ROVR","T_RPDQ","T_RSEM","T_RTSK","acptn1","acptn2","acptn3","acptn4","acre_alm","acre_cyc","acre_dtq","acre_flg","acre_isr","acre_mpf","acre_mtx","acre_pdq","acre_sem","acre_tsk","act_tsk","actcnt","acttsk","acttsk","acvct","adj_tim","almatr","almstat","blkcnt","blksz","bool_t","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_act","can_wup","ceilpri","chg_ipm","chg_pri","chg_spr","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clr_flg","clr_int","cycatr","cycphs","cycstat","cyctim","data","del_alm","del_cyc","del_dtq","del_flg","del_isr","del_mpf","del_mtx","del_pdq","del_sem","del_tsk","dis_dsp","dis_int","dis_ter","dister","dly_tsk","dtqatr","dtqcnt","dtqid","dtqid","dtqmb","ena_dsp","ena_int","ena_ter","enfy","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","exinf","exinf","exinf","ext_ker","ext_tsk","fblkcnt","fch_hrt","flgatr","flgid","flgptn","flgptn","fmbfsz","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fsnd_dtq","get_inf","get_ipm","get_lod","get_mpf","get_nth","get_pri","get_tid","get_tim","get_tst","handler","htskid","iflgptn","incvar","incvar","ini_dtq","ini_flg","ini_mbf","ini_mpf","ini_mtx","ini_pdq","ini_sem","int_t","intno","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","isemcnt","isr","isratr","isrpri","itskpri","leftotm","lefttim","lefttim","lefttmo","loc_cpu","loc_mtx","maxdpri","maxsem","mpf","mpfatr","mpfmb","mtxatr","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","nfy","nfyinfo","nfyinfo","nfymode","ovrstat","p_var","p_var","p_var","pdqatr","pdqcnt","pdqmb","pget_mpf","ploc_mtx","pol_flg","pol_sem","prb_int","prcv_dtq","prcv_mbf","prcv_pdq","psnd_dtq","psnd_mbf","psnd_pdq","ras_int","ras_ter","raster","rcv_dtq","rcv_mbf","rcv_pdq","ref_alm","ref_cyc","ref_dtq","ref_flg","ref_mbf","ref_mpf","ref_mtx","ref_ovr","ref_pdq","ref_sem","ref_tsk","rel_mpf","rel_wai","rot_rdq","rsm_tsk","rtskid","rtskid","rtskid","sdtqcnt","sematr","semcnt","semid","set_flg","set_tim","setflg","setflg","setvar","setvar","sig_sem","sigsem","sigsem","slp_tsk","smbfcnt","snd_dtq","snd_mbf","snd_pdq","snddtq","snddtq","sns_ctx","sns_dpn","sns_dsp","sns_ker","sns_loc","sns_ter","spdqcnt","sta_alm","sta_cyc","sta_ovr","stk","stksz","stp_alm","stp_cyc","stp_ovr","stskid","stskid","stskid","sus_tsk","task","ter_tsk","tget_mpf","tloc_mtx","tmehdr","trcv_dtq","trcv_mbf","trcv_pdq","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tskatr","tskbpri","tskid","tskpri","tskstat","tskwait","tslp_tsk","tsnd_dtq","tsnd_mbf","tsnd_pdq","twai_flg","twai_sem","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uint_t","unl_cpu","unl_mtx","value","wai_flg","wai_sem","wobjid","wtskid","wtskid","wtskid","wtskid","wup_tsk","wupcnt","wuptsk","wuptsk","xsns_dpn","Closure","IntoClosure","into_closure","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadParam","BadState","BuildError","Builder","DataElement","Dataqueue","DataqueueRef","DeleteError","Deleted","Deleted","Deleted","Deleted","Info","InfoError","InitializeError","NotSupported","NotSupported","NotSupported","NotSupported","OutOfMemory","RecvError","RecvTimeoutError","Released","Released","Released","Released","SendError","SendForcedError","SendTimeoutError","TerminateRequest","TerminateRequest","TerminateRequest","TerminateRequest","Timeout","Timeout","Timeout","Timeout","TryRecvError","TrySendError","ZeroSized","as_raw","as_raw","as_raw_nonnull","as_raw_nonnull","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","capacity","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","delete","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","finish","first_waiting_receiving_task_id","first_waiting_sending_task_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_raw_nonnull","from_raw_nonnull","info","initialize","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_empty","leak","len","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","queue_order","recv","recv_timeout","send","send_forced","send_timeout","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_recv","try_send","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","Error","ErrorCode","ErrorKind","Kind","MaybeKind","Never","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","code","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from_error_code","get","into","into","into","into","kind","ne","ne","ne","new","new_unchecked","new_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","AccessDenied","ExitError","borrow","borrow_mut","clone","eq","exit","fmt","from","from_error_code","into","is_cpu_lock_active","is_dispatch_pending_active","is_dispatching_disabled","is_operational","is_task_context","ne","try_from","try_into","type_id","0","kernel","match_kernel","tt_is_kernel","tt_kernel","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadParam","BadParam","BadState","Block","BuildError","Builder","DeleteError","Deleted","Deleted","GetError","GetTimeoutError","Info","InfoError","InitializeError","MemoryPool","MemoryPoolRef","NotSupported","NotSupported","NotSupported","OutOfMemory","ReleaseError","Released","Released","TerminateRequest","TerminateRequest","Timeout","Timeout","TryGetError","as_raw","as_raw","as_raw_nonnull","as_raw_nonnull","as_ref","block_count","block_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","delete","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","finish","first_waiting_task_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","free_block_count","from","from","from","from","from","from","from","from","from","from","from","from","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_raw_nonnull","from_raw_nonnull","get","get_timeout","info","initialize","into","into","into","into","into","into","into","into","into","into","into","into","leak","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","queue_order","release","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadParam","BadParam","BadParam","Deleted","Deleted","Deleted","Deleted","Info","InfoError","InitializeError","MessageBufferRef","NotSupported","NotSupported","NotSupported","NotSupported","RecvError","RecvTimeoutError","Released","Released","Released","Released","SendError","SendTimeoutError","TerminateRequest","TerminateRequest","TerminateRequest","TerminateRequest","Timeout","Timeout","Timeout","Timeout","TryRecvError","TrySendError","Unknown","as_raw","as_raw_nonnull","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","eq","eq","eq","eq","eq","eq","eq","eq","eq","first_waiting_receiving_task_id","first_waiting_sending_task_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","free_byte_count","from","from","from","from","from","from","from","from","from","from","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_raw_nonnull","info","initialize","into","into","into","into","into","into","into","into","into","into","is_empty","len","ne","ne","ne","ne","ne","ne","ne","ne","ne","recv","recv_timeout","send","send_timeout","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_recv","try_send","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadParam","BadParam","BadParam","BadParam","BadSequence","BadState","BuildError","Builder","Ceiling","Deadlock","Deadlock","Deadlock","DeleteError","Deleted","Deleted","Info","InfoError","InitializeError","LockError","LockTimeoutError","Mutex","MutexRef","None","NotSupported","NotSupported","OutOfMemory","PriorityProtection","Released","Released","TerminateRequest","TerminateRequest","Timeout","Timeout","TryLockError","UnlockError","as_raw","as_raw","as_raw_nonnull","as_raw_nonnull","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","delete","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","finish","first_waiting_task_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_raw_nonnull","from_raw_nonnull","info","inherit","initialize","into","into","into","into","into","into","into","into","into","into","into","into","into","leak","lock","lock_timeout","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","owning_task_id","priority_protection","queue_order","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","priority","0","0","0","0","0","0","0","0","0","0","BadContext","CurrentIdError","Processor","ProcessorTryFromError","UNIPROCESSOR","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","current","eq","eq","eq","fmt","fmt","fmt","from","from","from","from_error_code","into","into","into","ne","ne","ne","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadParam","BadState","BuildError","Builder","Count","DeleteError","Deleted","Deleted","Info","InfoError","InitializeError","NotSupported","NotSupported","OutOfMemory","PollError","QueueOverflow","Released","Released","Semaphore","SemaphoreRef","SignalError","TerminateRequest","TerminateRequest","Timeout","Timeout","WaitError","WaitTimeoutError","as_raw","as_raw","as_raw_nonnull","as_raw_nonnull","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","count","delete","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","finish","first_waiting_task_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_raw_nonnull","from_raw_nonnull","info","initial_count","initialize","into","into","into","into","into","into","into","into","into","into","into","into","leak","max_count","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","poll","queue_order","signal","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wait","wait_timeout","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","ActivateError","ActivateOnError","AllProcessors","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContextError","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadParam","BadParam","BadParam","BadParam","BadParam","BadParam","BadState","BadState","BadState","BadState","BadState","BadState","BadState","BadState","BadState","BadState","BuildError","Builder","CancelActivateAllError","CancelWakeAllError","Current","CurrentIdError","DelayError","DeleteError","DisableTerminationError","Dormant","EnableTerminationError","ExitError","Info","InfoError","IntoProcessorSet","MigrateError","NotSupported","NotSupported","NotSupported","NotSupported","NotSupported","NotSupported","NotSupported","NotSupported","NotSupported","OutOfMemory","Priority","PriorityError","QueueOverflow","QueueOverflow","QueueOverflow","QueueOverflow","RaiseTerminationError","Ready","ReleaseWaitError","Released","Released","Released","ResumeError","Running","SetBasePriorityError","SleepError","SleepTimeoutError","State","StateError","SuspendError","Suspended","Task","TaskRef","TerminateError","TerminateRequest","TerminateRequest","TerminateRequest","Timeout","Waiting","WaitingSuspended","WakeError","activate","activate_on","as_raw","as_raw","as_raw","as_raw_nonnull","as_raw_nonnull","as_raw_nonnull","as_ref","as_ref","base_priority","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cancel_activate_all","cancel_wake_all","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","current","current_id","current_priority","default","delay","delete","disable_termination","drop","enable_termination","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","exit","finish","finish_and_activate","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_raw_nonnull","from_raw_nonnull","hash","hash","info","initial_priority","initial_processor","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_termination_disabled","leak","migrate","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","priority","processor_affinity","raise_termination","release_wait","resume","set_base_priority","sleep","sleep_timeout","stack_size","start","state","state","suspend","terminate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wake","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","Duration","FOREVER","Timeout","TryFromDurationError","ZERO","ZERO","as_raw","as_raw","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","cmp","cmp","duration","duration","eq","eq","fmt","fmt","from","from","from","from_micros","from_micros","from_millis","from_millis","from_nanos","from_nanos","from_raw","from_raw","from_secs","from_secs","hash","hash","into","into","into","is_finite","ne","ne","partial_cmp","partial_cmp","timeout","timeout","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Fifo","QueueOrder","TaskPriority","as_raw_atr","borrow","borrow_mut","clone","eq","fmt","from","into","try_from","try_into","type_id"],"q":["itron_asp3","","","","","","","","","","","","","","","","","","itron_asp3::abiitron_asp3::closure","","","itron_asp3::dataqueueitron_asp3::dataqueue::BuildError","","","","itron_asp3::dataqueue::DeleteError","","","","itron_asp3::dataqueue::InfoError","","","itron_asp3::dataqueue::InitializeError","","","itron_asp3::dataqueue::RecvError","","","","","","","itron_asp3::dataqueue::RecvTimeoutError","","","","","","","","itron_asp3::dataqueue::SendError","","","","","","","itron_asp3::dataqueue::SendForcedError","","","","itron_asp3::dataqueue::SendTimeoutError","","","","","","","","itron_asp3::dataqueue::TryRecvError","","","","itron_asp3::dataqueue::TrySendError","","","","itron_asp3::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","itron_asp3::kernel","","","","","","","","","","","","","","","","","","","","itron_asp3::kernel::ExitError","itron_asp3::macros","","","","itron_asp3::memorypoolitron_asp3::memorypool::BuildError","","","","","itron_asp3::memorypool::DeleteError","","","","itron_asp3::memorypool::GetError","","","","","","","itron_asp3::memorypool::GetTimeoutError","","","","","","","","itron_asp3::memorypool::InfoError","","","itron_asp3::memorypool::InitializeError","","","itron_asp3::memorypool::ReleaseError","","","","itron_asp3::memorypool::TryGetError","","","","itron_asp3::messagebufferitron_asp3::messagebuffer::InfoError","","","itron_asp3::messagebuffer::InitializeError","","","itron_asp3::messagebuffer::RecvError","","","","","","","itron_asp3::messagebuffer::RecvTimeoutError","","","","","","","","itron_asp3::messagebuffer::SendError","","","","","","","","itron_asp3::messagebuffer::SendTimeoutError","","","","","","","","","itron_asp3::messagebuffer::TryRecvError","","","","itron_asp3::messagebuffer::TrySendError","","","","","itron_asp3::mutexitron_asp3::mutex::BuildError","","","","itron_asp3::mutex::DeleteError","","","","itron_asp3::mutex::InfoError","","","itron_asp3::mutex::InitializeError","","","itron_asp3::mutex::LockError","","","","","","","","","itron_asp3::mutex::LockTimeoutError","","","","","","","","","","itron_asp3::mutex::PriorityProtection","itron_asp3::mutex::TryLockError","","","","","","itron_asp3::mutex::UnlockError","","","","itron_asp3::processor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","itron_asp3::processor::CurrentIdError","itron_asp3::semaphore","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","itron_asp3::semaphore::BuildError","","","","itron_asp3::semaphore::DeleteError","","","","itron_asp3::semaphore::InfoError","","","itron_asp3::semaphore::InitializeError","","","itron_asp3::semaphore::PollError","","","","itron_asp3::semaphore::SignalError","","","","itron_asp3::semaphore::WaitError","","","","","","","itron_asp3::semaphore::WaitTimeoutError","","","","","","","","itron_asp3::task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","itron_asp3::task::ActivateError","","","","itron_asp3::task::ActivateOnError","","","","","","itron_asp3::task::BuildError","","","","itron_asp3::task::CancelActivateAllError","","","itron_asp3::task::CancelWakeAllError","","","","","itron_asp3::task::CurrentIdError","itron_asp3::task::DelayError","","","","itron_asp3::task::DeleteError","","","","itron_asp3::task::DisableTerminationError","","itron_asp3::task::ExitError","itron_asp3::task::InfoError","","","itron_asp3::task::MigrateError","","","","itron_asp3::task::PriorityError","","","","itron_asp3::task::RaiseTerminationError","","","","","itron_asp3::task::ReleaseWaitError","","","","","itron_asp3::task::ResumeError","","","","","itron_asp3::task::SetBasePriorityError","","","","","itron_asp3::task::SleepError","","","","itron_asp3::task::SleepTimeoutError","","","","","itron_asp3::task::StateError","","","itron_asp3::task::SuspendError","","","","","","itron_asp3::task::TerminateError","","","","","itron_asp3::task::WakeError","","","","","","itron_asp3::time","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","itron_asp3::wait","","","","","","","","","","","","",""],"d":["Changelog (<code>CHANGELOG.md</code>)","C API","Closures: <code>(fn(EXINF), EXINF)</code>","Dataqueues","Error types.","Eventflags (TODO)","Interrupts (TODO)","Miscellaneous functions that are not associated to …","Provides macros that allow downstream crates to examine …","Memory pools","Message buffers","Mutexes","Priority dataqueues (TODO)","Multiprocessing","Semaphores","Tasks","Temporal quantification","Shared definitions for waitable objects","アクセス許可パターン","オブジェクトの属性","エラーコード","エラーコードまたは真偽値","エラーコードまたはID番号","エラーコードまたは符号無し整数","CPU例外ハンドラ番号","拡張情報","バッファオーバーフロー","待ちオブジェクトの状態変化","通信エラー","コンテキストエラー","待ちオブジェクトの削除","不正ID番号","サービスコール不正使用","メモリアクセス違反","オブジェクト未生成","ID番号不足","メモリ不足","資源不足","未サポート機能","オブジェクトアクセス違反","オブジェクト状態エラー","正常終了","パラメータエラー","キューイングオーバーフロー","タスクの終了要求","待ち状態の強制解除","予約属性","予約機能コード","システムエラー","ポーリング失敗またはタイムアウト","ノンブロッキング受付け","Represents a falsy value.","イベントフラグのビットパターン","機能コード","プログラムの起動番地","高分解能タイマのカウント値","オブジェクトのID番号","割込みハンドラ番号","割込み番号","","管理領域を確保するためのデータ型","サービスコールの動作モード","…","Non-null version of <code>ID</code>","","プロセッサ時間［NGKI0573］","優先度","相対時間","オブジェクトの状態","システム時刻","カーネルドメインだけにアクセスを許可","すべてのドメインからアクセスを許可","","タスクを起動された状態で生成","優先度上限プロトコル","イベントフラグのクリア指定","起動要求をキューイングしない","オブジェクト属性を指定しない","制約タスク","周期通知を動作状態で生成","待ち行列をタスクの優先度順にする","複数の待ちタスク","タスクの起動","変数のインクリメント","イベントフラグのセット","変数の設定","セマフォの返却","データキューへの送信","タスクの起床","割込み優先度マスク全解除","…","","タイムアウト指定","永久待ち","ノンブロッキング","ポーリング","タスクの起動","タイムイベントハンドラの呼出し","変数のインクリメント","イベントフラグのセット","変数の設定","セマフォの資源の返却","データキューへの送信","タスクの起床","タスクの起動時優先度","自タスクのベース優先度","Represents a truthy value.","該当するタスクがない","自タスク指定","休止状態","実行可能状態","実行状態","強制待ち状態","待ち状態","二重待ち状態","時間経過待ち","イベントフラグ待ち","固定長メモリブロックの獲得待ち","ミューテックスのロック待ち状態","データキューからの受信待ち","メッセージバッファからの受信待ち","優先度データキューからの受信待ち","データキューへの送信待ち","セマフォの資源獲得待ち","起床待ち","メッセージバッファへの送信待ち","優先度データキューへの送信待ち","イベントフラグのAND待ち","イベントフラグのOR待ち","TOPPERS/ASP3 <code>T_CALM</code>","TOPPERS/ASP3 <code>T_CCYC</code>","","","TOPPERS/ASP3 and SOLID/FMP3 <code>T_CISR</code>","","","","","TOPPERS/ASP3 dynamic creation extension <code>T_CTSK</code>","<code>T_NFYINFO::enfy</code>","","","<code>T_NFYINFO::nfy</code>","","","","","","","","","TOPPERS/ASP3 <code>T_RALM</code>","TOPPERS/ASP3 <code>T_RCYC</code>","","","","","","","","","TOPPERS/ASP3 <code>T_RTSK</code>","通常操作1のアクセス許可パターン","通常操作2のアクセス許可パターン","管理操作のアクセス許可パターン","参照操作のアクセス許可パターン","","","","","","","","","","","","起動要求キューイング数","","","アクセス許可ベクタ","","アラーム通知属性","アラーム通知の動作状態","獲得できる固定長メモリブロックの数","固定長メモリブロックのサイズ","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ミューテックスの上限優先度","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","周期通知属性","周期通知の通知位相","周期通知の動作状態","周期通知の通知周期","送信する値","","","","","","","","","","","","","","タスク終了禁止状態","","データキュー属性","…","データキューID","データキューID","データキュー管理領域の先頭番地","","","","エラーの通知に関する付随情報","","","","","","","","","","","","","","","","","","","","","","","","","","","割込みサービスルーチンの拡張情報","タスクの拡張情報","タイムイベントハンドラの拡張情報","","","…","","イベントフラグ属性","イベントフラグID","イベントフラグの現在のビットパターン","セットするビットパターン","…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","…","イベントフラグの初期ビットパターン","","","","","","","","","","自然なサイズの符号付き整数","…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","セマフォの初期資源数","割込みサービスルーチンの先頭番地","割込みサービスルーチン属性","割込みサービスルーチン優先度","タスクの起動時優先度","残りプロセッサ時間 */","次回通知時刻までの相対時間","通知時刻までの相対時間","タイムアウトするまでの時間","","","…","セマフォの最大資源数","固定長メモリプール領域の先頭番地","固定長メモリプール属性","固定長メモリプール管理領域の先頭番地","ミューテックス属性","","","","","","","","","","","","","","","","","","","","","","","","","","","タイムイベントの通知に関する付随情報","周期通知の通知方法","アラーム通知の通知方法","通知処理モード","オーバランハンドラの動作状態 */","変数の番地","変数の番地","変数の番地","優先度データキュー属性","…","優先度データキュー管理領域の先頭番地","","","","","","","","","","","","","","タスク終了要求状態","","","","","","","","","","","","","","","","","","","…","…","…","…","セマフォ属性","セマフォの現在の資源数","セマフォID","","","","","","","","","","","…","","","","","","","","","","","","…","","","","タスクのスタック領域の先頭番地","タスクのスタック領域のサイズ","","","","…","…","…","","タスクのメインルーチンの先頭番地","","","","タイムイベントハンドラの先頭番地","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","タスク属性","タスクのベース優先度","タスクID","タスクの現在優先度","タスク状態","待ち要因","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","自然なサイズの符号無し整数","","","設定する値","","","待ち対象のオブジェクトのID","…","セマフォの待ち行列の先頭のタスクのID番号","…","…","","起床要求キューイング数","","","","A bundle of a function pointer and associated data.","Conversion to <code>Closure</code>.","Convert <code>self</code> to <code>Closure</code>.","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Bad parameter.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>Dataqueue::build</code>.","The builder type for dataqueues. Created by …","The unit of data that can be sent through a dataqueue.","An owned dataqueue.","A borrowed reference to a dataqueue.","Error type for <code>DataqueueRef::delete</code>.","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Dataqueue information returned by <code>DataqueueRef::info</code>.","Error type for <code>DataqueueRef::info</code>.","Error type for <code>DataqueueRef::initialize</code>.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","Ran out of memory or dataqueue IDs, or the specified …","Error type for <code>DataqueueRef::recv</code>.","Error type for <code>DataqueueRef::recv_timeout</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>DataqueueRef::send</code>.","Error type for <code>DataqueueRef::send_forced</code>.","Error type for <code>DataqueueRef::send_timeout</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>DataqueueRef::try_recv</code>.","Error type for <code>DataqueueRef::try_send</code>.","The queue length is zero.","Get the raw object ID.","Get the raw object ID.","Get the raw object ID as <code>abi::NonNullID</code>.","Get the raw object ID as <code>abi::NonNullID</code>.","Borrow <code>Dataqueue</code> as <code>DataqueueRef</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>acre_dtq</code>: Create a builder for <code>Dataqueue</code>.","(<strong>Mandatory</strong>) Specify the dataqueue’s capacity, measured in","","","","","","","","","","","","","","<code>del_dtq</code>: Delete the dataqueue.","","","","","","","","","","","","","","","Create a dataqueue using the specified parameters.","Get the first waiting receiver’s task ID.","Get the first waiting sender’s task ID.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a <code>DataqueueRef</code> from a raw object ID.","Construct a <code>Dataqueue</code> from a raw object ID.","<code>ref_dtq</code>: Get the dataqueue’s general information.","<code>ini_sem</code>: Initialize the dataqueue.","","","","","","","","","","","","","","","","Get a flag indicating whether the dataqueue is empty.","Consume and “leak” <code>self</code>, returning a reference …","Get the number of data items contained in the dataqueue.","","","","","","","","","","","","","","Specify the queue order. Defaults to <code>Fifo</code> when unspecified.","<code>rcv_dtq</code>: Receive a data element from the dataqueue. Blocks …","<code>trcv_dtq</code>: Receive a data element to the dataqueue. Blocks …","<code>snd_dtq</code>: Send a data element to the dataqueue. Blocks the …","<code>fsnd_dtq</code>: Send a data element to the dataqueue. Removes (…","<code>tsnd_dtq</code>: Send a data element to the dataqueue. Blocks the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>prcv_dtq</code>: Receive a data element to the dataqueue. Fails …","<code>psnd_dtq</code>: Send a data element to the dataqueue. Fails and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Target-specific error value that can be categorized as one …","Raw error code.","Trait for error kind types.","Type for error kinds that are valid in the current target …","Placeholder for error kind variants.","Indicates that the error kind never occurs in the current …","","","","","","","","","","","","","Get the error code.","","","","","","","","","","","","","","Categorize the specified error code.","Get the numerical value.","","","","","Get the error kind.","","","","Construct an <code>ErrorCode</code>.","Construct <code>Error</code>.","Construct an <code>ErrorCode</code> without checking if <code>code</code> is a valid …","","","","","","","","","","","","","Requires: <code>cfg(any())</code>","Error type for <code>exit</code>.","","","","","<code>ext_ker</code>: Terminate the kernel.","","","","","<code>sns_loc</code>: Get a flag indicating whether the CPU lock state …","<code>sns_dpn</code>: Get a flag indicating whether the dispatch …","<code>sns_dsp</code>: Get a flag indicating whether dispatching is …","<code>sns_ker</code>: Get a flag indicating whether the kernel is in an …","<code>sns_ctx</code>: Get a flag indicating whether the current thread …","","","","","","Expand to the current kernel’s name (e.g., <code>&quot;asp3&quot;</code>).","Expand to the arm corresponding to the current kernel.","Determine if this crate was compiled for the specified …","Get the kernel selected by a Cargo feature.","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","The supplied memory block does not originate from the …","Bad parameter.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","A pointer to a memory block.","Error type for <code>MemoryPool::build</code>.","The builder type for memory pools. Created by …","Error type for <code>MemoryPoolRef::delete</code>.","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Error type for <code>MemoryPoolRef::get</code>.","Error type for <code>MemoryPoolRef::get_timeout</code>.","Memory pool information returned by <code>MemoryPoolRef::info</code>.","Error type for <code>MemoryPoolRef::info</code>.","Error type for <code>MemoryPoolRef::initialize</code>.","An owned memory pool.","A borrowed reference to a memory pool.","The task is a restricted task.","The task is a restricted task.","The specified parameter is not supported by the kernel.","Ran out of memory or memory pool IDs, or the specified …","Error type for <code>MemoryPoolRef::release</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>MemoryPoolRef::try_get</code>.","Get the raw object ID.","Get the raw object ID.","Get the raw object ID as <code>abi::NonNullID</code>.","Get the raw object ID as <code>abi::NonNullID</code>.","Borrow <code>MemoryPool</code> as <code>MemoryPoolRef</code>.","(<strong>Mandatory</strong>) Specify the capacity, measured in number of …","(<strong>Mandatory</strong>) Specify the block size.","","","","","","","","","","","","","","","","","","","","","","","","","<code>acre_mpf</code>: Create a builder for <code>MemoryPool</code>.","","","","","","","","","","","<code>del_mpf</code>: Delete the memory pool.","","","","","","","","","","","","Create a memory pool using the specified parameters.","Get the first waiting task’s ID.","","","","","","","","","","","","Get the number of free memory blocks.","","","","","","","","","","","","","","","","","","","","","Construct a <code>MemoryPoolRef</code> from a raw object ID.","Construct a <code>MemoryPool</code> from a raw object ID.","<code>get_mpf</code>: Acquire a memory block. Blocks the current task …","<code>tget_mpf</code>: Acquire a memory block. Blocks the current task …","<code>ref_mpf</code>: Get the memory pool’s general information.","<code>ini_mpf</code>: Initialize the memory pool.","","","","","","","","","","","","","Consume and “leak” <code>self</code>, returning a reference …","","","","","","","","","","","Specify the queue order. Defaults to <code>Fifo</code> when unspecified.","<code>rel_mpf</code>: Return a memory block to the memory pool.","","","","","","","","","","","","","<code>pget_mpf</code>: Acquire a memory block. Fails and returns …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","The message is too large (<code>E_PAR</code>, NGKI3364).","The message is too large (<code>E_PAR</code>, NGKI3364).","The message is too large (<code>E_PAR</code>, NGKI3364).","Requires: …","Requires: …","Requires: …","Requires: …","Message buffer information returned by …","Error type for <code>MessageBufferRef::info</code>.","Error type for <code>MessageBufferRef::initialize</code>.","A borrowed reference to a message buffer.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","Error type for <code>MessageBufferRef::recv</code>.","Error type for <code>MessageBufferRef::recv_timeout</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>MessageBufferRef::send</code>.","Error type for <code>MessageBufferRef::send_timeout</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>MessageBufferRef::try_recv</code>.","Error type for <code>MessageBufferRef::try_send</code>.","Literally anything.","Get the raw object ID.","Get the raw object ID as <code>abi::NonNullID</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the first waiting receiver’s task ID.","Get the first waiting sender’s task ID.","","","","","","","","","","","Get the number of free bytes.","","","","","","","","","","","","","","","","","","","Construct a <code>MessageBufferRef</code> from a raw object ID.","<code>ref_mbf</code>: Get the message buffer’s general information.","<code>ini_mbf</code>: Initialize the message buffer.","","","","","","","","","","","Get a flag indicating whether the message buffer is empty …","Get the number of stored messages.","","","","","","","","","","<code>rcv_mbf</code>: Receive a message from the message buffer. Blocks …","<code>trcv_mbf</code>: Receive a message to the message buffer. Blocks …","<code>snd_mbf</code>: Send a message to the message buffer. Blocks the …","<code>tsnd_mbf</code>: Send a message to the message buffer. Blocks the …","","","","","","","","","","","","","","","","","","","","","<code>prcv_mbf</code>: Receive a message to the message buffer. Fails …","<code>psnd_mbf</code>: Send a message to the message buffer. Fails and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","The calling task’s priority is higher than the mutex’s …","The calling task’s priority is higher than the mutex’s …","The calling task’s priority is higher than the mutex’s …","Bad parameter.","The mutex is not the lastly-locked mutex currently owned …","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>Mutex::build</code>.","The builder type for mutexes. Created by <code>Mutex::build</code>.","The priority ceiling protocol.","The calling task already owns the mutex.","The calling task already owns the mutex.","The calling task already owns the mutex.","Error type for <code>MutexRef::delete</code>.","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Mutex information returned by <code>MutexRef::info</code>.","Error type for <code>MutexRef::info</code>.","Error type for <code>MutexRef::initialize</code>.","Error type for <code>MutexRef::lock</code>.","Error type for <code>MutexRef::lock_timeout</code>.","An owned mutex.","A borrowed reference to a mutex.","No priority protection.","The task is a restricted task.","The task is a restricted task.","Ran out of mutex IDs.","Specifies a priority protection protocol used by a mutex.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>MutexRef::try_lock</code>.","Error type for <code>MutexRef::unlock</code>.","Get the raw object ID.","Get the raw object ID.","Get the raw object ID as <code>abi::NonNullID</code>.","Get the raw object ID as <code>abi::NonNullID</code>.","Borrow <code>Mutex</code> as <code>MutexRef</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>acre_mtx</code>: Create a builder for <code>Mutex</code>.","","","","","","","","","","","","<code>del_mtx</code>: Delete the mutex.","","","","","","","","","","","","","Create a mutex using the specified parameters.","Get the first waiting task’s ID.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a <code>MutexRef</code> from a raw object ID.","Construct a <code>Mutex</code> from a raw object ID.","<code>ref_mtx</code>: Get the mutex’s general information.","Return <code>Some(Self::Inherit)</code> if it’s supported by the …","<code>ini_mtx</code>: Initialize the mutex.","","","","","","","","","","","","","","Consume and “leak” <code>self</code>, returning a reference …","<code>loc_mtx</code>: Lock the mutex.","<code>tloc_mtx</code>: Lock the mutex with timeout.","","","","","","","","","","","","Get the owning task’s ID.","Specify the priority protection mechanism to use. Defaults …","Specify the queue order. Defaults to <code>Fifo</code> when unspecified.","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>ploc_mtx</code>: Attempt to lock the mutex. Returns immediately …","","","","","","","","","","","","","","<code>unl_mtx</code>: Unlock the mutex.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specifies the priority ceiling.","","","","","","","","","","","The CPU lock state is active.","Error type for <code>current</code>.","Refers to a single processor in a multi-processor system. …","The error type returned when a conversion from <code>usize</code> to …","The only procesor in a uniprocessor system.","","","","","","","","","","<code>get_pid</code>: Get the current processor’s ID.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Bad parameter.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>Semaphore::build</code>.","The builder type for semaphores. Created by …","Semaphore count.","Error type for <code>SemaphoreRef::delete</code>.","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Semaphore information returned by <code>SemaphoreRef::info</code>.","Error type for <code>SemaphoreRef::info</code>.","Error type for <code>SemaphoreRef::initialize</code>.","The task is a restricted task.","The task is a restricted task.","Ran out of semaphore IDs.","Error type for <code>SemaphoreRef::poll</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","An owned semaphore.","A borrowed reference to a semaphore.","Error type for <code>SemaphoreRef::signal</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>SemaphoreRef::wait</code>.","Error type for <code>SemaphoreRef::wait_timeout</code>.","Get the raw object ID.","Get the raw object ID.","Get the raw object ID as <code>abi::NonNullID</code>.","Get the raw object ID as <code>abi::NonNullID</code>.","Borrow <code>Semaphore</code> as <code>SemaphoreRef</code>.","","","","","","","","","","","","","","","","","","","","","","","","","<code>acre_sem</code>: Create a builder for <code>Semaphore</code>.","","","","","","","","","","","Get the semaphore’s count.","<code>del_sem</code>: Delete the semaphore.","","","","","","","","","","","","Create a semaphore using the specified parameters.","Get the first waiting task’s ID.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a <code>SemaphoreRef</code> from a raw object ID.","Construct a <code>Semaphore</code> from a raw object ID.","<code>ref_sem</code>: Get the semaphore’s general information.","Specify the initial count. Defaults to <code>max_count</code> when …","<code>ini_sem</code>: Initialize the semaphore.","","","","","","","","","","","","","Consume and “leak” <code>self</code>, returning a reference …","Specify the maximum count. Defaults to <code>1</code> when unspecified.","","","","","","","","","","","<code>pol_sem</code>: Decrement the semaphore count by one. Fails and …","Specify the queue order. Defaults to <code>Fifo</code> when unspecified.","<code>sig_sem</code>: Increment the semaphore count by one.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>wai_sem</code>: Decrement the semaphore count by one. Blocks the …","<code>twai_sem</code>: Decrement the semaphore count by one. Blocks the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Error type for <code>TaskRef::activate</code>.","Error type for <code>TaskRef::activate_on</code>.","An instance of <code>IntoProcessorSet</code> specifying all processors.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: …","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","The CPU lock state is active.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","The error type returned by <code>current</code> when the CPU lock state …","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: …","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","The class the task belongs to does not permit assigning …","Bad parameter.","Bad parameter.","Bad parameter.","Bad state.","Bad parameter.","The task is dormant.","The task is dormant.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Bad state.","Bad state.","Bad state.","Bad state.","Bad state.","Bad state.","Bad state.","Error type for <code>Task::build</code>.","The builder type for tasks. Created by <code>Task::build</code>.","Error type for <code>TaskRef::cancel_activate_all</code>.","Error type for <code>TaskRef::cancel_wake_all</code>.","Represents a reference to the current task. Returned by …","Error type for <code>current_id</code>.","Error type for <code>delay</code>.","Error type for <code>TaskRef::delete</code>.","Error type for <code>disable_termination</code>.","","Error type for <code>enable_termination</code>.","Error type for <code>exit</code>.","Task information returned by <code>TaskRef::info</code>.","Error type for <code>TaskRef::info</code>.","The trait implemented by types that can be passed to …","Error type for <code>TaskRef::migrate</code>.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","Ran out of memory or task IDs.","Task priority value.","Error type for <code>TaskRef::priority</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","The task is already suspended.","Error type for <code>TaskRef::raise_termination</code>.","","Error type for <code>TaskRef::release_wait</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>TaskRef::resume</code>.","","Error type for <code>TaskRef::set_base_priority</code>.","Error type for <code>sleep</code>.","Error type for <code>sleep_timeout</code>.","Task state returned by <code>TaskRef::state</code>.","Error type for <code>TaskRef::state</code>.","Error type for <code>TaskRef::suspend</code>.","","An owned task.","A borrowed reference to a task.","Error type for <code>TaskRef::terminate</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","","","Error type for <code>TaskRef::wake</code>.","<code>act_tsk</code>: Pend an activation request for the task.","<code>mact_tsk</code>: Pend an activation request for the task, …","Get the raw object ID.","Get the raw object ID.","Get the raw object ID.","Get the raw object ID as <code>abi::NonNullID</code>.","Get the raw object ID as <code>abi::NonNullID</code>.","Get the raw object ID as <code>abi::NonNullID</code>.","Borrow <code>Current</code> as <code>TaskRef</code>.","Borrow <code>Task</code> as <code>TaskRef</code>.","Get the task’s base priority.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>acre_tsk</code>: Create a builder for <code>Task</code>.","<code>can_act</code>: Cancel any pending activation requests for the …","<code>can_wup</code>: Cancel any wake up requests for the task. Returns …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a reference to the current task.","<code>get_tid</code>: Get the currently running task’s ID.","Get the task’s current priority.","","<code>dly_tsk</code>: Delay the current task.","<code>del_tsk</code>: Delete the task.","<code>dis_ter</code>: Disable the termination of the current task by a …","","<code>ena_ter</code>: Re-enable the termination of the current task by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>ext_tsk</code>: Terminate the current task.","Create a task using the specified parameters.","Create and activate a task using the specified parameters.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a <code>TaskRef</code> from a raw object ID.","Construct a <code>Task</code> from a raw object ID.","","","<code>ref_tsk</code>: Get the task’s general information.","(<strong>Mandatory</strong>) Specify the initial priority.","Specify the task’s initial assigned processor. Defaults …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>sns_ter</code>: Determine if the termination by a termination …","Consume and “leak” <code>self</code>, returning a reference …","<code>mig_tsk</code>: Change the task’s assigned processor.","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>get_pri</code>: Get the task’s priority.","Specify the task’s assignable processsor set. Defaults …","<code>ras_ter</code>: Pend a termination request.","<code>rel_wai</code>: Forcibly release the task from waiting.","<code>rsm_tsk</code>: Resume the task.","<code>chg_pri</code>: Change the task’s base priority.","<code>slp_tsk</code>: Put the current task to sleep.","<code>dly_tsk</code>: Put the current task to sleep with timeout.","(<strong>Mandatory</strong>) Specify to use an automatically allocated stack","(<strong>Mandatory</strong>) Specify the entry point.","Get the task’s state.","<code>get_tst</code>: Get the task’s state.","<code>sus_tsk</code>: Suspend the task.","<code>ter_tsk</code>: Terminate the task.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>wup_tsk</code>: Pend a wake up request for the task.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A valid relative time value (<code>abi::RELTIM</code>).","The infinite timeout value.","A valid timeout value (<code>abi::TMO</code>).","The error type returned when a checked duration conversion …","The zero duration, which causes polling.","The zero timeout value, which causes polling.","","","","","","","","","","","","","Construct a <code>Duration</code> value in a concise syntax. Panics if …","Construct a <code>Duration</code> value in a concise syntax. Panics if …","","","","","","","","Construct a new <code>Duration</code> from the specified number of …","Construct a new <code>Timeout</code> from the specified number of …","Construct a new <code>Duration</code> from the specified number of …","Construct a new <code>Timeout</code> from the specified number of …","Construct a new <code>Duration</code> from the specified number of …","Construct a new <code>Timeout</code> from the specified number of …","Construct a new <code>Duration</code> from a raw value.","Construct a new <code>Timeout</code> from a raw value.","Construct a new <code>Duration</code> from the specified number of …","Construct a new <code>Timeout</code> from the specified number of …","","","","","","","","","","","Construct a <code>Timeout</code> value in a concise syntax. Panics if …","Construct a <code>Timeout</code> value in a concise syntax. Panics if …","","","","","","","","","","","","","","The wait queue is processed in a FIFO order.","Specifies the sorting order of a wait queue.","The wait queue is processed in a task priority order.","Convert <code>self</code> to a value of type <code>abi::ATR</code>.","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,2,3,4,0,0,5,6,7,7,0,8,9,7,10,11,12,13,14,15,16,17,18,19,20,21,2,22,6,23,24,5,25,3,4,26,27,28,29,30,31,32,33,34,1,8,9,7,10,11,12,13,14,15,16,17,18,19,20,21,2,22,6,23,24,5,25,3,4,26,27,28,29,30,31,32,33,34,1,0,0,20,0,0,0,8,9,7,10,11,12,13,14,15,16,17,18,19,20,21,2,22,6,23,24,5,25,3,4,26,27,28,29,30,31,32,33,34,1,0,0,24,24,22,24,32,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,18,18,32,34,18,0,0,0,25,9,7,10,11,12,13,14,15,16,17,18,19,20,2,22,6,23,27,28,29,30,31,32,33,34,1,8,21,26,0,0,9,0,17,31,11,31,15,9,7,10,11,12,13,14,15,16,17,18,19,20,21,2,22,6,23,26,27,28,29,30,31,32,33,34,1,8,9,7,10,11,12,13,14,15,16,17,18,19,20,21,2,22,6,23,24,5,25,3,4,26,27,28,29,30,31,32,33,34,1,0,0,0,0,0,0,0,0,0,0,3,14,17,3,4,0,0,0,0,0,0,0,0,8,8,9,7,10,11,12,13,14,15,16,17,18,19,20,21,2,22,6,23,24,5,25,3,4,26,27,28,29,30,31,32,33,34,1,16,8,8,8,21,23,22,6,2,0,0,19,16,7,7,7,20,9,7,10,11,12,13,14,15,16,17,18,19,20,2,22,6,23,27,28,29,30,31,32,33,34,1,25,24,5,25,23,27,28,33,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,13,15,12,16,10,30,0,0,3,4,3,4,0,3,4,0,15,0,0,0,3,4,0,0,0,0,0,0,13,0,0,0,21,21,0,0,0,12,13,15,0,21,0,0,0,26,0,0,0,8,9,7,10,11,12,13,14,15,16,17,18,19,20,21,2,22,6,23,24,5,25,3,4,26,27,28,29,30,31,32,33,34,1,8,9,7,10,11,12,13,14,15,16,17,18,19,20,21,2,22,6,23,24,5,25,3,4,26,27,28,29,30,31,32,33,34,1,21,2,29,2,2,2,0,0,0,0,0,0,8,9,7,10,11,12,13,14,15,16,17,18,19,20,21,2,22,6,23,24,5,25,3,4,26,27,28,29,30,31,32,33,34,1,0,0,0,27,0,0,2,9,10,11,14,0,2,3,4,0,0,0,35,36,37,38,39,40,41,42,43,44,45,46,36,37,38,39,40,41,42,43,44,45,46,36,37,38,39,40,41,42,43,44,46,45,46,0,0,0,0,0,0,36,37,40,41,0,0,0,36,37,40,41,45,0,0,36,37,40,41,0,0,0,36,37,40,41,37,38,41,42,0,0,39,47,48,47,48,48,49,36,37,38,39,40,41,42,43,44,45,46,50,47,48,49,36,37,38,39,40,41,42,43,44,45,46,50,47,48,48,49,36,37,38,39,40,41,42,43,44,45,46,50,47,47,48,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,50,36,37,38,39,40,41,42,43,44,45,46,50,47,48,49,36,37,38,39,40,41,42,43,44,45,46,50,47,48,36,37,38,39,40,41,42,43,44,45,46,47,48,47,47,49,36,37,38,39,40,41,42,43,44,45,46,50,47,48,50,48,50,36,37,38,39,40,41,42,43,44,45,46,47,48,49,47,47,47,47,47,49,36,37,38,39,40,41,42,43,44,45,46,50,47,48,49,36,37,38,39,40,41,42,43,44,45,46,50,47,48,47,47,49,36,37,38,39,40,41,42,43,44,45,46,50,47,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,0,0,0,0,0,0,108,109,107,110,108,109,107,110,108,109,107,110,108,108,109,107,110,108,109,107,110,108,109,109,107,110,111,109,108,109,107,110,108,108,109,107,109,108,109,108,109,107,110,108,109,107,110,108,109,107,110,112,0,112,112,112,112,0,112,112,112,112,0,0,0,0,0,112,112,112,112,113,0,0,0,0,114,115,116,117,118,119,120,121,114,115,116,117,118,119,120,121,114,115,116,117,118,119,121,117,120,121,0,0,0,0,114,115,0,0,0,0,0,0,0,114,115,120,120,0,114,115,114,115,115,116,0,122,123,122,123,123,124,124,124,114,115,116,117,118,119,120,121,125,122,123,124,114,115,116,117,118,119,120,121,125,122,123,123,114,115,116,117,118,119,120,121,125,122,122,123,114,115,116,117,118,119,120,121,122,123,124,125,114,115,116,117,118,119,120,121,125,122,123,125,124,114,115,116,117,118,119,120,121,125,122,123,114,115,116,117,118,119,120,121,122,123,122,122,122,122,124,114,115,116,117,118,119,120,121,125,122,123,123,114,115,116,117,118,119,120,121,122,123,124,122,124,114,115,116,117,118,119,120,121,125,122,123,122,124,114,115,116,117,118,119,120,121,125,122,123,124,114,115,116,117,118,119,120,121,125,122,123,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,164,165,166,167,168,169,170,171,164,165,166,167,168,169,170,171,164,165,166,164,165,167,168,0,0,0,0,164,165,167,168,0,0,164,165,167,168,0,0,164,165,167,168,165,166,168,169,0,0,0,172,172,164,165,166,167,168,169,170,171,173,172,164,165,166,167,168,169,170,171,173,172,164,165,166,167,168,169,170,171,173,172,164,165,166,167,168,169,170,171,172,173,173,164,165,166,167,168,169,170,171,173,172,173,164,165,166,167,168,169,170,171,173,172,164,165,166,167,168,169,170,171,172,172,172,164,165,166,167,168,169,170,171,173,172,173,173,164,165,166,167,168,169,170,171,172,172,172,172,172,164,165,166,167,168,169,170,171,173,172,164,165,166,167,168,169,170,171,173,172,172,172,164,165,166,167,168,169,170,171,173,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,221,222,223,224,225,226,227,228,221,222,223,224,225,226,228,221,222,223,227,224,228,0,0,229,221,222,223,0,221,222,0,0,0,0,0,0,0,229,221,222,227,0,221,222,221,222,222,223,0,0,230,231,230,231,231,232,221,222,223,224,225,226,227,228,233,230,229,231,232,221,222,223,224,225,226,227,228,233,230,229,231,231,221,222,223,224,225,226,227,228,233,230,229,230,231,221,222,223,224,225,226,227,228,230,229,231,232,233,221,222,223,224,225,226,227,228,233,230,229,231,232,221,222,223,224,225,226,227,228,233,230,229,231,221,222,223,224,225,226,227,228,230,231,230,229,230,232,221,222,223,224,225,226,227,228,233,230,229,231,231,230,230,221,222,223,224,225,226,227,228,230,229,231,233,232,232,232,221,222,223,224,225,226,227,228,233,230,229,231,232,221,222,223,224,225,226,227,228,233,230,229,231,230,232,221,222,223,224,225,226,227,228,233,230,229,231,230,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,0,0,0,279,278,279,280,278,279,280,278,279,280,0,278,279,280,278,279,280,278,279,280,278,278,279,280,278,279,280,278,279,279,280,278,279,280,278,279,280,281,282,283,284,285,286,287,288,289,282,283,284,285,286,287,288,289,282,283,284,285,286,287,289,288,289,0,0,0,0,283,284,0,0,0,283,284,288,0,282,283,284,0,0,0,283,284,284,285,0,0,290,291,290,291,291,292,282,283,284,285,286,287,288,289,293,290,291,292,282,283,284,285,286,287,288,289,293,290,291,291,282,283,284,285,286,287,288,289,293,290,293,290,291,282,283,284,285,286,287,288,289,290,291,292,293,282,283,284,285,286,287,288,289,293,290,291,292,282,283,284,285,286,287,288,289,293,290,291,282,283,284,285,286,287,288,289,290,291,290,292,290,292,282,283,284,285,286,287,288,289,293,290,291,291,292,282,283,284,285,286,287,288,289,290,291,290,292,290,292,282,283,284,285,286,287,288,289,293,290,291,292,282,283,284,285,286,287,288,289,293,290,291,292,282,283,284,285,286,287,288,289,293,290,291,290,290,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,0,0,0,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,349,350,351,352,347,353,348,0,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,332,334,336,345,346,348,334,335,337,340,341,342,343,344,345,346,0,0,0,0,0,0,0,0,0,354,0,0,0,0,0,0,332,340,341,342,343,344,349,350,351,348,0,0,331,332,340,343,0,354,0,349,350,351,0,354,0,0,0,0,0,0,354,0,0,0,349,350,351,350,354,354,0,355,355,355,356,357,355,356,357,356,357,358,359,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,349,350,351,352,347,360,353,348,354,358,355,356,361,357,359,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,349,350,351,352,347,360,353,348,354,358,355,356,361,357,357,355,355,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,349,350,351,352,347,360,353,348,354,358,355,356,361,0,0,358,361,0,355,0,357,0,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,349,350,351,352,347,360,353,348,354,355,361,357,0,359,359,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,349,350,351,352,347,360,353,348,354,358,355,356,361,357,359,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,349,350,351,352,347,360,353,348,354,358,355,356,361,357,331,332,333,334,335,337,338,339,340,341,342,343,344,345,346,349,350,351,352,347,353,348,355,357,360,354,355,359,359,359,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,349,350,351,352,347,360,353,348,354,358,355,356,361,357,0,357,355,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,349,350,351,352,347,360,353,348,355,357,355,359,355,355,355,355,0,0,359,359,358,355,355,355,359,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,349,350,351,352,347,360,353,348,354,358,355,356,361,357,359,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,349,350,351,352,347,360,353,348,354,358,355,356,361,357,359,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,349,350,351,352,347,360,353,348,354,358,355,356,361,357,355,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,0,456,0,0,457,456,457,456,458,457,456,458,457,456,457,456,457,456,0,0,457,456,457,456,458,457,456,457,456,457,456,457,456,457,456,457,456,457,456,458,457,456,456,457,456,457,456,0,0,458,457,457,457,456,456,456,458,457,456,458,457,456,459,0,459,459,459,459,459,459,459,459,459,459,459,459],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[],["t_cisr",3]],[[],["t_rmpf",3]],[[],["t_cmpf",3]],[[],["t_rsem",3]],[[],["t_rflg",3]],[[],["t_rdtq",3]],[[],["t_rpdq",3]],[[],["t_rmtx",3]],[[],["t_rmbf",3]],[[],["t_csem",3]],[[],["t_cflg",3]],[[],["t_cdtq",3]],[[],["t_cpdq",3]],[[],["t_cmtx",3]],[[],["t_ctsk",3]],[[],["t_rtsk",3]],[[],["t_rcyc",3]],[[],["t_ralm",3]],[[],["t_rovr",3]],[[],["t_ccyc",3]],[[],["t_calm",3]],[[],["t_nfyinfo",3]],[[],["t_nfy",19]],[[],["t_enfy",19]],[[],["t_nfy_hdr",3]],[[],["t_nfy_var",3]],[[],["t_nfy_ivar",3]],[[],["t_nfy_tsk",3]],[[],["t_nfy_sem",3]],[[],["t_nfy_flg",3]],[[],["t_nfy_dtq",3]],[[],["t_enfy_var",3]],[[],["t_enfy_dtq",3]],[[],["acvct",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["t_rmpf",3]],["bool",15]],[[["t_cmpf",3]],["bool",15]],[[["t_rsem",3]],["bool",15]],[[["t_rflg",3]],["bool",15]],[[["t_rdtq",3]],["bool",15]],[[["t_rpdq",3]],["bool",15]],[[["t_rmtx",3]],["bool",15]],[[["t_rmbf",3]],["bool",15]],[[["t_csem",3]],["bool",15]],[[["t_cflg",3]],["bool",15]],[[["t_cdtq",3]],["bool",15]],[[["t_cpdq",3]],["bool",15]],[[["t_cmtx",3]],["bool",15]],[[["t_rtsk",3]],["bool",15]],[[["t_rcyc",3]],["bool",15]],[[["t_ralm",3]],["bool",15]],[[["t_rovr",3]],["bool",15]],[[["t_nfy_var",3]],["bool",15]],[[["t_nfy_ivar",3]],["bool",15]],[[["t_nfy_tsk",3]],["bool",15]],[[["t_nfy_sem",3]],["bool",15]],[[["t_nfy_flg",3]],["bool",15]],[[["t_nfy_dtq",3]],["bool",15]],[[["t_enfy_var",3]],["bool",15]],[[["t_enfy_dtq",3]],["bool",15]],[[["acvct",3]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["t_rmpf",3]],["bool",15]],[[["t_cmpf",3]],["bool",15]],[[["t_rsem",3]],["bool",15]],[[["t_rflg",3]],["bool",15]],[[["t_rdtq",3]],["bool",15]],[[["t_rpdq",3]],["bool",15]],[[["t_rmtx",3]],["bool",15]],[[["t_rmbf",3]],["bool",15]],[[["t_csem",3]],["bool",15]],[[["t_cflg",3]],["bool",15]],[[["t_cdtq",3]],["bool",15]],[[["t_cpdq",3]],["bool",15]],[[["t_cmtx",3]],["bool",15]],[[["t_rtsk",3]],["bool",15]],[[["t_rcyc",3]],["bool",15]],[[["t_ralm",3]],["bool",15]],[[["t_rovr",3]],["bool",15]],[[["t_nfy_var",3]],["bool",15]],[[["t_nfy_ivar",3]],["bool",15]],[[["t_nfy_tsk",3]],["bool",15]],[[["t_nfy_sem",3]],["bool",15]],[[["t_nfy_flg",3]],["bool",15]],[[["t_nfy_dtq",3]],["bool",15]],[[["t_enfy_var",3]],["bool",15]],[[["t_enfy_dtq",3]],["bool",15]],[[["acvct",3]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["closure",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["id",6]],[[],["id",6]],[[],["nonnullid",6]],[[],["nonnullid",6]],[[],["dataqueueref",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["builder",3,[["__capacity_is_not_specified__",3]]]],[[["usize",15]],["builder",3]],[[],["senderror",4]],[[],["sendtimeouterror",4]],[[],["trysenderror",4]],[[],["sendforcederror",4]],[[],["recverror",4]],[[],["recvtimeouterror",4]],[[],["tryrecverror",4]],[[],["initializeerror",4]],[[],["infoerror",4]],[[],["builderror",4]],[[],["deleteerror",4]],[[],["info",3]],[[],["dataqueueref",3]],[[],["result",4,[["error",3,[["deleteerror",4]]]]]],[[]],[[["senderror",4]],["bool",15]],[[["sendtimeouterror",4]],["bool",15]],[[["trysenderror",4]],["bool",15]],[[["sendforcederror",4]],["bool",15]],[[["recverror",4]],["bool",15]],[[["recvtimeouterror",4]],["bool",15]],[[["tryrecverror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["builderror",4]],["bool",15]],[[["deleteerror",4]],["bool",15]],[[["dataqueueref",3]],["bool",15]],[[["dataqueue",3]],["bool",15]],[[],["result",4,[["dataqueue",3],["error",3,[["builderror",4]]]]]],[[],["option",4,[["nonnullid",6]]]],[[],["option",4,[["nonnullid",6]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["nonnullid",6]]],[[["nonnullid",6]]],[[],["result",4,[["info",3],["error",3,[["infoerror",4]]]]]],[[],["result",4,[["error",3,[["initializeerror",4]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["dataqueueref",3]],[[],["usize",15]],[[["senderror",4]],["bool",15]],[[["sendtimeouterror",4]],["bool",15]],[[["trysenderror",4]],["bool",15]],[[["sendforcederror",4]],["bool",15]],[[["recverror",4]],["bool",15]],[[["recvtimeouterror",4]],["bool",15]],[[["tryrecverror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["builderror",4]],["bool",15]],[[["deleteerror",4]],["bool",15]],[[["dataqueueref",3]],["bool",15]],[[["dataqueue",3]],["bool",15]],[[["queueorder",4]]],[[],["result",4,[["dataelement",6],["error",3,[["recverror",4]]]]]],[[["timeout",3]],["result",4,[["dataelement",6],["error",3,[["recvtimeouterror",4]]]]]],[[["dataelement",6]],["result",4,[["error",3,[["senderror",4]]]]]],[[["dataelement",6]],["result",4,[["error",3,[["sendforcederror",4]]]]]],[[["dataelement",6],["timeout",3]],["result",4,[["error",3,[["sendtimeouterror",4]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["dataelement",6],["error",3,[["tryrecverror",4]]]]]],[[["dataelement",6]],["result",4,[["error",3,[["trysenderror",4]]]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["error",3]],[[],["errorcode",3]],[[],["kind",3]],[[],["never",4]],[[],["errorcode",3]],[[["error",3]],["bool",15]],[[["errorcode",3]],["bool",15]],[[["kind",3]],["bool",15]],[[["never",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["error",3]]],[[]],[[]],[[]],[[["errorcode",3]],["option",4]],[[],["er",6]],[[]],[[]],[[]],[[]],[[]],[[["error",3]],["bool",15]],[[["errorcode",3]],["bool",15]],[[["kind",3]],["bool",15]],[[["er",6]],["option",4]],[[["errorcode",3]]],[[["er",6]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[],["exiterror",4]],[[["exiterror",4]],["bool",15]],[[],["error",3,[["exiterror",4]]]],[[["formatter",3]],["result",6]],[[]],[[["errorcode",3]],["option",4]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["exiterror",4]],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["id",6]],[[],["id",6]],[[],["nonnullid",6]],[[],["nonnullid",6]],[[],["memorypoolref",3]],[[["usize",15]],["builder",3]],[[["usize",15]],["builder",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["builder",3,[["__block_size_is_not_specified__",3],["__block_count_is_not_specified__",3]]]],[[],["geterror",4]],[[],["gettimeouterror",4]],[[],["trygeterror",4]],[[],["releaseerror",4]],[[],["initializeerror",4]],[[],["infoerror",4]],[[],["builderror",4]],[[],["deleteerror",4]],[[],["info",3]],[[],["memorypoolref",3]],[[],["result",4,[["error",3,[["deleteerror",4]]]]]],[[]],[[["geterror",4]],["bool",15]],[[["gettimeouterror",4]],["bool",15]],[[["trygeterror",4]],["bool",15]],[[["releaseerror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["builderror",4]],["bool",15]],[[["deleteerror",4]],["bool",15]],[[["memorypoolref",3]],["bool",15]],[[["memorypool",3]],["bool",15]],[[],["result",4,[["memorypool",3],["error",3,[["builderror",4]]]]]],[[],["option",4,[["nonnullid",6]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["nonnullid",6]]],[[["nonnullid",6]]],[[],["result",4,[["block",6],["error",3,[["geterror",4]]]]]],[[["timeout",3]],["result",4,[["block",6],["error",3,[["gettimeouterror",4]]]]]],[[],["result",4,[["info",3],["error",3,[["infoerror",4]]]]]],[[],["result",4,[["error",3,[["initializeerror",4]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["memorypoolref",3]],[[["geterror",4]],["bool",15]],[[["gettimeouterror",4]],["bool",15]],[[["trygeterror",4]],["bool",15]],[[["releaseerror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["builderror",4]],["bool",15]],[[["deleteerror",4]],["bool",15]],[[["memorypoolref",3]],["bool",15]],[[["memorypool",3]],["bool",15]],[[["queueorder",4]]],[[["block",6]],["result",4,[["error",3,[["releaseerror",4]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["block",6],["error",3,[["trygeterror",4]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["id",6]],[[],["nonnullid",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["senderror",4]],[[],["sendtimeouterror",4]],[[],["trysenderror",4]],[[],["recverror",4]],[[],["recvtimeouterror",4]],[[],["tryrecverror",4]],[[],["initializeerror",4]],[[],["infoerror",4]],[[],["info",3]],[[],["messagebufferref",3]],[[["senderror",4]],["bool",15]],[[["sendtimeouterror",4]],["bool",15]],[[["trysenderror",4]],["bool",15]],[[["recverror",4]],["bool",15]],[[["recvtimeouterror",4]],["bool",15]],[[["tryrecverror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["messagebufferref",3]],["bool",15]],[[],["option",4,[["nonnullid",6]]]],[[],["option",4,[["nonnullid",6]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["nonnullid",6]]],[[],["result",4,[["info",3],["error",3,[["infoerror",4]]]]]],[[],["result",4,[["error",3,[["initializeerror",4]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["usize",15]],[[["senderror",4]],["bool",15]],[[["sendtimeouterror",4]],["bool",15]],[[["trysenderror",4]],["bool",15]],[[["recverror",4]],["bool",15]],[[["recvtimeouterror",4]],["bool",15]],[[["tryrecverror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["messagebufferref",3]],["bool",15]],[[],["result",4,[["usize",15],["error",3,[["recverror",4]]]]]],[[["timeout",3]],["result",4,[["usize",15],["error",3,[["recvtimeouterror",4]]]]]],[[],["result",4,[["error",3,[["senderror",4]]]]]],[[["timeout",3]],["result",4,[["error",3,[["sendtimeouterror",4]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["usize",15],["error",3,[["tryrecverror",4]]]]]],[[],["result",4,[["error",3,[["trysenderror",4]]]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["id",6]],[[],["id",6]],[[],["nonnullid",6]],[[],["nonnullid",6]],[[],["mutexref",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["builder",3]],[[],["lockerror",4]],[[],["locktimeouterror",4]],[[],["trylockerror",4]],[[],["unlockerror",4]],[[],["initializeerror",4]],[[],["infoerror",4]],[[],["builderror",4]],[[],["deleteerror",4]],[[],["info",3]],[[],["mutexref",3]],[[],["priorityprotection",4]],[[],["result",4,[["error",3,[["deleteerror",4]]]]]],[[]],[[["lockerror",4]],["bool",15]],[[["locktimeouterror",4]],["bool",15]],[[["trylockerror",4]],["bool",15]],[[["unlockerror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["builderror",4]],["bool",15]],[[["deleteerror",4]],["bool",15]],[[["mutexref",3]],["bool",15]],[[["priorityprotection",4]],["bool",15]],[[["mutex",3]],["bool",15]],[[],["result",4,[["mutex",3],["error",3,[["builderror",4]]]]]],[[],["option",4,[["nonnullid",6]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["nonnullid",6]]],[[["nonnullid",6]]],[[],["result",4,[["info",3],["error",3,[["infoerror",4]]]]]],[[],["option",4]],[[],["result",4,[["error",3,[["initializeerror",4]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["mutexref",3]],[[],["result",4,[["error",3,[["lockerror",4]]]]]],[[["timeout",3]],["result",4,[["error",3,[["locktimeouterror",4]]]]]],[[["lockerror",4]],["bool",15]],[[["locktimeouterror",4]],["bool",15]],[[["trylockerror",4]],["bool",15]],[[["unlockerror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["builderror",4]],["bool",15]],[[["deleteerror",4]],["bool",15]],[[["mutexref",3]],["bool",15]],[[["priorityprotection",4]],["bool",15]],[[["mutex",3]],["bool",15]],[[],["option",4,[["nonnullid",6]]]],[[["priorityprotection",4]],["builder",3]],[[["queueorder",4]],["builder",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["error",3,[["trylockerror",4]]]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",4,[["error",3,[["unlockerror",4]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["currentiderror",4]],[[],["processor",3]],[[],["processortryfromerror",3]],[[],["result",4,[["processor",3],["error",3,[["currentiderror",4]]]]]],[[["currentiderror",4]],["bool",15]],[[["processor",3]],["bool",15]],[[["processortryfromerror",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["errorcode",3]],["option",4]],[[]],[[]],[[]],[[["currentiderror",4]],["bool",15]],[[["processor",3]],["bool",15]],[[["processortryfromerror",3]],["bool",15]],[[],["result",4]],[[["usize",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["id",6]],[[],["id",6]],[[],["nonnullid",6]],[[],["nonnullid",6]],[[],["semaphoreref",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["builder",3]],[[],["signalerror",4]],[[],["waiterror",4]],[[],["waittimeouterror",4]],[[],["pollerror",4]],[[],["initializeerror",4]],[[],["infoerror",4]],[[],["builderror",4]],[[],["deleteerror",4]],[[],["info",3]],[[],["semaphoreref",3]],[[],["count",6]],[[],["result",4,[["error",3,[["deleteerror",4]]]]]],[[]],[[["signalerror",4]],["bool",15]],[[["waiterror",4]],["bool",15]],[[["waittimeouterror",4]],["bool",15]],[[["pollerror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["builderror",4]],["bool",15]],[[["deleteerror",4]],["bool",15]],[[["semaphoreref",3]],["bool",15]],[[["semaphore",3]],["bool",15]],[[],["result",4,[["semaphore",3],["error",3,[["builderror",4]]]]]],[[],["option",4,[["nonnullid",6]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["nonnullid",6]]],[[["nonnullid",6]]],[[],["result",4,[["info",3],["error",3,[["infoerror",4]]]]]],[[["count",6]],["builder",3]],[[],["result",4,[["error",3,[["initializeerror",4]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["semaphoreref",3]],[[["count",6]],["builder",3]],[[["signalerror",4]],["bool",15]],[[["waiterror",4]],["bool",15]],[[["waittimeouterror",4]],["bool",15]],[[["pollerror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["builderror",4]],["bool",15]],[[["deleteerror",4]],["bool",15]],[[["semaphoreref",3]],["bool",15]],[[["semaphore",3]],["bool",15]],[[],["result",4,[["error",3,[["pollerror",4]]]]]],[[["queueorder",4]],["builder",3]],[[],["result",4,[["error",3,[["signalerror",4]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",4,[["error",3,[["waiterror",4]]]]]],[[["timeout",3]],["result",4,[["error",3,[["waittimeouterror",4]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4,[["error",3,[["activateerror",4]]]]]],[[["processor",3]],["result",4,[["error",3,[["activateonerror",4]]]]]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["nonnullid",6]],[[],["nonnullid",6]],[[],["nonnullid",6]],[[],["taskref",3]],[[],["taskref",3]],[[],["priority",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["builder",3,[["__start_is_not_specified__",3],["__stack_is_not_specified__",3],["__initial_priority_is_not_specified__",3]]]],[[],["result",4,[["usize",15],["error",3,[["cancelactivateallerror",4]]]]]],[[],["result",4,[["usize",15],["error",3,[["cancelwakeallerror",4]]]]]],[[],["activateerror",4]],[[],["activateonerror",4]],[[],["cancelactivateallerror",4]],[[],["setbasepriorityerror",4]],[[],["priorityerror",4]],[[],["migrateerror",4]],[[],["deleteerror",4]],[[],["stateerror",4]],[[],["infoerror",4]],[[],["wakeerror",4]],[[],["cancelwakeallerror",4]],[[],["releasewaiterror",4]],[[],["suspenderror",4]],[[],["resumeerror",4]],[[],["terminateerror",4]],[[],["raiseterminationerror",4]],[[],["sleeperror",4]],[[],["sleeptimeouterror",4]],[[],["delayerror",4]],[[],["exiterror",4]],[[],["disableterminationerror",4]],[[],["badcontexterror",3]],[[],["currentiderror",4]],[[],["builderror",4]],[[],["state",4]],[[],["info",3]],[[],["taskref",3]],[[],["current",3]],[[],["allprocessors",3]],[[],["result",4,[["current",3],["badcontexterror",3]]]],[[],["result",4,[["option",4,[["nonnullid",6]]],["error",3,[["currentiderror",4]]]]]],[[],["priority",6]],[[],["allprocessors",3]],[[["duration",3]],["result",4,[["error",3,[["delayerror",4]]]]]],[[],["result",4,[["error",3,[["deleteerror",4]]]]]],[[],["result",4,[["error",3,[["disableterminationerror",4]]]]]],[[]],[[],["result",4,[["error",3,[["enableterminationerror",6]]]]]],[[["activateerror",4]],["bool",15]],[[["activateonerror",4]],["bool",15]],[[["cancelactivateallerror",4]],["bool",15]],[[["setbasepriorityerror",4]],["bool",15]],[[["priorityerror",4]],["bool",15]],[[["migrateerror",4]],["bool",15]],[[["deleteerror",4]],["bool",15]],[[["stateerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["wakeerror",4]],["bool",15]],[[["cancelwakeallerror",4]],["bool",15]],[[["releasewaiterror",4]],["bool",15]],[[["suspenderror",4]],["bool",15]],[[["resumeerror",4]],["bool",15]],[[["terminateerror",4]],["bool",15]],[[["raiseterminationerror",4]],["bool",15]],[[["sleeperror",4]],["bool",15]],[[["sleeptimeouterror",4]],["bool",15]],[[["delayerror",4]],["bool",15]],[[["exiterror",4]],["bool",15]],[[["disableterminationerror",4]],["bool",15]],[[["badcontexterror",3]],["bool",15]],[[["currentiderror",4]],["bool",15]],[[["builderror",4]],["bool",15]],[[["state",4]],["bool",15]],[[["taskref",3]],["bool",15]],[[["allprocessors",3]],["bool",15]],[[["task",3]],["bool",15]],[[],["error",3,[["exiterror",4]]]],[[],["result",4,[["task",3],["error",3,[["builderror",4]]]]]],[[],["result",4,[["task",3],["error",3,[["builderror",4]]]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["nonnullid",6]]],[[["nonnullid",6]]],[[]],[[]],[[],["result",4,[["info",3],["error",3,[["infoerror",4]]]]]],[[["priority",6]],["builder",3]],[[["processor",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["taskref",3]],[[["processor",3]],["result",4,[["error",3,[["migrateerror",4]]]]]],[[["activateerror",4]],["bool",15]],[[["activateonerror",4]],["bool",15]],[[["cancelactivateallerror",4]],["bool",15]],[[["setbasepriorityerror",4]],["bool",15]],[[["priorityerror",4]],["bool",15]],[[["migrateerror",4]],["bool",15]],[[["deleteerror",4]],["bool",15]],[[["stateerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["wakeerror",4]],["bool",15]],[[["cancelwakeallerror",4]],["bool",15]],[[["releasewaiterror",4]],["bool",15]],[[["suspenderror",4]],["bool",15]],[[["resumeerror",4]],["bool",15]],[[["terminateerror",4]],["bool",15]],[[["raiseterminationerror",4]],["bool",15]],[[["sleeperror",4]],["bool",15]],[[["sleeptimeouterror",4]],["bool",15]],[[["delayerror",4]],["bool",15]],[[["exiterror",4]],["bool",15]],[[["disableterminationerror",4]],["bool",15]],[[["badcontexterror",3]],["bool",15]],[[["currentiderror",4]],["bool",15]],[[["builderror",4]],["bool",15]],[[["taskref",3]],["bool",15]],[[["task",3]],["bool",15]],[[],["result",4,[["priority",6],["error",3,[["priorityerror",4]]]]]],[[]],[[],["result",4,[["error",3,[["raiseterminationerror",4]]]]]],[[],["result",4,[["error",3,[["releasewaiterror",4]]]]]],[[],["result",4,[["error",3,[["resumeerror",4]]]]]],[[["priority",6]],["result",4,[["error",3,[["setbasepriorityerror",4]]]]]],[[],["result",4,[["error",3,[["sleeperror",4]]]]]],[[["timeout",3]],["result",4,[["error",3,[["sleeptimeouterror",4]]]]]],[[["usize",15]],["builder",3]],[[],["builder",3]],[[],["state",4]],[[],["result",4,[["state",4],["error",3,[["stateerror",4]]]]]],[[],["result",4,[["error",3,[["suspenderror",4]]]]]],[[],["result",4,[["error",3,[["terminateerror",4]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",4,[["error",3,[["wakeerror",4]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["reltim",6]],[[],["tmo",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["duration",3]],[[],["timeout",3]],[[["duration",3]],["ordering",4]],[[["timeout",3]],["ordering",4]],null,null,[[["duration",3]],["bool",15]],[[["timeout",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["u128",15]],["option",4]],[[["reltim",6]]],[[["tmo",6]]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["duration",3]],["bool",15]],[[["timeout",3]],["bool",15]],[[["duration",3]],["option",4,[["ordering",4]]]],[[["timeout",3]],["option",4,[["ordering",4]]]],null,null,[[],["result",4]],[[["timeout",3]],["result",4]],[[["stdduration",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[["stdduration",3]],["result",4]],[[["duration",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[],["atr",6]],[[]],[[]],[[],["queueorder",4]],[[["queueorder",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"acvct"],[3,"T_RTSK"],[19,"T_NFY"],[19,"T_ENFY"],[3,"T_CALM"],[3,"T_RALM"],[3,"T_CMPF"],[3,"T_CISR"],[3,"T_RMPF"],[3,"T_RSEM"],[3,"T_RFLG"],[3,"T_RDTQ"],[3,"T_RPDQ"],[3,"T_RMTX"],[3,"T_RMBF"],[3,"T_CSEM"],[3,"T_CFLG"],[3,"T_CDTQ"],[3,"T_CPDQ"],[3,"T_CMTX"],[3,"T_CTSK"],[3,"T_RCYC"],[3,"T_ROVR"],[3,"T_CCYC"],[3,"T_NFYINFO"],[3,"T_NFY_HDR"],[3,"T_NFY_VAR"],[3,"T_NFY_IVAR"],[3,"T_NFY_TSK"],[3,"T_NFY_SEM"],[3,"T_NFY_FLG"],[3,"T_NFY_DTQ"],[3,"T_ENFY_VAR"],[3,"T_ENFY_DTQ"],[8,"IntoClosure"],[4,"SendError"],[4,"SendTimeoutError"],[4,"TrySendError"],[4,"SendForcedError"],[4,"RecvError"],[4,"RecvTimeoutError"],[4,"TryRecvError"],[4,"InitializeError"],[4,"InfoError"],[4,"BuildError"],[4,"DeleteError"],[3,"DataqueueRef"],[3,"Dataqueue"],[3,"Builder"],[3,"Info"],[13,"BadContext"],[13,"AccessDenied"],[13,"OutOfMemory"],[13,"BadParam"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadState"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"ZeroSized"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[3,"Kind"],[3,"Error"],[3,"ErrorCode"],[4,"Never"],[8,"ErrorKind"],[4,"ExitError"],[13,"AccessDenied"],[4,"GetError"],[4,"GetTimeoutError"],[4,"TryGetError"],[4,"ReleaseError"],[4,"InitializeError"],[4,"InfoError"],[4,"BuildError"],[4,"DeleteError"],[3,"MemoryPoolRef"],[3,"MemoryPool"],[3,"Builder"],[3,"Info"],[13,"BadContext"],[13,"AccessDenied"],[13,"NotSupported"],[13,"OutOfMemory"],[13,"BadParam"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadState"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadParam"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[4,"SendError"],[4,"SendTimeoutError"],[4,"TrySendError"],[4,"RecvError"],[4,"RecvTimeoutError"],[4,"TryRecvError"],[4,"InitializeError"],[4,"InfoError"],[3,"MessageBufferRef"],[3,"Info"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"BadParam"],[13,"AccessDenied"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"BadParam"],[13,"AccessDenied"],[13,"Timeout"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[13,"BadContext"],[13,"BadId"],[13,"BadParam"],[13,"AccessDenied"],[13,"Timeout"],[4,"LockError"],[4,"LockTimeoutError"],[4,"TryLockError"],[4,"UnlockError"],[4,"InitializeError"],[4,"InfoError"],[4,"BuildError"],[4,"DeleteError"],[4,"PriorityProtection"],[3,"MutexRef"],[3,"Mutex"],[3,"Builder"],[3,"Info"],[13,"BadContext"],[13,"AccessDenied"],[13,"OutOfMemory"],[13,"BadParam"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadState"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadParam"],[13,"Deadlock"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadParam"],[13,"Deadlock"],[13,"Ceiling"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadParam"],[13,"Deadlock"],[13,"Timeout"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadSequence"],[4,"CurrentIdError"],[3,"Processor"],[3,"ProcessorTryFromError"],[13,"BadContext"],[4,"SignalError"],[4,"WaitError"],[4,"WaitTimeoutError"],[4,"PollError"],[4,"InitializeError"],[4,"InfoError"],[4,"BuildError"],[4,"DeleteError"],[3,"SemaphoreRef"],[3,"Semaphore"],[3,"Builder"],[3,"Info"],[13,"BadContext"],[13,"AccessDenied"],[13,"OutOfMemory"],[13,"BadParam"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadState"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"QueueOverflow"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[4,"ActivateError"],[4,"ActivateOnError"],[4,"CancelActivateAllError"],[4,"SetBasePriorityError"],[4,"PriorityError"],[4,"MigrateError"],[4,"DeleteError"],[4,"StateError"],[4,"InfoError"],[4,"WakeError"],[4,"CancelWakeAllError"],[4,"ReleaseWaitError"],[4,"SuspendError"],[4,"ResumeError"],[4,"TerminateError"],[4,"RaiseTerminationError"],[4,"DisableTerminationError"],[4,"BuildError"],[4,"SleepError"],[4,"SleepTimeoutError"],[4,"DelayError"],[4,"ExitError"],[4,"CurrentIdError"],[4,"State"],[3,"TaskRef"],[3,"Current"],[3,"Task"],[3,"Info"],[3,"Builder"],[3,"BadContextError"],[3,"AllProcessors"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"QueueOverflow"],[13,"BadContext"],[13,"BadId"],[13,"NotSupported"],[13,"AccessDenied"],[13,"QueueOverflow"],[13,"BadParam"],[13,"BadContext"],[13,"AccessDenied"],[13,"OutOfMemory"],[13,"BadParam"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"NotSupported"],[13,"AccessDenied"],[13,"BadState"],[13,"BadContext"],[13,"BadContext"],[13,"NotSupported"],[13,"Released"],[13,"TerminateRequest"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadState"],[13,"BadContext"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"BadParam"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"BadState"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadState"],[13,"BadParam"],[13,"BadContext"],[13,"BadId"],[13,"NotSupported"],[13,"AccessDenied"],[13,"BadState"],[13,"BadContext"],[13,"BadId"],[13,"NotSupported"],[13,"AccessDenied"],[13,"BadState"],[13,"BadContext"],[13,"BadId"],[13,"BadState"],[13,"BadParam"],[13,"AccessDenied"],[13,"BadContext"],[13,"NotSupported"],[13,"Released"],[13,"TerminateRequest"],[13,"BadContext"],[13,"NotSupported"],[13,"Timeout"],[13,"Released"],[13,"TerminateRequest"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"NotSupported"],[13,"AccessDenied"],[13,"BadState"],[13,"QueueOverflow"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadState"],[13,"BadParam"],[13,"BadContext"],[13,"BadId"],[13,"NotSupported"],[13,"AccessDenied"],[13,"BadState"],[13,"QueueOverflow"],[3,"Timeout"],[3,"Duration"],[3,"TryFromDurationError"],[4,"QueueOrder"]],"a":{"acre_dtq":[860],"acre_mpf":[1242],"acre_mtx":[1731],"acre_sem":[2032],"acre_tsk":[2403],"act_tsk":[2330],"can_act":[2404],"can_wup":[2405],"chg_pri":[2630],"del_dtq":[875],"del_mpf":[1253],"del_mtx":[1743],"del_sem":[2044],"del_tsk":[2440],"dis_ter":[2441],"dly_tsk":[2439],"ena_ter":[2443],"ext_ker":[1141],"ext_tsk":[2472],"fsnd_dtq":[972],"get_mpf":[1301],"get_pid":[1925],"get_pri":[2625],"get_tid":[2436],"get_tst":[2636],"ini_mbf":[1537],"ini_mpf":[1304],"ini_mtx":[1795],"ini_sem":[936,2093],"loc_mtx":[1810],"mact_tsk":[2331],"mig_tsk":[2598],"park":[2631],"park_timeout":[2632],"pget_mpf":[1342],"ploc_mtx":[1852],"pol_sem":[2118],"prcv_dtq":[1004],"prcv_mbf":[1583],"psnd_dtq":[1005],"psnd_mbf":[1584],"ras_ter":[2627],"rcv_dtq":[969],"rcv_mbf":[1559],"ref_dtq":[935],"ref_mbf":[1536],"ref_mpf":[1303],"ref_mtx":[1793],"ref_sem":[2091],"ref_tsk":[2562],"rel_mpf":[1329],"rel_wai":[2628],"rsm_tsk":[2629],"sig_sem":[2120],"slp_tsk":[2631],"snd_dtq":[971],"snd_mbf":[1561],"sns_ctx":[1150],"sns_dpn":[1147],"sns_dsp":[1148],"sns_ker":[1149],"sns_loc":[1146],"sns_ter":[2596],"sus_tsk":[2637],"ta_act":[2474],"ter_tsk":[2638],"tget_mpf":[1302],"tloc_mtx":[1811],"trcv_dtq":[970],"trcv_mbf":[1560],"tslp_tsk":[2632],"tsnd_dtq":[973],"tsnd_mbf":[1562],"twai_sem":[2158],"unl_mtx":[1866],"unpark":[2732],"wai_sem":[2157],"wup_tsk":[2732]}},\
"itron_fmp3":{"doc":"Rust interface to interact with operating systems based on …","t":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,6,6,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,17,17,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,3,3,3,3,3,3,3,3,3,12,12,12,12,5,12,12,3,5,12,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,5,5,12,5,5,5,12,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,5,5,12,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,12,5,5,5,5,5,5,6,11,11,11,11,11,11,11,11,11,11,11,12,12,12,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,12,12,12,5,5,5,5,5,5,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,12,12,5,5,5,5,12,12,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,12,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,6,5,5,5,5,5,12,12,12,12,12,5,12,5,6,8,10,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,6,3,13,13,13,13,3,4,4,13,13,13,13,4,4,13,13,13,13,4,4,4,13,13,13,13,13,13,13,13,4,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,8,3,6,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,11,11,11,11,5,11,11,11,11,5,5,5,5,5,11,11,11,11,12,14,14,14,14,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,6,13,13,4,4,3,4,4,3,13,13,4,13,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,4,4,4,4,3,13,13,13,13,13,13,13,13,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,4,3,3,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,6,13,13,3,4,4,13,13,4,13,13,13,3,4,13,13,13,13,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,3,4,4,4,13,6,4,3,4,4,13,13,13,13,13,13,13,13,13,6,4,13,13,13,13,4,13,4,13,13,13,4,13,4,4,4,4,4,4,13,3,4,13,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,18,3,3,18,18,11,11,11,11,11,11,11,11,11,11,11,11,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,11,11,11,11,11,11,11,11,11,11,11],"n":["_changelog_","abi","closure","dataqueue","error","eventflag","interrupt","kernel","macros","memorypool","mutex","prioritydataqueue","processor","semaphore","task","time","wait","ACPTN","ATR","ER","ER_BOOL","ER_ID","ER_UINT","EXCNO","EXINF","E_BOVR","E_CLS","E_COMM","E_CTX","E_DLT","E_ID","E_ILUSE","E_MACV","E_NOEXS","E_NOID","E_NOMEM","E_NORES","E_NOSPT","E_OACV","E_OBJ","E_OK","E_PAR","E_QOVR","E_RASTER","E_RLWAI","E_RSATR","E_RSFN","E_SYS","E_TMOUT","E_WBLK","FALSE","FLGPTN","FN","FP","HRTCNT","ID","INHNO","INTNO","ISR","MB_T","MODE","MPF_T","NonNullID","NonZeroER","PRI","RELTIM","STAT","SYSTIM","TACP_KERNEL","TACP_SHARED","TASK","TA_ACT","TA_CEILING","TA_CLR","TA_NOACTQUE","TA_NULL","TA_STA","TA_TPRI","TA_WMUL","TENFY_ACTTSK","TENFY_INCVAR","TENFY_SETFLG","TENFY_SETVAR","TENFY_SIGSEM","TENFY_SNDDTQ","TENFY_WUPTSK","TIPM_ENAALL","TMAX_RELTIM","TMEHDR","TMO","TMO_FEVR","TMO_NBLK","TMO_POL","TNFY_ACTTSK","TNFY_HANDLER","TNFY_INCVAR","TNFY_SETFLG","TNFY_SETVAR","TNFY_SIGSEM","TNFY_SNDDTQ","TNFY_WUPTSK","TPRI_INI","TPRI_SELF","TRUE","TSK_NONE","TSK_SELF","TSPN_LOC","TSPN_UNL","TTS_DMT","TTS_RDY","TTS_RUN","TTS_SUS","TTS_WAI","TTS_WAS","TTW_DLY","TTW_FLG","TTW_MPF","TTW_MTX","TTW_RDTQ","TTW_RPDQ","TTW_SDTQ","TTW_SEM","TTW_SLP","TTW_SPDQ","TWF_ANDW","TWF_ORW","T_RALM","T_RCYC","T_RDTQ","T_RFLG","T_RMPF","T_RMTX","T_RPDQ","T_RSEM","T_RSPN","T_RTSK","acptn1","acptn2","acptn3","acptn4","act_tsk","actcnt","actprc","acvct","adj_tim","almstat","bool_t","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_act","can_wup","chg_ipm","chg_pri","chg_spr","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clr_flg","clr_int","cycstat","dis_dsp","dis_int","dis_ter","dister","dly_tsk","ena_dsp","ena_int","ena_ter","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","ext_ker","ext_tsk","fblkcnt","fch_hrt","flgptn","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","fsnd_dtq","get_inf","get_ipm","get_lod","get_mpf","get_nth","get_pid","get_pri","get_tid","get_tim","get_tst","htskid","ini_dtq","ini_flg","ini_mpf","ini_mtx","ini_pdq","ini_sem","int_t","into","into","into","into","into","into","into","into","into","into","into","lefttim","lefttim","lefttmo","loc_cpu","loc_mtx","loc_spn","mact_tsk","mget_lod","mget_nth","mig_tsk","mrot_rdq","msta_alm","msta_cyc","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","pget_mpf","ploc_mtx","pol_flg","pol_sem","prb_int","prcid","prcid","prcid","prcv_dtq","prcv_pdq","psnd_dtq","psnd_pdq","ras_int","ras_ter","raster","rcv_dtq","rcv_pdq","ref_alm","ref_cyc","ref_dtq","ref_flg","ref_mpf","ref_mtx","ref_pdq","ref_sem","ref_spn","ref_tsk","rel_mpf","rel_wai","rot_rdq","rsm_tsk","rtskid","rtskid","sdtqcnt","semcnt","set_flg","set_tim","sig_sem","slp_tsk","snd_dtq","snd_pdq","sns_ctx","sns_dpn","sns_dsp","sns_ker","sns_loc","sns_ter","spdqcnt","spnstat","sta_alm","sta_cyc","stp_alm","stp_cyc","stskid","stskid","sus_tsk","ter_tsk","tget_mpf","tloc_mtx","trcv_dtq","trcv_pdq","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_spn","tskbpri","tskpri","tskstat","tskwait","tslp_tsk","tsnd_dtq","tsnd_pdq","twai_flg","twai_sem","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uint_t","unl_cpu","unl_mtx","unl_spn","wai_flg","wai_sem","wobjid","wtskid","wtskid","wtskid","wtskid","wup_tsk","wupcnt","xsns_dpn","Closure","IntoClosure","into_closure","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","DataElement","DataqueueRef","Deleted","Deleted","Deleted","Deleted","Info","InfoError","InitializeError","NotSupported","NotSupported","NotSupported","NotSupported","RecvError","RecvTimeoutError","Released","Released","Released","Released","SendError","SendForcedError","SendTimeoutError","TerminateRequest","TerminateRequest","TerminateRequest","TerminateRequest","Timeout","Timeout","Timeout","Timeout","TryRecvError","TrySendError","ZeroSized","as_raw","as_raw_nonnull","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","first_waiting_receiving_task_id","first_waiting_sending_task_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_raw_nonnull","info","initialize","into","into","into","into","into","into","into","into","into","into","into","is_empty","len","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","recv","recv_timeout","send","send_forced","send_timeout","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_recv","try_send","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","Error","ErrorCode","ErrorKind","Kind","MaybeKind","Never","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","code","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from_error_code","get","into","into","into","into","kind","ne","ne","ne","new","new_unchecked","new_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","AccessDenied","ExitError","borrow","borrow_mut","clone","eq","exit","fmt","from","from_error_code","into","is_cpu_lock_active","is_dispatch_pending_active","is_dispatching_disabled","is_operational","is_task_context","ne","try_from","try_into","type_id","0","kernel","match_kernel","tt_is_kernel","tt_kernel","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadId","BadId","BadId","BadId","BadId","BadId","BadParam","Block","Deleted","Deleted","GetError","GetTimeoutError","Info","InfoError","InitializeError","MemoryPoolRef","NotSupported","NotSupported","ReleaseError","Released","Released","TerminateRequest","TerminateRequest","Timeout","Timeout","TryGetError","as_raw","as_raw_nonnull","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","eq","eq","eq","eq","eq","eq","eq","first_waiting_task_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","free_block_count","from","from","from","from","from","from","from","from","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_raw_nonnull","get","get_timeout","info","initialize","into","into","into","into","into","into","into","into","ne","ne","ne","ne","ne","ne","ne","release","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadId","BadId","BadId","BadId","BadId","BadId","BadParam","BadParam","BadParam","BadSequence","Deadlock","Deadlock","Deadlock","Deleted","Deleted","Info","InfoError","InitializeError","LockError","LockTimeoutError","MutexRef","NotSupported","NotSupported","Released","Released","TerminateRequest","TerminateRequest","Timeout","Timeout","TryLockError","UnlockError","as_raw","as_raw_nonnull","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","eq","eq","eq","eq","eq","eq","eq","first_waiting_task_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_raw_nonnull","info","initialize","into","into","into","into","into","into","into","into","lock","lock_timeout","ne","ne","ne","ne","ne","ne","ne","owning_task_id","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","BadContext","CurrentIdError","Processor","ProcessorTryFromError","as_raw","as_raw_nonnull","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","current","eq","eq","eq","fmt","fmt","fmt","from","from","from","from_error_code","from_raw","from_raw_nonnull","into","into","into","ne","ne","ne","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadId","BadId","BadId","BadId","BadId","BadId","Count","Deleted","Deleted","Info","InfoError","InitializeError","NotSupported","NotSupported","PollError","QueueOverflow","Released","Released","SemaphoreRef","SignalError","TerminateRequest","TerminateRequest","Timeout","Timeout","WaitError","WaitTimeoutError","as_raw","as_raw_nonnull","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","count","eq","eq","eq","eq","eq","eq","eq","first_waiting_task_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_raw_nonnull","info","initialize","into","into","into","into","into","into","into","into","ne","ne","ne","ne","ne","ne","ne","poll","signal","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wait","wait_timeout","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","ActivateError","ActivateOnError","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContextError","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadParam","BadParam","BadParam","BadParam","BadParam","BadState","BadState","BadState","BadState","BadState","BadState","BadState","BadState","BadState","CancelActivateAllError","CancelWakeAllError","Current","CurrentIdError","DelayError","DisableTerminationError","Dormant","EnableTerminationError","ExitError","Info","InfoError","MigrateError","NotSupported","NotSupported","NotSupported","NotSupported","NotSupported","NotSupported","NotSupported","NotSupported","NotSupported","Priority","PriorityError","QueueOverflow","QueueOverflow","QueueOverflow","QueueOverflow","RaiseTerminationError","Ready","ReleaseWaitError","Released","Released","Released","ResumeError","Running","SetBasePriorityError","SleepError","SleepTimeoutError","State","StateError","SuspendError","Suspended","TaskRef","TerminateError","TerminateRequest","TerminateRequest","TerminateRequest","Timeout","Waiting","WaitingSuspended","WakeError","activate","activate_on","as_raw","as_raw","as_raw_nonnull","as_raw_nonnull","as_ref","base_priority","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel_activate_all","cancel_wake_all","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","current","current_id","current_priority","delay","disable_termination","enable_termination","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","exit","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_raw_nonnull","hash","hash","info","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_termination_disabled","migrate","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","priority","raise_termination","release_wait","resume","set_base_priority","sleep","sleep_timeout","state","state","suspend","terminate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wake","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","Duration","FOREVER","Timeout","TryFromDurationError","ZERO","ZERO","as_raw","as_raw","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","cmp","cmp","duration","duration","eq","eq","fmt","fmt","from","from","from","from_micros","from_micros","from_millis","from_millis","from_nanos","from_nanos","from_raw","from_raw","from_secs","from_secs","hash","hash","into","into","into","is_finite","ne","ne","partial_cmp","partial_cmp","timeout","timeout","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Fifo","QueueOrder","TaskPriority","as_raw_atr","borrow","borrow_mut","clone","eq","fmt","from","into","try_from","try_into","type_id"],"q":["itron_fmp3","","","","","","","","","","","","","","","","","itron_fmp3::abi","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","itron_fmp3::closure","","","itron_fmp3::dataqueueitron_fmp3::dataqueue::InfoError","","","itron_fmp3::dataqueue::InitializeError","","","itron_fmp3::dataqueue::RecvError","","","","","","","itron_fmp3::dataqueue::RecvTimeoutError","","","","","","","","itron_fmp3::dataqueue::SendError","","","","","","","itron_fmp3::dataqueue::SendForcedError","","","","itron_fmp3::dataqueue::SendTimeoutError","","","","","","","","itron_fmp3::dataqueue::TryRecvError","","","","itron_fmp3::dataqueue::TrySendError","","","","itron_fmp3::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","itron_fmp3::kernel","","","","","","","","","","","","","","","","","","","","itron_fmp3::kernel::ExitError","itron_fmp3::macros","","","","itron_fmp3::memorypool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","itron_fmp3::memorypool::GetError","","","","","","","itron_fmp3::memorypool::GetTimeoutError","","","","","","","","itron_fmp3::memorypool::InfoError","","","itron_fmp3::memorypool::InitializeError","","","itron_fmp3::memorypool::ReleaseError","","","","itron_fmp3::memorypool::TryGetError","","","","itron_fmp3::mutex","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","itron_fmp3::mutex::InfoError","","","itron_fmp3::mutex::InitializeError","","","itron_fmp3::mutex::LockError","","","","","","","","","itron_fmp3::mutex::LockTimeoutError","","","","","","","","","","itron_fmp3::mutex::TryLockError","","","","","","itron_fmp3::mutex::UnlockError","","","","itron_fmp3::processor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","itron_fmp3::processor::CurrentIdError","itron_fmp3::semaphore","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","itron_fmp3::semaphore::InfoError","","","itron_fmp3::semaphore::InitializeError","","","itron_fmp3::semaphore::PollError","","","","itron_fmp3::semaphore::SignalError","","","","itron_fmp3::semaphore::WaitError","","","","","","","itron_fmp3::semaphore::WaitTimeoutError","","","","","","","","itron_fmp3::taskitron_fmp3::task::ActivateError","","","","itron_fmp3::task::ActivateOnError","","","","","","itron_fmp3::task::CancelActivateAllError","","","itron_fmp3::task::CancelWakeAllError","","","","","itron_fmp3::task::CurrentIdError","itron_fmp3::task::DelayError","","","","itron_fmp3::task::DisableTerminationError","","itron_fmp3::task::ExitError","itron_fmp3::task::InfoError","","","itron_fmp3::task::MigrateError","","","","itron_fmp3::task::PriorityError","","","","itron_fmp3::task::RaiseTerminationError","","","","","itron_fmp3::task::ReleaseWaitError","","","","","itron_fmp3::task::ResumeError","","","","","itron_fmp3::task::SetBasePriorityError","","","","","itron_fmp3::task::SleepError","","","","itron_fmp3::task::SleepTimeoutError","","","","","itron_fmp3::task::StateError","","","itron_fmp3::task::SuspendError","","","","","","itron_fmp3::task::TerminateError","","","","","itron_fmp3::task::WakeError","","","","","","itron_fmp3::time","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","itron_fmp3::wait","","","","","","","","","","","","",""],"d":["Changelog (<code>CHANGELOG.md</code>)","C API","Closures: <code>(fn(EXINF), EXINF)</code>","Dataqueues","Error types.","Eventflags (TODO)","Interrupts (TODO)","Miscellaneous functions that are not associated to …","Provides macros that allow downstream crates to examine …","Memory pools","Mutexes","Priority dataqueues (TODO)","Multiprocessing","Semaphores","Tasks","Temporal quantification","Shared definitions for waitable objects","アクセス許可パターン","オブジェクトの属性","エラーコード","エラーコードまたは真偽値","エラーコードまたはID番号","エラーコードまたは符号無し整数","CPU例外ハンドラ番号","拡張情報","バッファオーバーフロー","待ちオブジェクトの状態変化","通信エラー","コンテキストエラー","待ちオブジェクトの削除","不正ID番号","サービスコール不正使用","メモリアクセス違反","オブジェクト未生成","ID番号不足","メモリ不足","資源不足","未サポート機能","オブジェクトアクセス違反","オブジェクト状態エラー","正常終了","パラメータエラー","キューイングオーバーフロー","タスクの終了要求","待ち状態の強制解除","予約属性","予約機能コード","システムエラー","ポーリング失敗またはタイムアウト","ノンブロッキング受付け","Represents a falsy value.","イベントフラグのビットパターン","機能コード","プログラムの起動番地","高分解能タイマのカウント値","オブジェクトのID番号","割込みハンドラ番号","割込み番号","","管理領域を確保するためのデータ型","サービスコールの動作モード","…","Non-null version of <code>ID</code>","","優先度","相対時間","オブジェクトの状態","システム時刻","カーネルドメインだけにアクセスを許可","すべてのドメインからアクセスを許可","","タスクを起動された状態で生成","優先度上限プロトコル","イベントフラグのクリア指定","起動要求をキューイングしない","オブジェクト属性を指定しない","周期通知を動作状態で生成","待ち行列をタスクの優先度順にする","複数の待ちタスク","タスクの起動","変数のインクリメント","イベントフラグのセット","変数の設定","セマフォの返却","データキューへの送信","タスクの起床","割込み優先度マスク全解除","…","","タイムアウト指定","永久待ち","ノンブロッキング","ポーリング","タスクの起動","タイムイベントハンドラの呼出し","変数のインクリメント","イベントフラグのセット","変数の設定","セマフォの資源の返却","データキューへの送信","タスクの起床","タスクの起動時優先度","自タスクのベース優先度","Represents a truthy value.","該当するタスクがない","自タスク指定","スピンロックが取得されている状態","スピンロックが取得されていない状態","休止状態","実行可能状態","実行状態","強制待ち状態","待ち状態","二重待ち状態","時間経過待ち","イベントフラグ待ち","固定長メモリブロックの獲得待ち","ミューテックスのロック待ち状態","データキューからの受信待ち","優先度データキューからの受信待ち","データキューへの送信待ち","セマフォの資源獲得待ち","起床待ち","優先度データキューへの送信待ち","イベントフラグのAND待ち","イベントフラグのOR待ち","TOPPERS/ASP3 <code>T_RALM</code>","TOPPERS/FMP3 <code>T_RCYC</code>","","","","","","","","TOPPERS/FMP3 <code>T_RTSK</code>","通常操作1のアクセス許可パターン","通常操作2のアクセス許可パターン","管理操作のアクセス許可パターン","参照操作のアクセス許可パターン","","起動要求キューイング数","次の起動時の割付けプロセッサのID","アクセス許可ベクタ","","アラーム通知の動作状態","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","周期通知の動作状態","","","","タスク終了禁止状態","","","","","","","","","","","","","","","","","","…","","イベントフラグの現在のビットパターン","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","…","","","","","","","自然なサイズの符号付き整数","","","","","","","","","","","","次回通知時刻までの相対時間","通知時刻までの相対時間","タイムアウトするまでの時間","","","","","","","","","","","","","","","","","","","","","","","","","","","割付けプロセッサのID","割付けプロセッサのID","割付けプロセッサのID","","","","","","","タスク終了要求状態","","","","","","","","","","","","","","","","","…","…","…","セマフォの現在の資源数","","","","","","","","","","","","","…","スピンロックのロック状態","","","","","…","…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","タスクのベース優先度","タスクの現在優先度","タスク状態","待ち要因","","","","","","","","","","","","","","","","","自然なサイズの符号無し整数","","","","","","待ち対象のオブジェクトのID","…","セマフォの待ち行列の先頭のタスクのID番号","…","…","","起床要求キューイング数","","A bundle of a function pointer and associated data.","Conversion to <code>Closure</code>.","Convert <code>self</code> to <code>Closure</code>.","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","The unit of data that can be sent through a dataqueue.","A borrowed reference to a dataqueue.","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Dataqueue information returned by <code>DataqueueRef::info</code>.","Error type for <code>DataqueueRef::info</code>.","Error type for <code>DataqueueRef::initialize</code>.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","Error type for <code>DataqueueRef::recv</code>.","Error type for <code>DataqueueRef::recv_timeout</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>DataqueueRef::send</code>.","Error type for <code>DataqueueRef::send_forced</code>.","Error type for <code>DataqueueRef::send_timeout</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>DataqueueRef::try_recv</code>.","Error type for <code>DataqueueRef::try_send</code>.","The queue length is zero.","Get the raw object ID.","Get the raw object ID as <code>abi::NonNullID</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the first waiting receiver’s task ID.","Get the first waiting sender’s task ID.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a <code>DataqueueRef</code> from a raw object ID.","<code>ref_dtq</code>: Get the dataqueue’s general information.","<code>ini_sem</code>: Initialize the dataqueue.","","","","","","","","","","","","Get a flag indicating whether the dataqueue is empty.","Get the number of data items contained in the dataqueue.","","","","","","","","","","","<code>rcv_dtq</code>: Receive a data element from the dataqueue. Blocks …","<code>trcv_dtq</code>: Receive a data element to the dataqueue. Blocks …","<code>snd_dtq</code>: Send a data element to the dataqueue. Blocks the …","<code>fsnd_dtq</code>: Send a data element to the dataqueue. Removes (…","<code>tsnd_dtq</code>: Send a data element to the dataqueue. Blocks the …","","","","","","","","","","","","","","","","","","","","","","","<code>prcv_dtq</code>: Receive a data element to the dataqueue. Fails …","<code>psnd_dtq</code>: Send a data element to the dataqueue. Fails and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Target-specific error value that can be categorized as one …","Raw error code.","Trait for error kind types.","Type for error kinds that are valid in the current target …","Placeholder for error kind variants.","Indicates that the error kind never occurs in the current …","","","","","","","","","","","","","Get the error code.","","","","","","","","","","","","","","Categorize the specified error code.","Get the numerical value.","","","","","Get the error kind.","","","","Construct an <code>ErrorCode</code>.","Construct <code>Error</code>.","Construct an <code>ErrorCode</code> without checking if <code>code</code> is a valid …","","","","","","","","","","","","","Requires: <code>cfg(any())</code>","Error type for <code>exit</code>.","","","","","<code>ext_ker</code>: Terminate the kernel.","","","","","<code>sns_loc</code>: Get a flag indicating whether the CPU lock state …","<code>sns_dpn</code>: Get a flag indicating whether the dispatch …","<code>sns_dsp</code>: Get a flag indicating whether dispatching is …","<code>sns_ker</code>: Get a flag indicating whether the kernel is in an …","<code>sns_ctx</code>: Get a flag indicating whether the current thread …","","","","","","Expand to the current kernel’s name (e.g., <code>&quot;asp3&quot;</code>).","Expand to the arm corresponding to the current kernel.","Determine if this crate was compiled for the specified …","Get the kernel selected by a Cargo feature.","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","The supplied memory block does not originate from the …","A pointer to a memory block.","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Error type for <code>MemoryPoolRef::get</code>.","Error type for <code>MemoryPoolRef::get_timeout</code>.","Memory pool information returned by <code>MemoryPoolRef::info</code>.","Error type for <code>MemoryPoolRef::info</code>.","Error type for <code>MemoryPoolRef::initialize</code>.","A borrowed reference to a memory pool.","The task is a restricted task.","The task is a restricted task.","Error type for <code>MemoryPoolRef::release</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>MemoryPoolRef::try_get</code>.","Get the raw object ID.","Get the raw object ID as <code>abi::NonNullID</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the first waiting task’s ID.","","","","","","","","","Get the number of free memory blocks.","","","","","","","","","","","","","","","Construct a <code>MemoryPoolRef</code> from a raw object ID.","<code>get_mpf</code>: Acquire a memory block. Blocks the current task …","<code>tget_mpf</code>: Acquire a memory block. Blocks the current task …","<code>ref_mpf</code>: Get the memory pool’s general information.","<code>ini_mpf</code>: Initialize the memory pool.","","","","","","","","","","","","","","","","<code>rel_mpf</code>: Return a memory block to the memory pool.","","","","","","","","","<code>pget_mpf</code>: Acquire a memory block. Fails and returns …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","The calling task’s priority is higher than the mutex’s …","The calling task’s priority is higher than the mutex’s …","The calling task’s priority is higher than the mutex’s …","The mutex is not the lastly-locked mutex currently owned …","The calling task already owns the mutex.","The calling task already owns the mutex.","The calling task already owns the mutex.","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Mutex information returned by <code>MutexRef::info</code>.","Error type for <code>MutexRef::info</code>.","Error type for <code>MutexRef::initialize</code>.","Error type for <code>MutexRef::lock</code>.","Error type for <code>MutexRef::lock_timeout</code>.","A borrowed reference to a mutex.","The task is a restricted task.","The task is a restricted task.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>MutexRef::try_lock</code>.","Error type for <code>MutexRef::unlock</code>.","Get the raw object ID.","Get the raw object ID as <code>abi::NonNullID</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the first waiting task’s ID.","","","","","","","","","","","","","","","","","","","","","","","Construct a <code>MutexRef</code> from a raw object ID.","<code>ref_mtx</code>: Get the mutex’s general information.","<code>ini_mtx</code>: Initialize the mutex.","","","","","","","","","<code>loc_mtx</code>: Lock the mutex.","<code>tloc_mtx</code>: Lock the mutex with timeout.","","","","","","","","Get the owning task’s ID.","","","","","","","","","","","","","","","","","<code>ploc_mtx</code>: Attempt to lock the mutex. Returns immediately …","","","","","","","","","<code>unl_mtx</code>: Unlock the mutex.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The CPU lock state is active.","Error type for <code>current</code>.","Refers to a single processor in a multi-processor system. …","The error type returned when a conversion from <code>usize</code> to …","Get a raw processor ID.","Get a raw processor ID as <code>abi::NonNullID</code>.","","","","","","","","","","<code>get_pid</code>: Get the current processor’s ID.","","","","","","","","","","","Construct <code>Processor</code> from a raw processor ID.","Construct <code>Processor</code> from a non-null raw processor ID.","","","","","","","","","","","","","","","","","","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Semaphore count.","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Semaphore information returned by <code>SemaphoreRef::info</code>.","Error type for <code>SemaphoreRef::info</code>.","Error type for <code>SemaphoreRef::initialize</code>.","The task is a restricted task.","The task is a restricted task.","Error type for <code>SemaphoreRef::poll</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","A borrowed reference to a semaphore.","Error type for <code>SemaphoreRef::signal</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>SemaphoreRef::wait</code>.","Error type for <code>SemaphoreRef::wait_timeout</code>.","Get the raw object ID.","Get the raw object ID as <code>abi::NonNullID</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Get the semaphore’s count.","","","","","","","","Get the first waiting task’s ID.","","","","","","","","","","","","","","","","","","","","","","","Construct a <code>SemaphoreRef</code> from a raw object ID.","<code>ref_sem</code>: Get the semaphore’s general information.","<code>ini_sem</code>: Initialize the semaphore.","","","","","","","","","","","","","","","","<code>pol_sem</code>: Decrement the semaphore count by one. Fails and …","<code>sig_sem</code>: Increment the semaphore count by one.","","","","","","","","","","","","","","","","","","","","","","","","","<code>wai_sem</code>: Decrement the semaphore count by one. Blocks the …","<code>twai_sem</code>: Decrement the semaphore count by one. Blocks the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Error type for <code>TaskRef::activate</code>.","Error type for <code>TaskRef::activate_on</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: …","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","The CPU lock state is active.","The error type returned by <code>current</code> when the CPU lock state …","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: …","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","The class the task belongs to does not permit assigning …","Bad parameter.","Bad parameter.","Bad parameter.","Bad state.","The task is dormant.","The task is dormant.","Bad state.","Bad state.","Bad state.","Bad state.","Bad state.","Bad state.","Bad state.","Error type for <code>TaskRef::cancel_activate_all</code>.","Error type for <code>TaskRef::cancel_wake_all</code>.","Represents a reference to the current task. Returned by …","Error type for <code>current_id</code>.","Error type for <code>delay</code>.","Error type for <code>disable_termination</code>.","","Error type for <code>enable_termination</code>.","Error type for <code>exit</code>.","Task information returned by <code>TaskRef::info</code>.","Error type for <code>TaskRef::info</code>.","Error type for <code>TaskRef::migrate</code>.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","Task priority value.","Error type for <code>TaskRef::priority</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","The task is already suspended.","Error type for <code>TaskRef::raise_termination</code>.","","Error type for <code>TaskRef::release_wait</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>TaskRef::resume</code>.","","Error type for <code>TaskRef::set_base_priority</code>.","Error type for <code>sleep</code>.","Error type for <code>sleep_timeout</code>.","Task state returned by <code>TaskRef::state</code>.","Error type for <code>TaskRef::state</code>.","Error type for <code>TaskRef::suspend</code>.","","A borrowed reference to a task.","Error type for <code>TaskRef::terminate</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","","","Error type for <code>TaskRef::wake</code>.","<code>act_tsk</code>: Pend an activation request for the task.","<code>mact_tsk</code>: Pend an activation request for the task, …","Get the raw object ID.","Get the raw object ID.","Get the raw object ID as <code>abi::NonNullID</code>.","Get the raw object ID as <code>abi::NonNullID</code>.","Borrow <code>Current</code> as <code>TaskRef</code>.","Get the task’s base priority.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>can_act</code>: Cancel any pending activation requests for the …","<code>can_wup</code>: Cancel any wake up requests for the task. Returns …","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a reference to the current task.","<code>get_tid</code>: Get the currently running task’s ID.","Get the task’s current priority.","<code>dly_tsk</code>: Delay the current task.","<code>dis_ter</code>: Disable the termination of the current task by a …","<code>ena_ter</code>: Re-enable the termination of the current task by …","","","","","","","","","","","","","","","","","","","","","","","","","<code>ext_tsk</code>: Terminate the current task.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a <code>TaskRef</code> from a raw object ID.","","","<code>ref_tsk</code>: Get the task’s general information.","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>sns_ter</code>: Determine if the termination by a termination …","<code>mig_tsk</code>: Change the task’s assigned processor.","","","","","","","","","","","","","","","","","","","","","","","","<code>get_pri</code>: Get the task’s priority.","<code>ras_ter</code>: Pend a termination request.","<code>rel_wai</code>: Forcibly release the task from waiting.","<code>rsm_tsk</code>: Resume the task.","<code>chg_pri</code>: Change the task’s base priority.","<code>slp_tsk</code>: Put the current task to sleep.","<code>dly_tsk</code>: Put the current task to sleep with timeout.","Get the task’s state.","<code>get_tst</code>: Get the task’s state.","<code>sus_tsk</code>: Suspend the task.","<code>ter_tsk</code>: Terminate the task.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>wup_tsk</code>: Pend a wake up request for the task.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A valid relative time value (<code>abi::RELTIM</code>).","The infinite timeout value.","A valid timeout value (<code>abi::TMO</code>).","The error type returned when a checked duration conversion …","The zero duration, which causes polling.","The zero timeout value, which causes polling.","","","","","","","","","","","","","Construct a <code>Duration</code> value in a concise syntax. Panics if …","Construct a <code>Duration</code> value in a concise syntax. Panics if …","","","","","","","","Construct a new <code>Duration</code> from the specified number of …","Construct a new <code>Timeout</code> from the specified number of …","Construct a new <code>Duration</code> from the specified number of …","Construct a new <code>Timeout</code> from the specified number of …","Construct a new <code>Duration</code> from the specified number of …","Construct a new <code>Timeout</code> from the specified number of …","Construct a new <code>Duration</code> from a raw value.","Construct a new <code>Timeout</code> from a raw value.","Construct a new <code>Duration</code> from the specified number of …","Construct a new <code>Timeout</code> from the specified number of …","","","","","","","","","","","Construct a <code>Timeout</code> value in a concise syntax. Panics if …","Construct a <code>Timeout</code> value in a concise syntax. Panics if …","","","","","","","","","","","","","","The wait queue is processed in a FIFO order.","Specifies the sorting order of a wait queue.","The wait queue is processed in a task priority order.","Convert <code>self</code> to a value of type <code>abi::ATR</code>.","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,2,2,0,0,3,0,4,5,6,7,8,9,10,2,11,3,1,4,5,6,7,8,9,10,2,11,3,1,0,0,0,0,0,4,5,6,7,8,9,10,2,11,3,1,0,0,11,0,0,0,2,0,0,0,0,4,5,6,7,8,9,10,2,11,3,1,0,0,4,0,6,4,5,6,7,8,9,10,2,11,3,1,4,5,6,7,8,9,10,2,11,3,1,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,4,5,6,7,8,9,10,2,11,3,1,11,3,2,0,0,0,0,0,0,0,0,0,0,4,5,6,7,8,9,10,2,11,3,1,0,0,0,0,0,2,11,3,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,8,7,5,0,0,0,0,0,0,0,0,0,0,0,0,8,10,0,0,0,0,7,8,0,0,0,0,0,0,4,5,6,7,8,9,10,2,11,3,1,4,5,6,7,8,9,10,2,11,3,1,0,2,2,2,2,0,0,0,0,0,4,5,6,7,8,9,10,2,11,3,1,0,0,0,0,0,0,2,4,5,6,9,0,2,0,0,0,12,13,14,15,16,17,18,19,20,21,13,14,15,16,17,18,19,20,21,13,14,15,16,17,18,19,20,21,0,0,13,14,17,18,0,0,0,13,14,17,18,0,0,13,14,17,18,0,0,0,13,14,17,18,14,15,18,19,0,0,16,22,22,13,14,15,16,17,18,19,20,21,23,22,13,14,15,16,17,18,19,20,21,23,22,13,14,15,16,17,18,19,20,21,23,22,13,14,15,16,17,18,19,20,21,22,23,23,13,14,15,16,17,18,19,20,21,23,22,13,14,15,16,17,18,19,20,21,23,22,13,14,15,16,17,18,19,20,21,22,22,22,13,14,15,16,17,18,19,20,21,23,22,23,23,13,14,15,16,17,18,19,20,21,22,22,22,22,22,22,13,14,15,16,17,18,19,20,21,23,22,13,14,15,16,17,18,19,20,21,23,22,22,22,13,14,15,16,17,18,19,20,21,23,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,0,0,0,0,0,0,73,74,72,75,73,74,72,75,73,74,72,75,73,73,74,72,75,73,74,72,75,73,74,74,72,75,76,74,73,74,72,75,73,73,74,72,74,73,74,73,74,72,75,73,74,72,75,73,74,72,75,77,0,77,77,77,77,0,77,77,77,77,0,0,0,0,0,77,77,77,77,78,0,0,0,0,79,80,81,82,83,84,79,80,81,82,83,84,79,80,81,82,83,84,82,0,79,80,0,0,0,0,0,0,79,80,0,79,80,79,80,80,81,0,85,85,79,80,81,82,83,84,86,85,79,80,81,82,83,84,86,85,79,80,81,82,83,84,86,85,79,80,81,82,83,84,85,86,79,80,81,82,83,84,86,85,86,79,80,81,82,83,84,86,85,79,80,81,82,83,84,85,85,85,85,85,79,80,81,82,83,84,86,85,79,80,81,82,83,84,85,85,79,80,81,82,83,84,86,85,85,79,80,81,82,83,84,86,85,79,80,81,82,83,84,86,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,116,117,118,119,120,121,116,117,118,119,120,121,116,117,118,119,116,117,118,116,117,0,0,0,0,0,0,116,117,116,117,116,117,117,118,0,0,122,122,116,117,118,119,120,121,123,122,116,117,118,119,120,121,123,122,116,117,118,119,120,121,123,122,116,117,118,119,120,121,122,123,116,117,118,119,120,121,123,122,116,117,118,119,120,121,123,122,116,117,118,119,120,121,122,122,122,116,117,118,119,120,121,123,122,122,122,116,117,118,119,120,121,122,123,116,117,118,119,120,121,123,122,116,117,118,119,120,121,123,122,122,116,117,118,119,120,121,123,122,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,0,0,0,160,160,159,160,161,159,160,161,159,160,161,0,159,160,161,159,160,161,159,160,161,159,160,160,159,160,161,159,160,161,159,160,160,161,159,160,161,159,160,161,162,163,164,165,166,167,168,163,164,165,166,167,168,163,164,165,166,167,168,0,164,165,0,0,0,164,165,0,163,164,165,0,0,164,165,165,166,0,0,169,169,163,164,165,166,167,168,170,169,163,164,165,166,167,168,170,169,163,164,165,166,167,168,170,169,170,163,164,165,166,167,168,169,170,163,164,165,166,167,168,170,169,163,164,165,166,167,168,170,169,163,164,165,166,167,168,169,169,169,163,164,165,166,167,168,170,169,163,164,165,166,167,168,169,169,169,163,164,165,166,167,168,170,169,163,164,165,166,167,168,170,169,163,164,165,166,167,168,170,169,169,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,0,0,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,215,220,0,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,201,203,205,213,214,203,204,208,209,210,211,212,213,214,0,0,0,0,0,0,221,0,0,0,0,0,201,208,209,210,211,212,216,217,218,0,0,200,201,208,211,0,221,0,216,217,218,0,221,0,0,0,0,0,0,221,0,0,216,217,218,217,221,221,0,222,222,222,223,222,223,223,224,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,215,225,220,221,224,222,223,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,215,225,220,221,224,222,223,222,222,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,215,225,220,221,224,222,223,0,0,224,0,0,0,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,215,225,220,221,222,0,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,215,225,220,221,224,222,223,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,215,225,220,221,224,222,223,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,215,220,222,225,221,222,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,215,225,220,221,224,222,223,0,222,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,215,225,220,222,222,222,222,222,222,0,0,224,222,222,222,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,215,225,220,221,224,222,223,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,215,225,220,221,224,222,223,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,215,225,220,221,224,222,223,222,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,0,312,0,0,313,312,313,312,314,313,312,314,313,312,313,312,313,312,0,0,313,312,313,312,314,313,312,313,312,313,312,313,312,313,312,313,312,313,312,314,313,312,312,313,312,313,312,0,0,314,313,313,313,312,312,312,314,313,312,314,313,312,315,0,315,315,315,315,315,315,315,315,315,315,315,315],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[],["t_rmpf",3]],[[],["t_rsem",3]],[[],["t_rflg",3]],[[],["t_rdtq",3]],[[],["t_rpdq",3]],[[],["t_rmtx",3]],[[],["t_rspn",3]],[[],["t_rtsk",3]],[[],["t_rcyc",3]],[[],["t_ralm",3]],[[],["acvct",3]],null,null,null,null,null,null,null,null,null,null,null,[[["t_rmpf",3]],["bool",15]],[[["t_rsem",3]],["bool",15]],[[["t_rflg",3]],["bool",15]],[[["t_rdtq",3]],["bool",15]],[[["t_rpdq",3]],["bool",15]],[[["t_rmtx",3]],["bool",15]],[[["t_rspn",3]],["bool",15]],[[["t_rtsk",3]],["bool",15]],[[["t_rcyc",3]],["bool",15]],[[["t_ralm",3]],["bool",15]],[[["acvct",3]],["bool",15]],null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["t_rmpf",3]],["bool",15]],[[["t_rsem",3]],["bool",15]],[[["t_rflg",3]],["bool",15]],[[["t_rdtq",3]],["bool",15]],[[["t_rpdq",3]],["bool",15]],[[["t_rmtx",3]],["bool",15]],[[["t_rspn",3]],["bool",15]],[[["t_rtsk",3]],["bool",15]],[[["t_rcyc",3]],["bool",15]],[[["t_ralm",3]],["bool",15]],[[["acvct",3]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,null,null,null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["closure",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["id",6]],[[],["nonnullid",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["senderror",4]],[[],["sendtimeouterror",4]],[[],["trysenderror",4]],[[],["sendforcederror",4]],[[],["recverror",4]],[[],["recvtimeouterror",4]],[[],["tryrecverror",4]],[[],["initializeerror",4]],[[],["infoerror",4]],[[],["info",3]],[[],["dataqueueref",3]],[[["senderror",4]],["bool",15]],[[["sendtimeouterror",4]],["bool",15]],[[["trysenderror",4]],["bool",15]],[[["sendforcederror",4]],["bool",15]],[[["recverror",4]],["bool",15]],[[["recvtimeouterror",4]],["bool",15]],[[["tryrecverror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["dataqueueref",3]],["bool",15]],[[],["option",4,[["nonnullid",6]]]],[[],["option",4,[["nonnullid",6]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["nonnullid",6]]],[[],["result",4,[["info",3],["error",3,[["infoerror",4]]]]]],[[],["result",4,[["error",3,[["initializeerror",4]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["usize",15]],[[["senderror",4]],["bool",15]],[[["sendtimeouterror",4]],["bool",15]],[[["trysenderror",4]],["bool",15]],[[["sendforcederror",4]],["bool",15]],[[["recverror",4]],["bool",15]],[[["recvtimeouterror",4]],["bool",15]],[[["tryrecverror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["dataqueueref",3]],["bool",15]],[[],["result",4,[["dataelement",6],["error",3,[["recverror",4]]]]]],[[["timeout",3]],["result",4,[["dataelement",6],["error",3,[["recvtimeouterror",4]]]]]],[[["dataelement",6]],["result",4,[["error",3,[["senderror",4]]]]]],[[["dataelement",6]],["result",4,[["error",3,[["sendforcederror",4]]]]]],[[["dataelement",6],["timeout",3]],["result",4,[["error",3,[["sendtimeouterror",4]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["dataelement",6],["error",3,[["tryrecverror",4]]]]]],[[["dataelement",6]],["result",4,[["error",3,[["trysenderror",4]]]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["error",3]],[[],["errorcode",3]],[[],["kind",3]],[[],["never",4]],[[],["errorcode",3]],[[["error",3]],["bool",15]],[[["errorcode",3]],["bool",15]],[[["kind",3]],["bool",15]],[[["never",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["error",3]]],[[]],[[]],[[["errorcode",3]],["option",4]],[[],["er",6]],[[]],[[]],[[]],[[]],[[]],[[["error",3]],["bool",15]],[[["errorcode",3]],["bool",15]],[[["kind",3]],["bool",15]],[[["er",6]],["option",4]],[[["errorcode",3]]],[[["er",6]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[],["exiterror",4]],[[["exiterror",4]],["bool",15]],[[],["error",3,[["exiterror",4]]]],[[["formatter",3]],["result",6]],[[]],[[["errorcode",3]],["option",4]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["exiterror",4]],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["id",6]],[[],["nonnullid",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["geterror",4]],[[],["gettimeouterror",4]],[[],["trygeterror",4]],[[],["releaseerror",4]],[[],["initializeerror",4]],[[],["infoerror",4]],[[],["info",3]],[[],["memorypoolref",3]],[[["geterror",4]],["bool",15]],[[["gettimeouterror",4]],["bool",15]],[[["trygeterror",4]],["bool",15]],[[["releaseerror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["memorypoolref",3]],["bool",15]],[[],["option",4,[["nonnullid",6]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["nonnullid",6]]],[[],["result",4,[["block",6],["error",3,[["geterror",4]]]]]],[[["timeout",3]],["result",4,[["block",6],["error",3,[["gettimeouterror",4]]]]]],[[],["result",4,[["info",3],["error",3,[["infoerror",4]]]]]],[[],["result",4,[["error",3,[["initializeerror",4]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["geterror",4]],["bool",15]],[[["gettimeouterror",4]],["bool",15]],[[["trygeterror",4]],["bool",15]],[[["releaseerror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["memorypoolref",3]],["bool",15]],[[["block",6]],["result",4,[["error",3,[["releaseerror",4]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["block",6],["error",3,[["trygeterror",4]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["id",6]],[[],["nonnullid",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["lockerror",4]],[[],["locktimeouterror",4]],[[],["trylockerror",4]],[[],["unlockerror",4]],[[],["initializeerror",4]],[[],["infoerror",4]],[[],["info",3]],[[],["mutexref",3]],[[["lockerror",4]],["bool",15]],[[["locktimeouterror",4]],["bool",15]],[[["trylockerror",4]],["bool",15]],[[["unlockerror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["mutexref",3]],["bool",15]],[[],["option",4,[["nonnullid",6]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["nonnullid",6]]],[[],["result",4,[["info",3],["error",3,[["infoerror",4]]]]]],[[],["result",4,[["error",3,[["initializeerror",4]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["error",3,[["lockerror",4]]]]]],[[["timeout",3]],["result",4,[["error",3,[["locktimeouterror",4]]]]]],[[["lockerror",4]],["bool",15]],[[["locktimeouterror",4]],["bool",15]],[[["trylockerror",4]],["bool",15]],[[["unlockerror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["mutexref",3]],["bool",15]],[[],["option",4,[["nonnullid",6]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["error",3,[["trylockerror",4]]]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",4,[["error",3,[["unlockerror",4]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["id",6]],[[],["nonnullid",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["currentiderror",4]],[[],["processor",3]],[[],["processortryfromerror",3]],[[],["result",4,[["processor",3],["error",3,[["currentiderror",4]]]]]],[[["currentiderror",4]],["bool",15]],[[["processor",3]],["bool",15]],[[["processortryfromerror",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["errorcode",3]],["option",4]],[[["id",6]],["option",4]],[[["nonnullid",6]]],[[]],[[]],[[]],[[["currentiderror",4]],["bool",15]],[[["processor",3]],["bool",15]],[[["processortryfromerror",3]],["bool",15]],[[],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["id",6]],[[],["nonnullid",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["signalerror",4]],[[],["waiterror",4]],[[],["waittimeouterror",4]],[[],["pollerror",4]],[[],["initializeerror",4]],[[],["infoerror",4]],[[],["info",3]],[[],["semaphoreref",3]],[[],["count",6]],[[["signalerror",4]],["bool",15]],[[["waiterror",4]],["bool",15]],[[["waittimeouterror",4]],["bool",15]],[[["pollerror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["semaphoreref",3]],["bool",15]],[[],["option",4,[["nonnullid",6]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["nonnullid",6]]],[[],["result",4,[["info",3],["error",3,[["infoerror",4]]]]]],[[],["result",4,[["error",3,[["initializeerror",4]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["signalerror",4]],["bool",15]],[[["waiterror",4]],["bool",15]],[[["waittimeouterror",4]],["bool",15]],[[["pollerror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["semaphoreref",3]],["bool",15]],[[],["result",4,[["error",3,[["pollerror",4]]]]]],[[],["result",4,[["error",3,[["signalerror",4]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",4,[["error",3,[["waiterror",4]]]]]],[[["timeout",3]],["result",4,[["error",3,[["waittimeouterror",4]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4,[["error",3,[["activateerror",4]]]]]],[[["processor",3]],["result",4,[["error",3,[["activateonerror",4]]]]]],[[],["id",6]],[[],["id",6]],[[],["nonnullid",6]],[[],["nonnullid",6]],[[],["taskref",3]],[[],["priority",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["usize",15],["error",3,[["cancelactivateallerror",4]]]]]],[[],["result",4,[["usize",15],["error",3,[["cancelwakeallerror",4]]]]]],[[],["activateerror",4]],[[],["activateonerror",4]],[[],["cancelactivateallerror",4]],[[],["setbasepriorityerror",4]],[[],["priorityerror",4]],[[],["migrateerror",4]],[[],["stateerror",4]],[[],["infoerror",4]],[[],["wakeerror",4]],[[],["cancelwakeallerror",4]],[[],["releasewaiterror",4]],[[],["suspenderror",4]],[[],["resumeerror",4]],[[],["terminateerror",4]],[[],["raiseterminationerror",4]],[[],["sleeperror",4]],[[],["sleeptimeouterror",4]],[[],["delayerror",4]],[[],["exiterror",4]],[[],["disableterminationerror",4]],[[],["badcontexterror",3]],[[],["currentiderror",4]],[[],["state",4]],[[],["info",3]],[[],["taskref",3]],[[],["current",3]],[[],["result",4,[["current",3],["badcontexterror",3]]]],[[],["result",4,[["option",4,[["nonnullid",6]]],["error",3,[["currentiderror",4]]]]]],[[],["priority",6]],[[["duration",3]],["result",4,[["error",3,[["delayerror",4]]]]]],[[],["result",4,[["error",3,[["disableterminationerror",4]]]]]],[[],["result",4,[["error",3,[["enableterminationerror",6]]]]]],[[["activateerror",4]],["bool",15]],[[["activateonerror",4]],["bool",15]],[[["cancelactivateallerror",4]],["bool",15]],[[["setbasepriorityerror",4]],["bool",15]],[[["priorityerror",4]],["bool",15]],[[["migrateerror",4]],["bool",15]],[[["stateerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["wakeerror",4]],["bool",15]],[[["cancelwakeallerror",4]],["bool",15]],[[["releasewaiterror",4]],["bool",15]],[[["suspenderror",4]],["bool",15]],[[["resumeerror",4]],["bool",15]],[[["terminateerror",4]],["bool",15]],[[["raiseterminationerror",4]],["bool",15]],[[["sleeperror",4]],["bool",15]],[[["sleeptimeouterror",4]],["bool",15]],[[["delayerror",4]],["bool",15]],[[["exiterror",4]],["bool",15]],[[["disableterminationerror",4]],["bool",15]],[[["badcontexterror",3]],["bool",15]],[[["currentiderror",4]],["bool",15]],[[["state",4]],["bool",15]],[[["taskref",3]],["bool",15]],[[],["error",3,[["exiterror",4]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["nonnullid",6]]],[[]],[[]],[[],["result",4,[["info",3],["error",3,[["infoerror",4]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["processor",3]],["result",4,[["error",3,[["migrateerror",4]]]]]],[[["activateerror",4]],["bool",15]],[[["activateonerror",4]],["bool",15]],[[["cancelactivateallerror",4]],["bool",15]],[[["setbasepriorityerror",4]],["bool",15]],[[["priorityerror",4]],["bool",15]],[[["migrateerror",4]],["bool",15]],[[["stateerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["wakeerror",4]],["bool",15]],[[["cancelwakeallerror",4]],["bool",15]],[[["releasewaiterror",4]],["bool",15]],[[["suspenderror",4]],["bool",15]],[[["resumeerror",4]],["bool",15]],[[["terminateerror",4]],["bool",15]],[[["raiseterminationerror",4]],["bool",15]],[[["sleeperror",4]],["bool",15]],[[["sleeptimeouterror",4]],["bool",15]],[[["delayerror",4]],["bool",15]],[[["exiterror",4]],["bool",15]],[[["disableterminationerror",4]],["bool",15]],[[["badcontexterror",3]],["bool",15]],[[["currentiderror",4]],["bool",15]],[[["taskref",3]],["bool",15]],[[],["result",4,[["priority",6],["error",3,[["priorityerror",4]]]]]],[[],["result",4,[["error",3,[["raiseterminationerror",4]]]]]],[[],["result",4,[["error",3,[["releasewaiterror",4]]]]]],[[],["result",4,[["error",3,[["resumeerror",4]]]]]],[[["priority",6]],["result",4,[["error",3,[["setbasepriorityerror",4]]]]]],[[],["result",4,[["error",3,[["sleeperror",4]]]]]],[[["timeout",3]],["result",4,[["error",3,[["sleeptimeouterror",4]]]]]],[[],["state",4]],[[],["result",4,[["state",4],["error",3,[["stateerror",4]]]]]],[[],["result",4,[["error",3,[["suspenderror",4]]]]]],[[],["result",4,[["error",3,[["terminateerror",4]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",4,[["error",3,[["wakeerror",4]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["reltim",6]],[[],["tmo",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["duration",3]],[[],["timeout",3]],[[["duration",3]],["ordering",4]],[[["timeout",3]],["ordering",4]],null,null,[[["duration",3]],["bool",15]],[[["timeout",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["u128",15]],["option",4]],[[["reltim",6]]],[[["tmo",6]]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["duration",3]],["bool",15]],[[["timeout",3]],["bool",15]],[[["duration",3]],["option",4,[["ordering",4]]]],[[["timeout",3]],["option",4,[["ordering",4]]]],null,null,[[],["result",4]],[[["stdduration",3]],["result",4]],[[["timeout",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[["stdduration",3]],["result",4]],[[["duration",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[],["atr",6]],[[]],[[]],[[],["queueorder",4]],[[["queueorder",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"acvct"],[3,"T_RTSK"],[3,"T_RALM"],[3,"T_RMPF"],[3,"T_RSEM"],[3,"T_RFLG"],[3,"T_RDTQ"],[3,"T_RPDQ"],[3,"T_RMTX"],[3,"T_RSPN"],[3,"T_RCYC"],[8,"IntoClosure"],[4,"SendError"],[4,"SendTimeoutError"],[4,"TrySendError"],[4,"SendForcedError"],[4,"RecvError"],[4,"RecvTimeoutError"],[4,"TryRecvError"],[4,"InitializeError"],[4,"InfoError"],[3,"DataqueueRef"],[3,"Info"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"ZeroSized"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[3,"Kind"],[3,"Error"],[3,"ErrorCode"],[4,"Never"],[8,"ErrorKind"],[4,"ExitError"],[13,"AccessDenied"],[4,"GetError"],[4,"GetTimeoutError"],[4,"TryGetError"],[4,"ReleaseError"],[4,"InitializeError"],[4,"InfoError"],[3,"MemoryPoolRef"],[3,"Info"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadParam"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[4,"LockError"],[4,"LockTimeoutError"],[4,"TryLockError"],[4,"UnlockError"],[4,"InitializeError"],[4,"InfoError"],[3,"MutexRef"],[3,"Info"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadParam"],[13,"Deadlock"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadParam"],[13,"Deadlock"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadParam"],[13,"Deadlock"],[13,"Timeout"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadSequence"],[4,"CurrentIdError"],[3,"Processor"],[3,"ProcessorTryFromError"],[13,"BadContext"],[4,"SignalError"],[4,"WaitError"],[4,"WaitTimeoutError"],[4,"PollError"],[4,"InitializeError"],[4,"InfoError"],[3,"SemaphoreRef"],[3,"Info"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"QueueOverflow"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[4,"ActivateError"],[4,"ActivateOnError"],[4,"CancelActivateAllError"],[4,"SetBasePriorityError"],[4,"PriorityError"],[4,"MigrateError"],[4,"StateError"],[4,"InfoError"],[4,"WakeError"],[4,"CancelWakeAllError"],[4,"ReleaseWaitError"],[4,"SuspendError"],[4,"ResumeError"],[4,"TerminateError"],[4,"RaiseTerminationError"],[4,"DisableTerminationError"],[4,"SleepError"],[4,"SleepTimeoutError"],[4,"DelayError"],[4,"ExitError"],[4,"CurrentIdError"],[4,"State"],[3,"TaskRef"],[3,"Current"],[3,"Info"],[3,"BadContextError"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"QueueOverflow"],[13,"BadContext"],[13,"BadId"],[13,"NotSupported"],[13,"AccessDenied"],[13,"QueueOverflow"],[13,"BadParam"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"NotSupported"],[13,"AccessDenied"],[13,"BadState"],[13,"BadContext"],[13,"BadContext"],[13,"NotSupported"],[13,"Released"],[13,"TerminateRequest"],[13,"BadContext"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"BadParam"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"BadState"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadState"],[13,"BadParam"],[13,"BadContext"],[13,"BadId"],[13,"NotSupported"],[13,"AccessDenied"],[13,"BadState"],[13,"BadContext"],[13,"BadId"],[13,"NotSupported"],[13,"AccessDenied"],[13,"BadState"],[13,"BadContext"],[13,"BadId"],[13,"BadState"],[13,"BadParam"],[13,"AccessDenied"],[13,"BadContext"],[13,"NotSupported"],[13,"Released"],[13,"TerminateRequest"],[13,"BadContext"],[13,"NotSupported"],[13,"Timeout"],[13,"Released"],[13,"TerminateRequest"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"NotSupported"],[13,"AccessDenied"],[13,"BadState"],[13,"QueueOverflow"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadState"],[13,"BadParam"],[13,"BadContext"],[13,"BadId"],[13,"NotSupported"],[13,"AccessDenied"],[13,"BadState"],[13,"QueueOverflow"],[3,"Timeout"],[3,"Duration"],[3,"TryFromDurationError"],[4,"QueueOrder"]],"a":{"act_tsk":[1430],"can_act":[1490],"can_wup":[1491],"chg_pri":[1681],"dis_ter":[1522],"dly_tsk":[1521],"ena_ter":[1523],"ext_ker":[725],"ext_tsk":[1548],"fsnd_dtq":[576],"get_mpf":[840],"get_pid":[1110],"get_pri":[1677],"get_tid":[1519],"get_tst":[1685],"ini_mpf":[843],"ini_mtx":[1015],"ini_sem":[549,1237],"loc_mtx":[1024],"mact_tsk":[1431],"mig_tsk":[1653],"park":[1682],"park_timeout":[1683],"pget_mpf":[868],"ploc_mtx":[1050],"pol_sem":[1253],"prcv_dtq":[600],"psnd_dtq":[601],"ras_ter":[1678],"rcv_dtq":[573],"ref_dtq":[548],"ref_mpf":[842],"ref_mtx":[1014],"ref_sem":[1236],"ref_tsk":[1625],"rel_mpf":[859],"rel_wai":[1679],"rsm_tsk":[1680],"sig_sem":[1254],"slp_tsk":[1682],"snd_dtq":[575],"sns_ctx":[734],"sns_dpn":[731],"sns_dsp":[732],"sns_ker":[733],"sns_loc":[730],"sns_ter":[1652],"sus_tsk":[1686],"ter_tsk":[1687],"tget_mpf":[841],"tloc_mtx":[1025],"trcv_dtq":[574],"tslp_tsk":[1683],"tsnd_dtq":[577],"twai_sem":[1280],"unl_mtx":[1059],"unpark":[1766],"wai_sem":[1279],"wup_tsk":[1766]}},\
"itron_solid_asp3":{"doc":"Rust interface to interact with operating systems based on …","t":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,6,6,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,17,17,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,3,3,3,3,3,3,3,3,3,3,19,3,3,19,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,12,12,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,12,12,12,3,5,12,12,12,12,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,12,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,12,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,5,12,12,12,12,12,5,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,5,5,12,5,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,12,12,12,12,12,5,5,5,5,5,5,5,6,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,5,5,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,12,12,12,12,12,12,5,5,12,12,12,12,5,12,12,5,12,5,5,5,12,12,5,5,5,5,5,5,12,5,5,12,12,5,5,12,12,12,5,12,5,5,5,12,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,5,5,12,5,5,12,12,12,12,12,5,12,12,12,5,6,8,10,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,3,6,3,3,4,13,13,13,13,3,4,4,13,13,13,13,13,4,4,13,13,13,13,4,4,4,13,13,13,13,13,13,13,13,4,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,8,3,6,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,11,11,11,11,5,11,11,11,11,5,5,5,5,5,11,11,11,11,12,14,14,14,14,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,6,4,3,4,13,13,4,4,3,4,4,3,3,13,13,13,13,4,13,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,3,4,13,13,13,13,3,4,4,3,3,13,13,13,13,13,13,4,4,13,13,13,13,4,4,13,13,13,13,13,13,13,13,4,4,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,3,13,13,13,13,4,13,13,3,4,13,4,4,4,3,3,13,13,13,13,4,13,13,13,13,13,13,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,4,3,3,18,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,3,6,4,13,13,3,4,4,13,13,13,4,13,13,13,3,3,4,13,13,13,13,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,3,4,4,3,4,4,4,4,13,6,4,3,4,8,4,13,13,13,13,13,13,13,13,13,13,6,4,13,13,13,13,4,13,4,13,13,13,4,13,4,4,4,4,4,4,13,3,3,4,13,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,5,11,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,18,3,3,18,18,11,11,11,11,11,11,11,11,11,11,11,11,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,11,11,11,11,11,11,11,11,11,11,11],"n":["_changelog_","abi","closure","dataqueue","error","eventflag","interrupt","kernel","macros","memorypool","messagebuffer","mutex","prioritydataqueue","processor","semaphore","task","time","wait","ACPTN","ATR","ER","ER_BOOL","ER_ID","ER_UINT","EXCNO","EXINF","E_BOVR","E_CLS","E_COMM","E_CTX","E_DLT","E_ID","E_ILUSE","E_MACV","E_NOEXS","E_NOID","E_NOMEM","E_NORES","E_NOSPT","E_OACV","E_OBJ","E_OK","E_PAR","E_QOVR","E_RASTER","E_RLWAI","E_RSATR","E_RSFN","E_SYS","E_TMOUT","E_WBLK","FALSE","FLGPTN","FN","FP","HRTCNT","ID","INHNO","INTNO","ISR","MB_T","MODE","MPF_T","NonNullID","NonZeroER","PRI","RELTIM","STAT","SYSTIM","TACP_KERNEL","TACP_SHARED","TASK","TA_ACT","TA_CEILING","TA_CLR","TA_INHERIT","TA_NOACTQUE","TA_NULL","TA_STA","TA_TPRI","TA_WMUL","TENFY_ACTTSK","TENFY_INCVAR","TENFY_SETFLG","TENFY_SETVAR","TENFY_SIGSEM","TENFY_SNDDTQ","TENFY_WUPTSK","TIPM_ENAALL","TMAX_RELTIM","TMEHDR","TMO","TMO_FEVR","TMO_NBLK","TMO_POL","TNFY_ACTTSK","TNFY_HANDLER","TNFY_INCVAR","TNFY_SETFLG","TNFY_SETVAR","TNFY_SIGSEM","TNFY_SNDDTQ","TNFY_WUPTSK","TPRI_INI","TPRI_SELF","TRUE","TSK_NONE","TSK_SELF","TTS_DMT","TTS_RDY","TTS_RUN","TTS_SUS","TTS_WAI","TTS_WAS","TTW_DLY","TTW_FLG","TTW_MPF","TTW_MTX","TTW_RDTQ","TTW_RMBF","TTW_RPDQ","TTW_SDTQ","TTW_SEM","TTW_SLP","TTW_SMBF","TTW_SPDQ","TWF_ANDW","TWF_ORW","T_CALM","T_CCYC","T_CDTQ","T_CFLG","T_CISR","T_CMBF","T_CMPF","T_CMTX","T_CPDQ","T_CSEM","T_CTSK","T_ENFY","T_ENFY_DTQ","T_ENFY_VAR","T_NFY","T_NFYINFO","T_NFY_DTQ","T_NFY_FLG","T_NFY_HDR","T_NFY_IVAR","T_NFY_SEM","T_NFY_TSK","T_NFY_VAR","T_RALM","T_RCYC","T_RDTQ","T_RFLG","T_RMBF","T_RMPF","T_RMTX","T_RPDQ","T_RSEM","T_RTSK","__pad_for_aarch64","__pad_for_aarch64","acptn1","acptn2","acptn3","acptn4","acre_alm","acre_cyc","acre_dtq","acre_flg","acre_isr","acre_mbf","acre_mpf","acre_mtx","acre_pdq","acre_sem","acre_tsk","act_tsk","actcnt","acttsk","acttsk","acvct","adj_tim","almatr","almstat","blkcnt","blksz","bool_t","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_act","can_wup","ceilpri","chg_ipm","chg_pri","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clr_flg","clr_int","cycatr","cycphs","cycstat","cyctim","data","del_alm","del_cyc","del_dtq","del_flg","del_isr","del_mbf","del_mpf","del_mtx","del_pdq","del_sem","del_tsk","dis_dsp","dis_int","dis_ter","dister","dly_tsk","dtqatr","dtqcnt","dtqid","dtqid","dtqmb","ena_dsp","ena_int","ena_ter","enfy","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","exd_tsk","exinf","exinf","exinf","ext_ker","ext_tsk","fblkcnt","fch_hrt","flgatr","flgid","flgptn","flgptn","fmbfsz","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fsnd_dtq","get_inf","get_ipm","get_lod","get_mpf","get_nth","get_pri","get_tid","get_tim","get_tst","handler","htskid","iflgptn","incvar","incvar","ini_dtq","ini_flg","ini_mbf","ini_mpf","ini_mtx","ini_pdq","ini_sem","int_t","intno","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","isemcnt","isr","isratr","isrpri","itskpri","lefttim","lefttim","lefttmo","loc_cpu","loc_mtx","maxdpri","maxmsz","maxsem","mbfatr","mbfmb","mbfsz","mpf","mpfatr","mpfmb","mtxatr","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","nfy","nfyinfo","nfyinfo","nfymode","p_var","p_var","p_var","pdqatr","pdqcnt","pdqmb","pget_mpf","ploc_mtx","pol_flg","pol_sem","prb_int","prcv_dtq","prcv_mbf","prcv_pdq","psnd_dtq","psnd_mbf","psnd_pdq","ras_int","ras_ter","raster","rcv_dtq","rcv_mbf","rcv_pdq","ref_alm","ref_cyc","ref_dtq","ref_flg","ref_mbf","ref_mpf","ref_mtx","ref_pdq","ref_sem","ref_tsk","rel_mpf","rel_wai","rot_rdq","rsm_tsk","rtskid","rtskid","rtskid","sdtqcnt","sematr","semcnt","semid","set_flg","set_tim","setflg","setflg","setvar","setvar","sig_sem","sigsem","sigsem","slp_tsk","smbfcnt","snd_dtq","snd_mbf","snd_pdq","snddtq","snddtq","sns_ctx","sns_dpn","sns_dsp","sns_ker","sns_loc","sns_ter","spdqcnt","sta_alm","sta_cyc","stk","stksz","stp_alm","stp_cyc","stskid","stskid","stskid","sus_tsk","task","ter_tsk","tget_mpf","tloc_mtx","tmehdr","trcv_dtq","trcv_mbf","trcv_pdq","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tskatr","tskbpri","tskid","tskpri","tskstat","tskwait","tslp_tsk","tsnd_dtq","tsnd_mbf","tsnd_pdq","twai_flg","twai_sem","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uint_t","unl_cpu","unl_mtx","value","wai_flg","wai_sem","wobjid","wtskid","wtskid","wtskid","wtskid","wup_tsk","wupcnt","wuptsk","wuptsk","xsns_dpn","Closure","IntoClosure","into_closure","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadParam","BadState","BuildError","Builder","DataElement","Dataqueue","DataqueueRef","DeleteError","Deleted","Deleted","Deleted","Deleted","Info","InfoError","InitializeError","NotSupported","NotSupported","NotSupported","NotSupported","OutOfMemory","RecvError","RecvTimeoutError","Released","Released","Released","Released","SendError","SendForcedError","SendTimeoutError","TerminateRequest","TerminateRequest","TerminateRequest","TerminateRequest","Timeout","Timeout","Timeout","Timeout","TryRecvError","TrySendError","ZeroSized","as_raw","as_raw","as_raw_nonnull","as_raw_nonnull","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","capacity","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","delete","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","finish","first_waiting_receiving_task_id","first_waiting_sending_task_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_raw_nonnull","from_raw_nonnull","info","initialize","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_empty","leak","len","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","queue_order","recv","recv_timeout","send","send_forced","send_timeout","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_recv","try_send","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","Error","ErrorCode","ErrorKind","Kind","MaybeKind","Never","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","code","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from_error_code","get","into","into","into","into","kind","ne","ne","ne","new","new_unchecked","new_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","AccessDenied","ExitError","borrow","borrow_mut","clone","eq","exit","fmt","from","from_error_code","into","is_cpu_lock_active","is_dispatch_pending_active","is_dispatching_disabled","is_operational","is_task_context","ne","try_from","try_into","type_id","0","kernel","match_kernel","tt_is_kernel","tt_kernel","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadParam","BadParam","BadState","Block","BuildError","Builder","DeleteError","Deleted","Deleted","GetError","GetTimeoutError","Info","InfoError","InitializeError","MemoryPool","MemoryPoolRef","NotSupported","NotSupported","NotSupported","OutOfMemory","ReleaseError","Released","Released","TerminateRequest","TerminateRequest","Timeout","Timeout","TryGetError","as_raw","as_raw","as_raw_nonnull","as_raw_nonnull","as_ref","block_count","block_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","delete","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","finish","first_waiting_task_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","free_block_count","from","from","from","from","from","from","from","from","from","from","from","from","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_raw_nonnull","from_raw_nonnull","get","get_timeout","info","initialize","into","into","into","into","into","into","into","into","into","into","into","into","leak","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","queue_order","release","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadParam","BadParam","BadParam","BadParam","BadState","BuildError","Builder","DeleteError","Deleted","Deleted","Deleted","Deleted","Info","InfoError","InitializeError","MessageBuffer","MessageBufferRef","NotSupported","NotSupported","NotSupported","NotSupported","NotSupported","OutOfMemory","RecvError","RecvTimeoutError","Released","Released","Released","Released","SendError","SendTimeoutError","TerminateRequest","TerminateRequest","TerminateRequest","TerminateRequest","Timeout","Timeout","Timeout","Timeout","TryRecvError","TrySendError","Unknown","as_raw","as_raw","as_raw_nonnull","as_raw_nonnull","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","capacity","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","delete","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","finish","first_waiting_receiving_task_id","first_waiting_sending_task_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","free_byte_count","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_raw_nonnull","from_raw_nonnull","info","initialize","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_empty","leak","len","max_message_size","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","recv","recv_timeout","send","send_timeout","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_recv","try_send","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadParam","BadParam","BadParam","BadParam","BadSequence","BadState","BuildError","Builder","Ceiling","Deadlock","Deadlock","Deadlock","DeleteError","Deleted","Deleted","Info","InfoError","Inherit","InitializeError","LockError","LockTimeoutError","Mutex","MutexRef","None","NotSupported","NotSupported","OutOfMemory","PriorityProtection","Released","Released","TerminateRequest","TerminateRequest","Timeout","Timeout","TryLockError","UnlockError","as_raw","as_raw","as_raw_nonnull","as_raw_nonnull","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","delete","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","finish","first_waiting_task_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_raw_nonnull","from_raw_nonnull","info","inherit","initialize","into","into","into","into","into","into","into","into","into","into","into","into","into","leak","lock","lock_timeout","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","owning_task_id","priority_protection","queue_order","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","priority","0","0","0","0","0","0","0","0","0","0","BadContext","CurrentIdError","Processor","ProcessorTryFromError","UNIPROCESSOR","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","current","eq","eq","eq","fmt","fmt","fmt","from","from","from","from_error_code","into","into","into","ne","ne","ne","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadParam","BadState","BuildError","Builder","Count","DeleteError","Deleted","Deleted","Info","InfoError","InitializeError","NotSupported","NotSupported","OutOfMemory","PollError","QueueOverflow","Released","Released","Semaphore","SemaphoreRef","SignalError","TerminateRequest","TerminateRequest","Timeout","Timeout","WaitError","WaitTimeoutError","as_raw","as_raw","as_raw_nonnull","as_raw_nonnull","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","count","delete","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","finish","first_waiting_task_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_raw_nonnull","from_raw_nonnull","info","initial_count","initialize","into","into","into","into","into","into","into","into","into","into","into","into","leak","max_count","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","poll","queue_order","signal","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wait","wait_timeout","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","ActivateError","ActivateOnError","AllProcessors","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContextError","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadParam","BadParam","BadParam","BadParam","BadParam","BadParam","BadState","BadState","BadState","BadState","BadState","BadState","BadState","BadState","BadState","BadState","BuildError","Builder","CancelActivateAllError","CancelWakeAllError","Current","CurrentIdError","DelayError","DeleteError","DisableTerminationError","Dormant","EnableTerminationError","ExitError","Info","InfoError","IntoProcessorSet","MigrateError","NotSupported","NotSupported","NotSupported","NotSupported","NotSupported","NotSupported","NotSupported","NotSupported","NotSupported","OutOfMemory","Priority","PriorityError","QueueOverflow","QueueOverflow","QueueOverflow","QueueOverflow","RaiseTerminationError","Ready","ReleaseWaitError","Released","Released","Released","ResumeError","Running","SetBasePriorityError","SleepError","SleepTimeoutError","State","StateError","SuspendError","Suspended","Task","TaskRef","TerminateError","TerminateRequest","TerminateRequest","TerminateRequest","Timeout","Waiting","WaitingSuspended","WakeError","activate","activate_on","as_raw","as_raw","as_raw","as_raw_nonnull","as_raw_nonnull","as_raw_nonnull","as_ref","as_ref","base_priority","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cancel_activate_all","cancel_wake_all","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","current","current_id","current_priority","default","delay","delete","disable_termination","drop","enable_termination","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","exit","finish","finish_and_activate","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_raw_nonnull","from_raw_nonnull","hash","hash","info","initial_priority","initial_processor","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_termination_disabled","leak","migrate","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","priority","processor_affinity","raise_termination","release_wait","resume","set_base_priority","sleep","sleep_timeout","stack_size","start","state","state","suspend","terminate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wake","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","Duration","FOREVER","Timeout","TryFromDurationError","ZERO","ZERO","as_raw","as_raw","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","cmp","cmp","duration","duration","eq","eq","fmt","fmt","from","from","from","from_micros","from_micros","from_millis","from_millis","from_nanos","from_nanos","from_raw","from_raw","from_secs","from_secs","hash","hash","into","into","into","is_finite","ne","ne","partial_cmp","partial_cmp","timeout","timeout","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Fifo","QueueOrder","TaskPriority","as_raw_atr","borrow","borrow_mut","clone","eq","fmt","from","into","try_from","try_into","type_id"],"q":["itron_solid_asp3","","","","","","","","","","","","","","","","","","itron_solid_asp3::abiitron_solid_asp3::closure","","","itron_solid_asp3::dataqueueitron_solid_asp3::dataqueue::BuildError","","","","itron_solid_asp3::dataqueue::DeleteError","","","","itron_solid_asp3::dataqueue::InfoError","","","itron_solid_asp3::dataqueue::InitializeError","","","itron_solid_asp3::dataqueue::RecvError","","","","","","","itron_solid_asp3::dataqueue::RecvTimeoutError","","","","","","","","itron_solid_asp3::dataqueue::SendError","","","","","","","itron_solid_asp3::dataqueue::SendForcedError","","","","itron_solid_asp3::dataqueue::SendTimeoutError","","","","","","","","itron_solid_asp3::dataqueue::TryRecvError","","","","itron_solid_asp3::dataqueue::TrySendError","","","","itron_solid_asp3::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","itron_solid_asp3::kernel","","","","","","","","","","","","","","","","","","","","itron_solid_asp3::kernel::ExitError","itron_solid_asp3::macros","","","","itron_solid_asp3::memorypoolitron_solid_asp3::memorypool::BuildError","","","","","itron_solid_asp3::memorypool::DeleteError","","","","itron_solid_asp3::memorypool::GetError","","","","","","","itron_solid_asp3::memorypool::GetTimeoutError","","","","","","","","itron_solid_asp3::memorypool::InfoError","","","itron_solid_asp3::memorypool::InitializeError","","","itron_solid_asp3::memorypool::ReleaseError","","","","itron_solid_asp3::memorypool::TryGetError","","","","itron_solid_asp3::messagebufferitron_solid_asp3::messagebuffer::BuildError","","","","","itron_solid_asp3::messagebuffer::DeleteError","","","","itron_solid_asp3::messagebuffer::InfoError","","","itron_solid_asp3::messagebuffer::InitializeError","","","itron_solid_asp3::messagebuffer::RecvError","","","","","","","itron_solid_asp3::messagebuffer::RecvTimeoutError","","","","","","","","itron_solid_asp3::messagebuffer::SendError","","","","","","","","itron_solid_asp3::messagebuffer::SendTimeoutError","","","","","","","","","itron_solid_asp3::messagebuffer::TryRecvError","","","","itron_solid_asp3::messagebuffer::TrySendError","","","","","itron_solid_asp3::mutex","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","itron_solid_asp3::mutex::BuildError","","","","itron_solid_asp3::mutex::DeleteError","","","","itron_solid_asp3::mutex::InfoError","","","itron_solid_asp3::mutex::InitializeError","","","itron_solid_asp3::mutex::LockError","","","","","","","","","itron_solid_asp3::mutex::LockTimeoutError","","","","","","","","","","itron_solid_asp3::mutex::PriorityProtection","itron_solid_asp3::mutex::TryLockError","","","","","","itron_solid_asp3::mutex::UnlockError","","","","itron_solid_asp3::processor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","itron_solid_asp3::processor::CurrentIdError","itron_solid_asp3::semaphoreitron_solid_asp3::semaphore::BuildError","","","","itron_solid_asp3::semaphore::DeleteError","","","","itron_solid_asp3::semaphore::InfoError","","","itron_solid_asp3::semaphore::InitializeError","","","itron_solid_asp3::semaphore::PollError","","","","itron_solid_asp3::semaphore::SignalError","","","","itron_solid_asp3::semaphore::WaitError","","","","","","","itron_solid_asp3::semaphore::WaitTimeoutError","","","","","","","","itron_solid_asp3::taskitron_solid_asp3::task::ActivateError","","","","itron_solid_asp3::task::ActivateOnError","","","","","","itron_solid_asp3::task::BuildError","","","","itron_solid_asp3::task::CancelActivateAllError","","","itron_solid_asp3::task::CancelWakeAllError","","","","","itron_solid_asp3::task::CurrentIdError","itron_solid_asp3::task::DelayError","","","","itron_solid_asp3::task::DeleteError","","","","itron_solid_asp3::task::DisableTerminationError","","itron_solid_asp3::task::ExitError","itron_solid_asp3::task::InfoError","","","itron_solid_asp3::task::MigrateError","","","","itron_solid_asp3::task::PriorityError","","","","itron_solid_asp3::task::RaiseTerminationError","","","","","itron_solid_asp3::task::ReleaseWaitError","","","","","itron_solid_asp3::task::ResumeError","","","","","itron_solid_asp3::task::SetBasePriorityError","","","","","itron_solid_asp3::task::SleepError","","","","itron_solid_asp3::task::SleepTimeoutError","","","","","itron_solid_asp3::task::StateError","","","itron_solid_asp3::task::SuspendError","","","","","","itron_solid_asp3::task::TerminateError","","","","","itron_solid_asp3::task::WakeError","","","","","","itron_solid_asp3::time","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","itron_solid_asp3::wait","","","","","","","","","","","","",""],"d":["Changelog (<code>CHANGELOG.md</code>)","C API","Closures: <code>(fn(EXINF), EXINF)</code>","Dataqueues","Error types.","Eventflags (TODO)","Interrupts (TODO)","Miscellaneous functions that are not associated to …","Provides macros that allow downstream crates to examine …","Memory pools","Message buffers","Mutexes","Priority dataqueues (TODO)","Multiprocessing","Semaphores","Tasks","Temporal quantification","Shared definitions for waitable objects","アクセス許可パターン","オブジェクトの属性","エラーコード","エラーコードまたは真偽値","エラーコードまたはID番号","エラーコードまたは符号無し整数","CPU例外ハンドラ番号","拡張情報","バッファオーバーフロー","待ちオブジェクトの状態変化","通信エラー","コンテキストエラー","待ちオブジェクトの削除","不正ID番号","サービスコール不正使用","メモリアクセス違反","オブジェクト未生成","ID番号不足","メモリ不足","資源不足","未サポート機能","オブジェクトアクセス違反","オブジェクト状態エラー","正常終了","パラメータエラー","キューイングオーバーフロー","タスクの終了要求","待ち状態の強制解除","予約属性","予約機能コード","システムエラー","ポーリング失敗またはタイムアウト","ノンブロッキング受付け","Represents a falsy value.","イベントフラグのビットパターン","機能コード","プログラムの起動番地","高分解能タイマのカウント値","オブジェクトのID番号","割込みハンドラ番号","割込み番号","","管理領域を確保するためのデータ型","サービスコールの動作モード","…","Non-null version of <code>ID</code>","","優先度","相対時間","オブジェクトの状態","システム時刻","カーネルドメインだけにアクセスを許可","すべてのドメインからアクセスを許可","","タスクを起動された状態で生成","優先度上限プロトコル","イベントフラグのクリア指定","優先度継承プロトコル","起動要求をキューイングしない","オブジェクト属性を指定しない","周期通知を動作状態で生成","待ち行列をタスクの優先度順にする","複数の待ちタスク","タスクの起動","変数のインクリメント","イベントフラグのセット","変数の設定","セマフォの返却","データキューへの送信","タスクの起床","割込み優先度マスク全解除","…","","タイムアウト指定","永久待ち","ノンブロッキング","ポーリング","タスクの起動","タイムイベントハンドラの呼出し","変数のインクリメント","イベントフラグのセット","変数の設定","セマフォの資源の返却","データキューへの送信","タスクの起床","タスクの起動時優先度","自タスクのベース優先度","Represents a truthy value.","該当するタスクがない","自タスク指定","休止状態","実行可能状態","実行状態","強制待ち状態","待ち状態","二重待ち状態","時間経過待ち","イベントフラグ待ち","固定長メモリブロックの獲得待ち","ミューテックスのロック待ち状態","データキューからの受信待ち","メッセージバッファからの受信待ち","優先度データキューからの受信待ち","データキューへの送信待ち","セマフォの資源獲得待ち","起床待ち","メッセージバッファへの送信待ち","優先度データキューへの送信待ち","イベントフラグのAND待ち","イベントフラグのOR待ち","TOPPERS/ASP3 <code>T_CALM</code>","TOPPERS/ASP3 <code>T_CCYC</code>","","","TOPPERS/ASP3 and SOLID/FMP3 <code>T_CISR</code>","SOLID/ASP3 extension","","","","","TOPPERS/ASP3 dynamic creation extension <code>T_CTSK</code>","<code>T_NFYINFO::enfy</code>","","","<code>T_NFYINFO::nfy</code>","","","","","","","","","TOPPERS/ASP3 <code>T_RALM</code>","TOPPERS/ASP3 <code>T_RCYC</code>","","","","","","","","TOPPERS/ASP3 <code>T_RTSK</code>","","","通常操作1のアクセス許可パターン","通常操作2のアクセス許可パターン","管理操作のアクセス許可パターン","参照操作のアクセス許可パターン","","","","","","","","","","","","","起動要求キューイング数","","","アクセス許可ベクタ","","アラーム通知属性","アラーム通知の動作状態","獲得できる固定長メモリブロックの数","固定長メモリブロックのサイズ","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ミューテックスの上限優先度","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","周期通知属性","周期通知の通知位相","周期通知の動作状態","周期通知の通知周期","送信する値","","","","","","","","","","","","","","","タスク終了禁止状態","","データキュー属性","…","データキューID","データキューID","データキュー管理領域の先頭番地","","","","エラーの通知に関する付随情報","","","","","","","","","","","","","","","","","","","","","","","","","","","","割込みサービスルーチンの拡張情報","タスクの拡張情報","タイムイベントハンドラの拡張情報","","","…","","イベントフラグ属性","イベントフラグID","イベントフラグの現在のビットパターン","セットするビットパターン","…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","…","イベントフラグの初期ビットパターン","","","","","","","","","","自然なサイズの符号付き整数","…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","セマフォの初期資源数","割込みサービスルーチンの先頭番地","割込みサービスルーチン属性","割込みサービスルーチン優先度","タスクの起動時優先度","次回通知時刻までの相対時間","通知時刻までの相対時間","タイムアウトするまでの時間","","","…","メッセージの最大長","セマフォの最大資源数","メッセージバッファ属性","メッセージバッファ管理領域の先頭番地","メッセージバッファ管理領域のサイズ","固定長メモリプール領域の先頭番地","固定長メモリプール属性","固定長メモリプール管理領域の先頭番地","ミューテックス属性","","","","","","","","","","","","","","","","","","","","","","","","","","","タイムイベントの通知に関する付随情報","周期通知の通知方法","アラーム通知の通知方法","通知処理モード","変数の番地","変数の番地","変数の番地","優先度データキュー属性","…","優先度データキュー管理領域の先頭番地","","","","","","","","","","","","","","タスク終了要求状態","","","","","","","","","","","","","","","","","","…","…","…","…","セマフォ属性","セマフォの現在の資源数","セマフォID","","","","","","","","","","","…","","","","","","","","","","","","…","","","タスクのスタック領域の先頭番地","タスクのスタック領域のサイズ","","","…","…","…","","タスクのメインルーチンの先頭番地","","","","タイムイベントハンドラの先頭番地","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","タスク属性","タスクのベース優先度","タスクID","タスクの現在優先度","タスク状態","待ち要因","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","自然なサイズの符号無し整数","","","設定する値","","","待ち対象のオブジェクトのID","…","セマフォの待ち行列の先頭のタスクのID番号","…","…","","起床要求キューイング数","","","","A bundle of a function pointer and associated data.","Conversion to <code>Closure</code>.","Convert <code>self</code> to <code>Closure</code>.","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Bad parameter.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>Dataqueue::build</code>.","The builder type for dataqueues. Created by …","The unit of data that can be sent through a dataqueue.","An owned dataqueue.","A borrowed reference to a dataqueue.","Error type for <code>DataqueueRef::delete</code>.","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Dataqueue information returned by <code>DataqueueRef::info</code>.","Error type for <code>DataqueueRef::info</code>.","Error type for <code>DataqueueRef::initialize</code>.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","Ran out of memory or dataqueue IDs, or the specified …","Error type for <code>DataqueueRef::recv</code>.","Error type for <code>DataqueueRef::recv_timeout</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>DataqueueRef::send</code>.","Error type for <code>DataqueueRef::send_forced</code>.","Error type for <code>DataqueueRef::send_timeout</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>DataqueueRef::try_recv</code>.","Error type for <code>DataqueueRef::try_send</code>.","The queue length is zero.","Get the raw object ID.","Get the raw object ID.","Get the raw object ID as <code>abi::NonNullID</code>.","Get the raw object ID as <code>abi::NonNullID</code>.","Borrow <code>Dataqueue</code> as <code>DataqueueRef</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>acre_dtq</code>: Create a builder for <code>Dataqueue</code>.","(<strong>Mandatory</strong>) Specify the dataqueue’s capacity, measured in","","","","","","","","","","","","","","<code>del_dtq</code>: Delete the dataqueue.","","","","","","","","","","","","","","","Create a dataqueue using the specified parameters.","Get the first waiting receiver’s task ID.","Get the first waiting sender’s task ID.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a <code>DataqueueRef</code> from a raw object ID.","Construct a <code>Dataqueue</code> from a raw object ID.","<code>ref_dtq</code>: Get the dataqueue’s general information.","<code>ini_sem</code>: Initialize the dataqueue.","","","","","","","","","","","","","","","","Get a flag indicating whether the dataqueue is empty.","Consume and “leak” <code>self</code>, returning a reference …","Get the number of data items contained in the dataqueue.","","","","","","","","","","","","","","Specify the queue order. Defaults to <code>Fifo</code> when unspecified.","<code>rcv_dtq</code>: Receive a data element from the dataqueue. Blocks …","<code>trcv_dtq</code>: Receive a data element to the dataqueue. Blocks …","<code>snd_dtq</code>: Send a data element to the dataqueue. Blocks the …","<code>fsnd_dtq</code>: Send a data element to the dataqueue. Removes (…","<code>tsnd_dtq</code>: Send a data element to the dataqueue. Blocks the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>prcv_dtq</code>: Receive a data element to the dataqueue. Fails …","<code>psnd_dtq</code>: Send a data element to the dataqueue. Fails and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Target-specific error value that can be categorized as one …","Raw error code.","Trait for error kind types.","Type for error kinds that are valid in the current target …","Placeholder for error kind variants.","Indicates that the error kind never occurs in the current …","","","","","","","","","","","","","Get the error code.","","","","","","","","","","","","","","Categorize the specified error code.","Get the numerical value.","","","","","Get the error kind.","","","","Construct an <code>ErrorCode</code>.","Construct <code>Error</code>.","Construct an <code>ErrorCode</code> without checking if <code>code</code> is a valid …","","","","","","","","","","","","","Requires: <code>cfg(any())</code>","Error type for <code>exit</code>.","","","","","<code>ext_ker</code>: Terminate the kernel.","","","","","<code>sns_loc</code>: Get a flag indicating whether the CPU lock state …","<code>sns_dpn</code>: Get a flag indicating whether the dispatch …","<code>sns_dsp</code>: Get a flag indicating whether dispatching is …","<code>sns_ker</code>: Get a flag indicating whether the kernel is in an …","<code>sns_ctx</code>: Get a flag indicating whether the current thread …","","","","","","Expand to the current kernel’s name (e.g., <code>&quot;asp3&quot;</code>).","Expand to the arm corresponding to the current kernel.","Determine if this crate was compiled for the specified …","Get the kernel selected by a Cargo feature.","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","The supplied memory block does not originate from the …","Bad parameter.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","A pointer to a memory block.","Error type for <code>MemoryPool::build</code>.","The builder type for memory pools. Created by …","Error type for <code>MemoryPoolRef::delete</code>.","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Error type for <code>MemoryPoolRef::get</code>.","Error type for <code>MemoryPoolRef::get_timeout</code>.","Memory pool information returned by <code>MemoryPoolRef::info</code>.","Error type for <code>MemoryPoolRef::info</code>.","Error type for <code>MemoryPoolRef::initialize</code>.","An owned memory pool.","A borrowed reference to a memory pool.","The task is a restricted task.","The task is a restricted task.","The specified parameter is not supported by the kernel.","Ran out of memory or memory pool IDs, or the specified …","Error type for <code>MemoryPoolRef::release</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>MemoryPoolRef::try_get</code>.","Get the raw object ID.","Get the raw object ID.","Get the raw object ID as <code>abi::NonNullID</code>.","Get the raw object ID as <code>abi::NonNullID</code>.","Borrow <code>MemoryPool</code> as <code>MemoryPoolRef</code>.","(<strong>Mandatory</strong>) Specify the capacity, measured in number of …","(<strong>Mandatory</strong>) Specify the block size.","","","","","","","","","","","","","","","","","","","","","","","","","<code>acre_mpf</code>: Create a builder for <code>MemoryPool</code>.","","","","","","","","","","","<code>del_mpf</code>: Delete the memory pool.","","","","","","","","","","","","Create a memory pool using the specified parameters.","Get the first waiting task’s ID.","","","","","","","","","","","","Get the number of free memory blocks.","","","","","","","","","","","","","","","","","","","","","Construct a <code>MemoryPoolRef</code> from a raw object ID.","Construct a <code>MemoryPool</code> from a raw object ID.","<code>get_mpf</code>: Acquire a memory block. Blocks the current task …","<code>tget_mpf</code>: Acquire a memory block. Blocks the current task …","<code>ref_mpf</code>: Get the memory pool’s general information.","<code>ini_mpf</code>: Initialize the memory pool.","","","","","","","","","","","","","Consume and “leak” <code>self</code>, returning a reference …","","","","","","","","","","","Specify the queue order. Defaults to <code>Fifo</code> when unspecified.","<code>rel_mpf</code>: Return a memory block to the memory pool.","","","","","","","","","","","","","<code>pget_mpf</code>: Acquire a memory block. Fails and returns …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","The message is too large (<code>E_PAR</code>, NGKI3364).","The message is too large (<code>E_PAR</code>, NGKI3364).","The message is too large (<code>E_PAR</code>, NGKI3364).","Bad parameter.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>MessageBuffer::build</code>.","The builder type for message buffers. Created by …","Error type for <code>MessageBufferRef::delete</code>.","Requires: …","Requires: …","Requires: …","Requires: …","Message buffer information returned by …","Error type for <code>MessageBufferRef::info</code>.","Error type for <code>MessageBufferRef::initialize</code>.","An owned message buffer.","A borrowed reference to a message buffer.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","Requires: <code>cfg(any())</code>","Ran out of memory or message buffer IDs, or the specified …","Error type for <code>MessageBufferRef::recv</code>.","Error type for <code>MessageBufferRef::recv_timeout</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>MessageBufferRef::send</code>.","Error type for <code>MessageBufferRef::send_timeout</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>MessageBufferRef::try_recv</code>.","Error type for <code>MessageBufferRef::try_send</code>.","Literally anything.","Get the raw object ID.","Get the raw object ID.","Get the raw object ID as <code>abi::NonNullID</code>.","Get the raw object ID as <code>abi::NonNullID</code>.","Borrow <code>MessageBuffer</code> as <code>MessageBufferRef</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>acre_mbf</code>: Create a builder for <code>MessageBuffer</code>.","(<strong>Mandatory</strong>) Specify the capacity, measured in bytes.","","","","","","","","","","","","","<code>del_mbf</code>: Delete the message buffer.","","","","","","","","","","","","","","Create a message buffer using the specified parameters.","Get the first waiting receiver’s task ID.","Get the first waiting sender’s task ID.","","","","","","","","","","","","","","Get the number of free bytes.","","","","","","","","","","","","","","","","","","","","","","","","","Construct a <code>MessageBufferRef</code> from a raw object ID.","Construct a <code>MessageBuffer</code> from a raw object ID.","<code>ref_mbf</code>: Get the message buffer’s general information.","<code>ini_mbf</code>: Initialize the message buffer.","","","","","","","","","","","","","","","Get a flag indicating whether the message buffer is empty …","Consume and “leak” <code>self</code>, returning a reference …","Get the number of stored messages.","(<strong>Mandatory</strong>) Specify the maximum message size, measured in …","","","","","","","","","","","","","<code>rcv_mbf</code>: Receive a message from the message buffer. Blocks …","<code>trcv_mbf</code>: Receive a message to the message buffer. Blocks …","<code>snd_mbf</code>: Send a message to the message buffer. Blocks the …","<code>tsnd_mbf</code>: Send a message to the message buffer. Blocks the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>prcv_mbf</code>: Receive a message to the message buffer. Fails …","<code>psnd_mbf</code>: Send a message to the message buffer. Fails and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","The calling task’s priority is higher than the mutex’s …","The calling task’s priority is higher than the mutex’s …","The calling task’s priority is higher than the mutex’s …","Bad parameter.","The mutex is not the lastly-locked mutex currently owned …","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>Mutex::build</code>.","The builder type for mutexes. Created by <code>Mutex::build</code>.","The priority ceiling protocol.","The calling task already owns the mutex.","The calling task already owns the mutex.","The calling task already owns the mutex.","Error type for <code>MutexRef::delete</code>.","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Mutex information returned by <code>MutexRef::info</code>.","Error type for <code>MutexRef::info</code>.","The priority inheritance protocol.","Error type for <code>MutexRef::initialize</code>.","Error type for <code>MutexRef::lock</code>.","Error type for <code>MutexRef::lock_timeout</code>.","An owned mutex.","A borrowed reference to a mutex.","No priority protection.","The task is a restricted task.","The task is a restricted task.","Ran out of mutex IDs.","Specifies a priority protection protocol used by a mutex.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>MutexRef::try_lock</code>.","Error type for <code>MutexRef::unlock</code>.","Get the raw object ID.","Get the raw object ID.","Get the raw object ID as <code>abi::NonNullID</code>.","Get the raw object ID as <code>abi::NonNullID</code>.","Borrow <code>Mutex</code> as <code>MutexRef</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>acre_mtx</code>: Create a builder for <code>Mutex</code>.","","","","","","","","","","","","<code>del_mtx</code>: Delete the mutex.","","","","","","","","","","","","","Create a mutex using the specified parameters.","Get the first waiting task’s ID.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a <code>MutexRef</code> from a raw object ID.","Construct a <code>Mutex</code> from a raw object ID.","<code>ref_mtx</code>: Get the mutex’s general information.","Return <code>Some(Self::Inherit)</code> if it’s supported by the …","<code>ini_mtx</code>: Initialize the mutex.","","","","","","","","","","","","","","Consume and “leak” <code>self</code>, returning a reference …","<code>loc_mtx</code>: Lock the mutex.","<code>tloc_mtx</code>: Lock the mutex with timeout.","","","","","","","","","","","","Get the owning task’s ID.","Specify the priority protection mechanism to use. Defaults …","Specify the queue order. Defaults to <code>Fifo</code> when unspecified.","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>ploc_mtx</code>: Attempt to lock the mutex. Returns immediately …","","","","","","","","","","","","","","<code>unl_mtx</code>: Unlock the mutex.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specifies the priority ceiling.","","","","","","","","","","","The CPU lock state is active.","Error type for <code>current</code>.","Refers to a single processor in a multi-processor system. …","The error type returned when a conversion from <code>usize</code> to …","The only procesor in a uniprocessor system.","","","","","","","","","","<code>get_pid</code>: Get the current processor’s ID.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Bad parameter.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>Semaphore::build</code>.","The builder type for semaphores. Created by …","Semaphore count.","Error type for <code>SemaphoreRef::delete</code>.","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Semaphore information returned by <code>SemaphoreRef::info</code>.","Error type for <code>SemaphoreRef::info</code>.","Error type for <code>SemaphoreRef::initialize</code>.","The task is a restricted task.","The task is a restricted task.","Ran out of semaphore IDs.","Error type for <code>SemaphoreRef::poll</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","An owned semaphore.","A borrowed reference to a semaphore.","Error type for <code>SemaphoreRef::signal</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>SemaphoreRef::wait</code>.","Error type for <code>SemaphoreRef::wait_timeout</code>.","Get the raw object ID.","Get the raw object ID.","Get the raw object ID as <code>abi::NonNullID</code>.","Get the raw object ID as <code>abi::NonNullID</code>.","Borrow <code>Semaphore</code> as <code>SemaphoreRef</code>.","","","","","","","","","","","","","","","","","","","","","","","","","<code>acre_sem</code>: Create a builder for <code>Semaphore</code>.","","","","","","","","","","","Get the semaphore’s count.","<code>del_sem</code>: Delete the semaphore.","","","","","","","","","","","","Create a semaphore using the specified parameters.","Get the first waiting task’s ID.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a <code>SemaphoreRef</code> from a raw object ID.","Construct a <code>Semaphore</code> from a raw object ID.","<code>ref_sem</code>: Get the semaphore’s general information.","Specify the initial count. Defaults to <code>max_count</code> when …","<code>ini_sem</code>: Initialize the semaphore.","","","","","","","","","","","","","Consume and “leak” <code>self</code>, returning a reference …","Specify the maximum count. Defaults to <code>1</code> when unspecified.","","","","","","","","","","","<code>pol_sem</code>: Decrement the semaphore count by one. Fails and …","Specify the queue order. Defaults to <code>Fifo</code> when unspecified.","<code>sig_sem</code>: Increment the semaphore count by one.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>wai_sem</code>: Decrement the semaphore count by one. Blocks the …","<code>twai_sem</code>: Decrement the semaphore count by one. Blocks the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Error type for <code>TaskRef::activate</code>.","Error type for <code>TaskRef::activate_on</code>.","An instance of <code>IntoProcessorSet</code> specifying all processors.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: …","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","The CPU lock state is active.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","The error type returned by <code>current</code> when the CPU lock state …","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: …","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","The class the task belongs to does not permit assigning …","Bad parameter.","Bad parameter.","Bad parameter.","Bad state.","Bad parameter.","The task is dormant.","The task is dormant.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Bad state.","Bad state.","Bad state.","Bad state.","Bad state.","Bad state.","Bad state.","Error type for <code>Task::build</code>.","The builder type for tasks. Created by <code>Task::build</code>.","Error type for <code>TaskRef::cancel_activate_all</code>.","Error type for <code>TaskRef::cancel_wake_all</code>.","Represents a reference to the current task. Returned by …","Error type for <code>current_id</code>.","Error type for <code>delay</code>.","Error type for <code>TaskRef::delete</code>.","Error type for <code>disable_termination</code>.","","Error type for <code>enable_termination</code>.","Error type for <code>exit</code>.","Task information returned by <code>TaskRef::info</code>.","Error type for <code>TaskRef::info</code>.","The trait implemented by types that can be passed to …","Error type for <code>TaskRef::migrate</code>.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","Ran out of memory or task IDs.","Task priority value.","Error type for <code>TaskRef::priority</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","The task is already suspended.","Error type for <code>TaskRef::raise_termination</code>.","","Error type for <code>TaskRef::release_wait</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>TaskRef::resume</code>.","","Error type for <code>TaskRef::set_base_priority</code>.","Error type for <code>sleep</code>.","Error type for <code>sleep_timeout</code>.","Task state returned by <code>TaskRef::state</code>.","Error type for <code>TaskRef::state</code>.","Error type for <code>TaskRef::suspend</code>.","","An owned task.","A borrowed reference to a task.","Error type for <code>TaskRef::terminate</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","","","Error type for <code>TaskRef::wake</code>.","<code>act_tsk</code>: Pend an activation request for the task.","<code>mact_tsk</code>: Pend an activation request for the task, …","Get the raw object ID.","Get the raw object ID.","Get the raw object ID.","Get the raw object ID as <code>abi::NonNullID</code>.","Get the raw object ID as <code>abi::NonNullID</code>.","Get the raw object ID as <code>abi::NonNullID</code>.","Borrow <code>Current</code> as <code>TaskRef</code>.","Borrow <code>Task</code> as <code>TaskRef</code>.","Get the task’s base priority.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>acre_tsk</code>: Create a builder for <code>Task</code>.","<code>can_act</code>: Cancel any pending activation requests for the …","<code>can_wup</code>: Cancel any wake up requests for the task. Returns …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a reference to the current task.","<code>get_tid</code>: Get the currently running task’s ID.","Get the task’s current priority.","","<code>dly_tsk</code>: Delay the current task.","<code>del_tsk</code>: Delete the task.","<code>dis_ter</code>: Disable the termination of the current task by a …","","<code>ena_ter</code>: Re-enable the termination of the current task by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>ext_tsk</code>: Terminate the current task.","Create a task using the specified parameters.","Create and activate a task using the specified parameters.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a <code>TaskRef</code> from a raw object ID.","Construct a <code>Task</code> from a raw object ID.","","","<code>ref_tsk</code>: Get the task’s general information.","(<strong>Mandatory</strong>) Specify the initial priority.","Specify the task’s initial assigned processor. Defaults …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>sns_ter</code>: Determine if the termination by a termination …","Consume and “leak” <code>self</code>, returning a reference …","<code>mig_tsk</code>: Change the task’s assigned processor.","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>get_pri</code>: Get the task’s priority.","Specify the task’s assignable processsor set. Defaults …","<code>ras_ter</code>: Pend a termination request.","<code>rel_wai</code>: Forcibly release the task from waiting.","<code>rsm_tsk</code>: Resume the task.","<code>chg_pri</code>: Change the task’s base priority.","<code>slp_tsk</code>: Put the current task to sleep.","<code>dly_tsk</code>: Put the current task to sleep with timeout.","(<strong>Mandatory</strong>) Specify to use an automatically allocated stack","(<strong>Mandatory</strong>) Specify the entry point.","Get the task’s state.","<code>get_tst</code>: Get the task’s state.","<code>sus_tsk</code>: Suspend the task.","<code>ter_tsk</code>: Terminate the task.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>wup_tsk</code>: Pend a wake up request for the task.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A valid relative time value (<code>abi::RELTIM</code>).","The infinite timeout value.","A valid timeout value (<code>abi::TMO</code>).","The error type returned when a checked duration conversion …","The zero duration, which causes polling.","The zero timeout value, which causes polling.","","","","","","","","","","","","","Construct a <code>Duration</code> value in a concise syntax. Panics if …","Construct a <code>Duration</code> value in a concise syntax. Panics if …","","","","","","","","Construct a new <code>Duration</code> from the specified number of …","Construct a new <code>Timeout</code> from the specified number of …","Construct a new <code>Duration</code> from the specified number of …","Construct a new <code>Timeout</code> from the specified number of …","Construct a new <code>Duration</code> from the specified number of …","Construct a new <code>Timeout</code> from the specified number of …","Construct a new <code>Duration</code> from a raw value.","Construct a new <code>Timeout</code> from a raw value.","Construct a new <code>Duration</code> from the specified number of …","Construct a new <code>Timeout</code> from the specified number of …","","","","","","","","","","","Construct a <code>Timeout</code> value in a concise syntax. Panics if …","Construct a <code>Timeout</code> value in a concise syntax. Panics if …","","","","","","","","","","","","","","The wait queue is processed in a FIFO order.","Specifies the sorting order of a wait queue.","The wait queue is processed in a task priority order.","Convert <code>self</code> to a value of type <code>abi::ATR</code>.","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,4,5,6,0,0,7,8,9,9,0,10,11,9,12,13,14,15,16,17,18,19,20,21,22,23,24,4,25,8,26,7,27,5,6,28,29,30,31,32,1,2,33,34,3,10,11,9,12,13,14,15,16,17,18,19,20,21,22,23,24,4,25,8,26,7,27,5,6,28,29,30,31,32,1,2,33,34,3,0,0,22,0,0,10,11,9,12,13,14,15,16,17,18,19,20,21,22,23,24,4,25,8,26,7,27,5,6,28,29,30,31,32,1,2,33,34,3,0,0,26,26,25,26,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,20,20,2,34,20,0,0,0,27,11,9,12,13,14,15,16,17,18,19,20,21,22,23,4,25,8,29,30,31,32,1,2,33,34,3,0,10,24,28,0,0,11,0,19,1,13,1,17,11,9,12,13,14,15,16,17,18,19,20,21,22,23,24,4,25,8,28,29,30,31,32,1,2,33,34,3,10,11,9,12,13,14,15,16,17,18,19,20,21,22,23,24,4,25,8,26,7,27,5,6,28,29,30,31,32,1,2,33,34,3,0,0,0,0,0,0,0,0,0,0,5,16,19,5,6,0,0,0,0,0,0,0,0,10,10,11,9,12,13,14,15,16,17,18,19,20,21,22,23,24,4,25,8,26,7,27,5,6,28,29,30,31,32,1,2,33,34,3,18,10,10,10,24,25,8,4,0,0,21,23,18,23,23,23,9,9,9,22,11,9,12,13,14,15,16,17,18,19,20,21,22,23,4,25,8,29,30,31,32,1,2,33,34,3,27,26,7,27,29,30,33,21,21,21,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,15,17,14,18,12,32,0,0,5,6,5,6,0,5,6,0,17,0,0,0,5,6,0,0,0,0,0,0,15,0,0,24,24,0,0,14,15,17,0,24,0,0,0,28,0,0,0,10,11,9,12,13,14,15,16,17,18,19,20,21,22,23,24,4,25,8,26,7,27,5,6,28,29,30,31,32,1,2,33,34,3,10,11,9,12,13,14,15,16,17,18,19,20,21,22,23,24,4,25,8,26,7,27,5,6,28,29,30,31,32,1,2,33,34,3,24,4,31,4,4,4,0,0,0,0,0,0,10,11,9,12,13,14,15,16,17,18,19,20,21,22,23,24,4,25,8,26,7,27,5,6,28,29,30,31,32,1,2,33,34,3,0,0,0,29,0,0,4,11,12,13,16,0,4,5,6,0,0,0,35,36,37,38,39,40,41,42,43,44,45,46,36,37,38,39,40,41,42,43,44,45,46,36,37,38,39,40,41,42,43,44,46,45,46,0,0,0,0,0,0,36,37,40,41,0,0,0,36,37,40,41,45,0,0,36,37,40,41,0,0,0,36,37,40,41,37,38,41,42,0,0,39,47,48,47,48,48,49,36,37,38,39,40,41,42,43,44,45,46,50,47,48,49,36,37,38,39,40,41,42,43,44,45,46,50,47,48,48,49,36,37,38,39,40,41,42,43,44,45,46,50,47,47,48,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,50,36,37,38,39,40,41,42,43,44,45,46,50,47,48,49,36,37,38,39,40,41,42,43,44,45,46,50,47,48,36,37,38,39,40,41,42,43,44,45,46,47,48,47,47,49,36,37,38,39,40,41,42,43,44,45,46,50,47,48,50,48,50,36,37,38,39,40,41,42,43,44,45,46,47,48,49,47,47,47,47,47,49,36,37,38,39,40,41,42,43,44,45,46,50,47,48,49,36,37,38,39,40,41,42,43,44,45,46,50,47,48,47,47,49,36,37,38,39,40,41,42,43,44,45,46,50,47,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,0,0,0,0,0,0,108,109,107,110,108,109,107,110,108,109,107,110,108,108,109,107,110,108,109,107,110,108,109,109,107,110,111,109,108,109,107,110,108,108,109,107,109,108,109,108,109,107,110,108,109,107,110,108,109,107,110,112,0,112,112,112,112,0,112,112,112,112,0,0,0,0,0,112,112,112,112,113,0,0,0,0,114,115,116,117,118,119,120,121,114,115,116,117,118,119,120,121,114,115,116,117,118,119,121,117,120,121,0,0,0,0,114,115,0,0,0,0,0,0,0,114,115,120,120,0,114,115,114,115,115,116,0,122,123,122,123,123,124,124,124,114,115,116,117,118,119,120,121,125,122,123,124,114,115,116,117,118,119,120,121,125,122,123,123,114,115,116,117,118,119,120,121,125,122,122,123,114,115,116,117,118,119,120,121,122,123,124,125,114,115,116,117,118,119,120,121,125,122,123,125,124,114,115,116,117,118,119,120,121,125,122,123,114,115,116,117,118,119,120,121,122,123,122,122,122,122,124,114,115,116,117,118,119,120,121,125,122,123,123,114,115,116,117,118,119,120,121,122,123,124,122,124,114,115,116,117,118,119,120,121,125,122,123,122,124,114,115,116,117,118,119,120,121,125,122,123,124,114,115,116,117,118,119,120,121,125,122,123,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,164,165,166,167,168,169,170,171,172,173,164,165,166,167,168,169,170,171,173,164,165,166,172,173,0,0,0,164,165,167,168,0,0,0,0,0,164,165,167,168,172,172,0,0,164,165,167,168,0,0,164,165,167,168,165,166,168,169,0,0,0,174,175,174,175,175,176,164,165,166,167,168,169,170,171,172,173,177,174,175,176,164,165,166,167,168,169,170,171,172,173,177,174,175,175,176,164,165,166,167,168,169,170,171,172,173,177,174,174,175,164,165,166,167,168,169,170,171,172,173,174,175,176,177,177,164,165,166,167,168,169,170,171,172,173,177,174,175,177,176,164,165,166,167,168,169,170,171,172,173,177,174,175,164,165,166,167,168,169,170,171,172,173,174,175,174,174,176,164,165,166,167,168,169,170,171,172,173,177,174,175,177,175,177,176,164,165,166,167,168,169,170,171,172,173,174,175,174,174,174,174,176,164,165,166,167,168,169,170,171,172,173,177,174,175,176,164,165,166,167,168,169,170,171,172,173,177,174,175,174,174,176,164,165,166,167,168,169,170,171,172,173,177,174,175,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,234,235,236,237,238,239,240,241,234,235,236,237,238,239,241,234,235,236,240,237,241,0,0,242,234,235,236,0,234,235,0,0,242,0,0,0,0,0,242,234,235,240,0,234,235,234,235,235,236,0,0,243,244,243,244,244,245,234,235,236,237,238,239,240,241,246,243,242,244,245,234,235,236,237,238,239,240,241,246,243,242,244,244,234,235,236,237,238,239,240,241,246,243,242,243,244,234,235,236,237,238,239,240,241,243,242,244,245,246,234,235,236,237,238,239,240,241,246,243,242,244,245,234,235,236,237,238,239,240,241,246,243,242,244,234,235,236,237,238,239,240,241,243,244,243,242,243,245,234,235,236,237,238,239,240,241,246,243,242,244,244,243,243,234,235,236,237,238,239,240,241,243,242,244,246,245,245,245,234,235,236,237,238,239,240,241,246,243,242,244,245,234,235,236,237,238,239,240,241,246,243,242,244,243,245,234,235,236,237,238,239,240,241,246,243,242,244,243,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,0,0,0,292,291,292,293,291,292,293,291,292,293,0,291,292,293,291,292,293,291,292,293,291,291,292,293,291,292,293,291,292,292,293,291,292,293,291,292,293,294,295,296,297,298,299,300,301,302,295,296,297,298,299,300,301,302,295,296,297,298,299,300,302,301,302,0,0,0,0,296,297,0,0,0,296,297,301,0,295,296,297,0,0,0,296,297,297,298,0,0,303,304,303,304,304,305,295,296,297,298,299,300,301,302,306,303,304,305,295,296,297,298,299,300,301,302,306,303,304,304,295,296,297,298,299,300,301,302,306,303,306,303,304,295,296,297,298,299,300,301,302,303,304,305,306,295,296,297,298,299,300,301,302,306,303,304,305,295,296,297,298,299,300,301,302,306,303,304,295,296,297,298,299,300,301,302,303,304,303,305,303,305,295,296,297,298,299,300,301,302,306,303,304,304,305,295,296,297,298,299,300,301,302,303,304,303,305,303,305,295,296,297,298,299,300,301,302,306,303,304,305,295,296,297,298,299,300,301,302,306,303,304,305,295,296,297,298,299,300,301,302,306,303,304,303,303,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,0,0,0,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,362,363,364,365,360,366,361,0,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,345,347,349,358,359,361,347,348,350,353,354,355,356,357,358,359,0,0,0,0,0,0,0,0,0,367,0,0,0,0,0,0,345,353,354,355,356,357,362,363,364,361,0,0,344,345,353,356,0,367,0,362,363,364,0,367,0,0,0,0,0,0,367,0,0,0,362,363,364,363,367,367,0,368,368,368,369,370,368,369,370,369,370,371,372,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,362,363,364,365,360,373,366,361,367,371,368,369,374,370,372,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,362,363,364,365,360,373,366,361,367,371,368,369,374,370,370,368,368,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,362,363,364,365,360,373,366,361,367,371,368,369,374,0,0,371,374,0,368,0,370,0,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,362,363,364,365,360,373,366,361,367,368,374,370,0,372,372,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,362,363,364,365,360,373,366,361,367,371,368,369,374,370,372,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,362,363,364,365,360,373,366,361,367,371,368,369,374,370,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,362,363,364,365,360,366,361,368,370,373,367,368,372,372,372,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,362,363,364,365,360,373,366,361,367,371,368,369,374,370,0,370,368,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,362,363,364,365,360,373,366,361,368,370,368,372,368,368,368,368,0,0,372,372,371,368,368,368,372,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,362,363,364,365,360,373,366,361,367,371,368,369,374,370,372,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,362,363,364,365,360,373,366,361,367,371,368,369,374,370,372,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,362,363,364,365,360,373,366,361,367,371,368,369,374,370,368,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,0,469,0,0,470,469,470,469,471,470,469,471,470,469,470,469,470,469,0,0,470,469,470,469,471,470,469,470,469,470,469,470,469,470,469,470,469,470,469,471,470,469,469,470,469,470,469,0,0,471,470,470,470,469,469,469,471,470,469,471,470,469,472,0,472,472,472,472,472,472,472,472,472,472,472,472],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[],["t_cisr",3]],[[],["t_rmpf",3]],[[],["t_cmpf",3]],[[],["t_rsem",3]],[[],["t_rflg",3]],[[],["t_rdtq",3]],[[],["t_rpdq",3]],[[],["t_rmtx",3]],[[],["t_rmbf",3]],[[],["t_csem",3]],[[],["t_cflg",3]],[[],["t_cdtq",3]],[[],["t_cpdq",3]],[[],["t_cmtx",3]],[[],["t_cmbf",3]],[[],["t_ctsk",3]],[[],["t_rtsk",3]],[[],["t_rcyc",3]],[[],["t_ralm",3]],[[],["t_ccyc",3]],[[],["t_calm",3]],[[],["t_nfyinfo",3]],[[],["t_nfy",19]],[[],["t_enfy",19]],[[],["t_nfy_hdr",3]],[[],["t_nfy_var",3]],[[],["t_nfy_ivar",3]],[[],["t_nfy_tsk",3]],[[],["t_nfy_sem",3]],[[],["t_nfy_flg",3]],[[],["t_nfy_dtq",3]],[[],["t_enfy_var",3]],[[],["t_enfy_dtq",3]],[[],["acvct",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["t_rmpf",3]],["bool",15]],[[["t_cmpf",3]],["bool",15]],[[["t_rsem",3]],["bool",15]],[[["t_rflg",3]],["bool",15]],[[["t_rdtq",3]],["bool",15]],[[["t_rpdq",3]],["bool",15]],[[["t_rmtx",3]],["bool",15]],[[["t_rmbf",3]],["bool",15]],[[["t_csem",3]],["bool",15]],[[["t_cflg",3]],["bool",15]],[[["t_cdtq",3]],["bool",15]],[[["t_cpdq",3]],["bool",15]],[[["t_cmtx",3]],["bool",15]],[[["t_cmbf",3]],["bool",15]],[[["t_rtsk",3]],["bool",15]],[[["t_rcyc",3]],["bool",15]],[[["t_ralm",3]],["bool",15]],[[["t_nfy_var",3]],["bool",15]],[[["t_nfy_ivar",3]],["bool",15]],[[["t_nfy_tsk",3]],["bool",15]],[[["t_nfy_sem",3]],["bool",15]],[[["t_nfy_flg",3]],["bool",15]],[[["t_nfy_dtq",3]],["bool",15]],[[["t_enfy_var",3]],["bool",15]],[[["t_enfy_dtq",3]],["bool",15]],[[["acvct",3]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["t_rmpf",3]],["bool",15]],[[["t_cmpf",3]],["bool",15]],[[["t_rsem",3]],["bool",15]],[[["t_rflg",3]],["bool",15]],[[["t_rdtq",3]],["bool",15]],[[["t_rpdq",3]],["bool",15]],[[["t_rmtx",3]],["bool",15]],[[["t_rmbf",3]],["bool",15]],[[["t_csem",3]],["bool",15]],[[["t_cflg",3]],["bool",15]],[[["t_cdtq",3]],["bool",15]],[[["t_cpdq",3]],["bool",15]],[[["t_cmtx",3]],["bool",15]],[[["t_cmbf",3]],["bool",15]],[[["t_rtsk",3]],["bool",15]],[[["t_rcyc",3]],["bool",15]],[[["t_ralm",3]],["bool",15]],[[["t_nfy_var",3]],["bool",15]],[[["t_nfy_ivar",3]],["bool",15]],[[["t_nfy_tsk",3]],["bool",15]],[[["t_nfy_sem",3]],["bool",15]],[[["t_nfy_flg",3]],["bool",15]],[[["t_nfy_dtq",3]],["bool",15]],[[["t_enfy_var",3]],["bool",15]],[[["t_enfy_dtq",3]],["bool",15]],[[["acvct",3]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["closure",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["id",6]],[[],["id",6]],[[],["nonnullid",6]],[[],["nonnullid",6]],[[],["dataqueueref",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["builder",3,[["__capacity_is_not_specified__",3]]]],[[["usize",15]],["builder",3]],[[],["senderror",4]],[[],["sendtimeouterror",4]],[[],["trysenderror",4]],[[],["sendforcederror",4]],[[],["recverror",4]],[[],["recvtimeouterror",4]],[[],["tryrecverror",4]],[[],["initializeerror",4]],[[],["infoerror",4]],[[],["builderror",4]],[[],["deleteerror",4]],[[],["info",3]],[[],["dataqueueref",3]],[[],["result",4,[["error",3,[["deleteerror",4]]]]]],[[]],[[["senderror",4]],["bool",15]],[[["sendtimeouterror",4]],["bool",15]],[[["trysenderror",4]],["bool",15]],[[["sendforcederror",4]],["bool",15]],[[["recverror",4]],["bool",15]],[[["recvtimeouterror",4]],["bool",15]],[[["tryrecverror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["builderror",4]],["bool",15]],[[["deleteerror",4]],["bool",15]],[[["dataqueueref",3]],["bool",15]],[[["dataqueue",3]],["bool",15]],[[],["result",4,[["dataqueue",3],["error",3,[["builderror",4]]]]]],[[],["option",4,[["nonnullid",6]]]],[[],["option",4,[["nonnullid",6]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["nonnullid",6]]],[[["nonnullid",6]]],[[],["result",4,[["info",3],["error",3,[["infoerror",4]]]]]],[[],["result",4,[["error",3,[["initializeerror",4]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["dataqueueref",3]],[[],["usize",15]],[[["senderror",4]],["bool",15]],[[["sendtimeouterror",4]],["bool",15]],[[["trysenderror",4]],["bool",15]],[[["sendforcederror",4]],["bool",15]],[[["recverror",4]],["bool",15]],[[["recvtimeouterror",4]],["bool",15]],[[["tryrecverror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["builderror",4]],["bool",15]],[[["deleteerror",4]],["bool",15]],[[["dataqueueref",3]],["bool",15]],[[["dataqueue",3]],["bool",15]],[[["queueorder",4]]],[[],["result",4,[["dataelement",6],["error",3,[["recverror",4]]]]]],[[["timeout",3]],["result",4,[["dataelement",6],["error",3,[["recvtimeouterror",4]]]]]],[[["dataelement",6]],["result",4,[["error",3,[["senderror",4]]]]]],[[["dataelement",6]],["result",4,[["error",3,[["sendforcederror",4]]]]]],[[["dataelement",6],["timeout",3]],["result",4,[["error",3,[["sendtimeouterror",4]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["dataelement",6],["error",3,[["tryrecverror",4]]]]]],[[["dataelement",6]],["result",4,[["error",3,[["trysenderror",4]]]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["error",3]],[[],["errorcode",3]],[[],["kind",3]],[[],["never",4]],[[],["errorcode",3]],[[["error",3]],["bool",15]],[[["errorcode",3]],["bool",15]],[[["kind",3]],["bool",15]],[[["never",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["error",3]]],[[]],[[]],[[["errorcode",3]],["option",4]],[[],["er",6]],[[]],[[]],[[]],[[]],[[]],[[["error",3]],["bool",15]],[[["errorcode",3]],["bool",15]],[[["kind",3]],["bool",15]],[[["er",6]],["option",4]],[[["errorcode",3]]],[[["er",6]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[],["exiterror",4]],[[["exiterror",4]],["bool",15]],[[],["error",3,[["exiterror",4]]]],[[["formatter",3]],["result",6]],[[]],[[["errorcode",3]],["option",4]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["exiterror",4]],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["id",6]],[[],["id",6]],[[],["nonnullid",6]],[[],["nonnullid",6]],[[],["memorypoolref",3]],[[["usize",15]],["builder",3]],[[["usize",15]],["builder",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["builder",3,[["__block_size_is_not_specified__",3],["__block_count_is_not_specified__",3]]]],[[],["geterror",4]],[[],["gettimeouterror",4]],[[],["trygeterror",4]],[[],["releaseerror",4]],[[],["initializeerror",4]],[[],["infoerror",4]],[[],["builderror",4]],[[],["deleteerror",4]],[[],["info",3]],[[],["memorypoolref",3]],[[],["result",4,[["error",3,[["deleteerror",4]]]]]],[[]],[[["geterror",4]],["bool",15]],[[["gettimeouterror",4]],["bool",15]],[[["trygeterror",4]],["bool",15]],[[["releaseerror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["builderror",4]],["bool",15]],[[["deleteerror",4]],["bool",15]],[[["memorypoolref",3]],["bool",15]],[[["memorypool",3]],["bool",15]],[[],["result",4,[["memorypool",3],["error",3,[["builderror",4]]]]]],[[],["option",4,[["nonnullid",6]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["nonnullid",6]]],[[["nonnullid",6]]],[[],["result",4,[["block",6],["error",3,[["geterror",4]]]]]],[[["timeout",3]],["result",4,[["block",6],["error",3,[["gettimeouterror",4]]]]]],[[],["result",4,[["info",3],["error",3,[["infoerror",4]]]]]],[[],["result",4,[["error",3,[["initializeerror",4]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["memorypoolref",3]],[[["geterror",4]],["bool",15]],[[["gettimeouterror",4]],["bool",15]],[[["trygeterror",4]],["bool",15]],[[["releaseerror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["builderror",4]],["bool",15]],[[["deleteerror",4]],["bool",15]],[[["memorypoolref",3]],["bool",15]],[[["memorypool",3]],["bool",15]],[[["queueorder",4]]],[[["block",6]],["result",4,[["error",3,[["releaseerror",4]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["block",6],["error",3,[["trygeterror",4]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["id",6]],[[],["id",6]],[[],["nonnullid",6]],[[],["nonnullid",6]],[[],["messagebufferref",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["builder",3,[["__block_size_is_not_specified__",3],["__block_count_is_not_specified__",3]]]],[[["usize",15]],["builder",3]],[[],["senderror",4]],[[],["sendtimeouterror",4]],[[],["trysenderror",4]],[[],["recverror",4]],[[],["recvtimeouterror",4]],[[],["tryrecverror",4]],[[],["initializeerror",4]],[[],["infoerror",4]],[[],["builderror",4]],[[],["deleteerror",4]],[[],["info",3]],[[],["messagebufferref",3]],[[],["result",4,[["error",3,[["deleteerror",4]]]]]],[[]],[[["senderror",4]],["bool",15]],[[["sendtimeouterror",4]],["bool",15]],[[["trysenderror",4]],["bool",15]],[[["recverror",4]],["bool",15]],[[["recvtimeouterror",4]],["bool",15]],[[["tryrecverror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["builderror",4]],["bool",15]],[[["deleteerror",4]],["bool",15]],[[["messagebufferref",3]],["bool",15]],[[["messagebuffer",3]],["bool",15]],[[],["result",4,[["messagebuffer",3],["error",3,[["builderror",4]]]]]],[[],["option",4,[["nonnullid",6]]]],[[],["option",4,[["nonnullid",6]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["nonnullid",6]]],[[["nonnullid",6]]],[[],["result",4,[["info",3],["error",3,[["infoerror",4]]]]]],[[],["result",4,[["error",3,[["initializeerror",4]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["messagebufferref",3]],[[],["usize",15]],[[["usize",15]],["builder",3]],[[["senderror",4]],["bool",15]],[[["sendtimeouterror",4]],["bool",15]],[[["trysenderror",4]],["bool",15]],[[["recverror",4]],["bool",15]],[[["recvtimeouterror",4]],["bool",15]],[[["tryrecverror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["builderror",4]],["bool",15]],[[["deleteerror",4]],["bool",15]],[[["messagebufferref",3]],["bool",15]],[[["messagebuffer",3]],["bool",15]],[[],["result",4,[["usize",15],["error",3,[["recverror",4]]]]]],[[["timeout",3]],["result",4,[["usize",15],["error",3,[["recvtimeouterror",4]]]]]],[[],["result",4,[["error",3,[["senderror",4]]]]]],[[["timeout",3]],["result",4,[["error",3,[["sendtimeouterror",4]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["usize",15],["error",3,[["tryrecverror",4]]]]]],[[],["result",4,[["error",3,[["trysenderror",4]]]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["id",6]],[[],["id",6]],[[],["nonnullid",6]],[[],["nonnullid",6]],[[],["mutexref",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["builder",3]],[[],["lockerror",4]],[[],["locktimeouterror",4]],[[],["trylockerror",4]],[[],["unlockerror",4]],[[],["initializeerror",4]],[[],["infoerror",4]],[[],["builderror",4]],[[],["deleteerror",4]],[[],["info",3]],[[],["mutexref",3]],[[],["priorityprotection",4]],[[],["result",4,[["error",3,[["deleteerror",4]]]]]],[[]],[[["lockerror",4]],["bool",15]],[[["locktimeouterror",4]],["bool",15]],[[["trylockerror",4]],["bool",15]],[[["unlockerror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["builderror",4]],["bool",15]],[[["deleteerror",4]],["bool",15]],[[["mutexref",3]],["bool",15]],[[["priorityprotection",4]],["bool",15]],[[["mutex",3]],["bool",15]],[[],["result",4,[["mutex",3],["error",3,[["builderror",4]]]]]],[[],["option",4,[["nonnullid",6]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["nonnullid",6]]],[[["nonnullid",6]]],[[],["result",4,[["info",3],["error",3,[["infoerror",4]]]]]],[[],["option",4]],[[],["result",4,[["error",3,[["initializeerror",4]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["mutexref",3]],[[],["result",4,[["error",3,[["lockerror",4]]]]]],[[["timeout",3]],["result",4,[["error",3,[["locktimeouterror",4]]]]]],[[["lockerror",4]],["bool",15]],[[["locktimeouterror",4]],["bool",15]],[[["trylockerror",4]],["bool",15]],[[["unlockerror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["builderror",4]],["bool",15]],[[["deleteerror",4]],["bool",15]],[[["mutexref",3]],["bool",15]],[[["priorityprotection",4]],["bool",15]],[[["mutex",3]],["bool",15]],[[],["option",4,[["nonnullid",6]]]],[[["priorityprotection",4]],["builder",3]],[[["queueorder",4]],["builder",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["error",3,[["trylockerror",4]]]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",4,[["error",3,[["unlockerror",4]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["currentiderror",4]],[[],["processor",3]],[[],["processortryfromerror",3]],[[],["result",4,[["processor",3],["error",3,[["currentiderror",4]]]]]],[[["currentiderror",4]],["bool",15]],[[["processor",3]],["bool",15]],[[["processortryfromerror",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["errorcode",3]],["option",4]],[[]],[[]],[[]],[[["currentiderror",4]],["bool",15]],[[["processor",3]],["bool",15]],[[["processortryfromerror",3]],["bool",15]],[[],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["id",6]],[[],["id",6]],[[],["nonnullid",6]],[[],["nonnullid",6]],[[],["semaphoreref",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["builder",3]],[[],["signalerror",4]],[[],["waiterror",4]],[[],["waittimeouterror",4]],[[],["pollerror",4]],[[],["initializeerror",4]],[[],["infoerror",4]],[[],["builderror",4]],[[],["deleteerror",4]],[[],["info",3]],[[],["semaphoreref",3]],[[],["count",6]],[[],["result",4,[["error",3,[["deleteerror",4]]]]]],[[]],[[["signalerror",4]],["bool",15]],[[["waiterror",4]],["bool",15]],[[["waittimeouterror",4]],["bool",15]],[[["pollerror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["builderror",4]],["bool",15]],[[["deleteerror",4]],["bool",15]],[[["semaphoreref",3]],["bool",15]],[[["semaphore",3]],["bool",15]],[[],["result",4,[["semaphore",3],["error",3,[["builderror",4]]]]]],[[],["option",4,[["nonnullid",6]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["nonnullid",6]]],[[["nonnullid",6]]],[[],["result",4,[["info",3],["error",3,[["infoerror",4]]]]]],[[["count",6]],["builder",3]],[[],["result",4,[["error",3,[["initializeerror",4]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["semaphoreref",3]],[[["count",6]],["builder",3]],[[["signalerror",4]],["bool",15]],[[["waiterror",4]],["bool",15]],[[["waittimeouterror",4]],["bool",15]],[[["pollerror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["builderror",4]],["bool",15]],[[["deleteerror",4]],["bool",15]],[[["semaphoreref",3]],["bool",15]],[[["semaphore",3]],["bool",15]],[[],["result",4,[["error",3,[["pollerror",4]]]]]],[[["queueorder",4]],["builder",3]],[[],["result",4,[["error",3,[["signalerror",4]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",4,[["error",3,[["waiterror",4]]]]]],[[["timeout",3]],["result",4,[["error",3,[["waittimeouterror",4]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4,[["error",3,[["activateerror",4]]]]]],[[["processor",3]],["result",4,[["error",3,[["activateonerror",4]]]]]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["nonnullid",6]],[[],["nonnullid",6]],[[],["nonnullid",6]],[[],["taskref",3]],[[],["taskref",3]],[[],["priority",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["builder",3,[["__start_is_not_specified__",3],["__stack_is_not_specified__",3],["__initial_priority_is_not_specified__",3]]]],[[],["result",4,[["usize",15],["error",3,[["cancelactivateallerror",4]]]]]],[[],["result",4,[["usize",15],["error",3,[["cancelwakeallerror",4]]]]]],[[],["activateerror",4]],[[],["activateonerror",4]],[[],["cancelactivateallerror",4]],[[],["setbasepriorityerror",4]],[[],["priorityerror",4]],[[],["migrateerror",4]],[[],["deleteerror",4]],[[],["stateerror",4]],[[],["infoerror",4]],[[],["wakeerror",4]],[[],["cancelwakeallerror",4]],[[],["releasewaiterror",4]],[[],["suspenderror",4]],[[],["resumeerror",4]],[[],["terminateerror",4]],[[],["raiseterminationerror",4]],[[],["sleeperror",4]],[[],["sleeptimeouterror",4]],[[],["delayerror",4]],[[],["exiterror",4]],[[],["disableterminationerror",4]],[[],["badcontexterror",3]],[[],["currentiderror",4]],[[],["builderror",4]],[[],["state",4]],[[],["info",3]],[[],["taskref",3]],[[],["current",3]],[[],["allprocessors",3]],[[],["result",4,[["current",3],["badcontexterror",3]]]],[[],["result",4,[["option",4,[["nonnullid",6]]],["error",3,[["currentiderror",4]]]]]],[[],["priority",6]],[[],["allprocessors",3]],[[["duration",3]],["result",4,[["error",3,[["delayerror",4]]]]]],[[],["result",4,[["error",3,[["deleteerror",4]]]]]],[[],["result",4,[["error",3,[["disableterminationerror",4]]]]]],[[]],[[],["result",4,[["error",3,[["enableterminationerror",6]]]]]],[[["activateerror",4]],["bool",15]],[[["activateonerror",4]],["bool",15]],[[["cancelactivateallerror",4]],["bool",15]],[[["setbasepriorityerror",4]],["bool",15]],[[["priorityerror",4]],["bool",15]],[[["migrateerror",4]],["bool",15]],[[["deleteerror",4]],["bool",15]],[[["stateerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["wakeerror",4]],["bool",15]],[[["cancelwakeallerror",4]],["bool",15]],[[["releasewaiterror",4]],["bool",15]],[[["suspenderror",4]],["bool",15]],[[["resumeerror",4]],["bool",15]],[[["terminateerror",4]],["bool",15]],[[["raiseterminationerror",4]],["bool",15]],[[["sleeperror",4]],["bool",15]],[[["sleeptimeouterror",4]],["bool",15]],[[["delayerror",4]],["bool",15]],[[["exiterror",4]],["bool",15]],[[["disableterminationerror",4]],["bool",15]],[[["badcontexterror",3]],["bool",15]],[[["currentiderror",4]],["bool",15]],[[["builderror",4]],["bool",15]],[[["state",4]],["bool",15]],[[["taskref",3]],["bool",15]],[[["allprocessors",3]],["bool",15]],[[["task",3]],["bool",15]],[[],["error",3,[["exiterror",4]]]],[[],["result",4,[["task",3],["error",3,[["builderror",4]]]]]],[[],["result",4,[["task",3],["error",3,[["builderror",4]]]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["nonnullid",6]]],[[["nonnullid",6]]],[[]],[[]],[[],["result",4,[["info",3],["error",3,[["infoerror",4]]]]]],[[["priority",6]],["builder",3]],[[["processor",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["taskref",3]],[[["processor",3]],["result",4,[["error",3,[["migrateerror",4]]]]]],[[["activateerror",4]],["bool",15]],[[["activateonerror",4]],["bool",15]],[[["cancelactivateallerror",4]],["bool",15]],[[["setbasepriorityerror",4]],["bool",15]],[[["priorityerror",4]],["bool",15]],[[["migrateerror",4]],["bool",15]],[[["deleteerror",4]],["bool",15]],[[["stateerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["wakeerror",4]],["bool",15]],[[["cancelwakeallerror",4]],["bool",15]],[[["releasewaiterror",4]],["bool",15]],[[["suspenderror",4]],["bool",15]],[[["resumeerror",4]],["bool",15]],[[["terminateerror",4]],["bool",15]],[[["raiseterminationerror",4]],["bool",15]],[[["sleeperror",4]],["bool",15]],[[["sleeptimeouterror",4]],["bool",15]],[[["delayerror",4]],["bool",15]],[[["exiterror",4]],["bool",15]],[[["disableterminationerror",4]],["bool",15]],[[["badcontexterror",3]],["bool",15]],[[["currentiderror",4]],["bool",15]],[[["builderror",4]],["bool",15]],[[["taskref",3]],["bool",15]],[[["task",3]],["bool",15]],[[],["result",4,[["priority",6],["error",3,[["priorityerror",4]]]]]],[[]],[[],["result",4,[["error",3,[["raiseterminationerror",4]]]]]],[[],["result",4,[["error",3,[["releasewaiterror",4]]]]]],[[],["result",4,[["error",3,[["resumeerror",4]]]]]],[[["priority",6]],["result",4,[["error",3,[["setbasepriorityerror",4]]]]]],[[],["result",4,[["error",3,[["sleeperror",4]]]]]],[[["timeout",3]],["result",4,[["error",3,[["sleeptimeouterror",4]]]]]],[[["usize",15]],["builder",3]],[[],["builder",3]],[[],["state",4]],[[],["result",4,[["state",4],["error",3,[["stateerror",4]]]]]],[[],["result",4,[["error",3,[["suspenderror",4]]]]]],[[],["result",4,[["error",3,[["terminateerror",4]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",4,[["error",3,[["wakeerror",4]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["reltim",6]],[[],["tmo",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["duration",3]],[[],["timeout",3]],[[["duration",3]],["ordering",4]],[[["timeout",3]],["ordering",4]],null,null,[[["duration",3]],["bool",15]],[[["timeout",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["u128",15]],["option",4]],[[["reltim",6]]],[[["tmo",6]]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["duration",3]],["bool",15]],[[["timeout",3]],["bool",15]],[[["duration",3]],["option",4,[["ordering",4]]]],[[["timeout",3]],["option",4,[["ordering",4]]]],null,null,[[],["result",4]],[[["stdduration",3]],["result",4]],[[["timeout",3]],["result",4]],[[],["result",4]],[[["stdduration",3]],["result",4]],[[["duration",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[],["atr",6]],[[]],[[]],[[],["queueorder",4]],[[["queueorder",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"T_NFY_FLG"],[3,"T_NFY_DTQ"],[3,"acvct"],[3,"T_RTSK"],[19,"T_NFY"],[19,"T_ENFY"],[3,"T_CALM"],[3,"T_RALM"],[3,"T_CMPF"],[3,"T_CISR"],[3,"T_RMPF"],[3,"T_RSEM"],[3,"T_RFLG"],[3,"T_RDTQ"],[3,"T_RPDQ"],[3,"T_RMTX"],[3,"T_RMBF"],[3,"T_CSEM"],[3,"T_CFLG"],[3,"T_CDTQ"],[3,"T_CPDQ"],[3,"T_CMTX"],[3,"T_CMBF"],[3,"T_CTSK"],[3,"T_RCYC"],[3,"T_CCYC"],[3,"T_NFYINFO"],[3,"T_NFY_HDR"],[3,"T_NFY_VAR"],[3,"T_NFY_IVAR"],[3,"T_NFY_TSK"],[3,"T_NFY_SEM"],[3,"T_ENFY_VAR"],[3,"T_ENFY_DTQ"],[8,"IntoClosure"],[4,"SendError"],[4,"SendTimeoutError"],[4,"TrySendError"],[4,"SendForcedError"],[4,"RecvError"],[4,"RecvTimeoutError"],[4,"TryRecvError"],[4,"InitializeError"],[4,"InfoError"],[4,"BuildError"],[4,"DeleteError"],[3,"DataqueueRef"],[3,"Dataqueue"],[3,"Builder"],[3,"Info"],[13,"BadContext"],[13,"AccessDenied"],[13,"OutOfMemory"],[13,"BadParam"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadState"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"ZeroSized"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[3,"Kind"],[3,"Error"],[3,"ErrorCode"],[4,"Never"],[8,"ErrorKind"],[4,"ExitError"],[13,"AccessDenied"],[4,"GetError"],[4,"GetTimeoutError"],[4,"TryGetError"],[4,"ReleaseError"],[4,"InitializeError"],[4,"InfoError"],[4,"BuildError"],[4,"DeleteError"],[3,"MemoryPoolRef"],[3,"MemoryPool"],[3,"Builder"],[3,"Info"],[13,"BadContext"],[13,"AccessDenied"],[13,"NotSupported"],[13,"OutOfMemory"],[13,"BadParam"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadState"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadParam"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[4,"SendError"],[4,"SendTimeoutError"],[4,"TrySendError"],[4,"RecvError"],[4,"RecvTimeoutError"],[4,"TryRecvError"],[4,"InitializeError"],[4,"InfoError"],[4,"BuildError"],[4,"DeleteError"],[3,"MessageBufferRef"],[3,"MessageBuffer"],[3,"Builder"],[3,"Info"],[13,"BadContext"],[13,"AccessDenied"],[13,"NotSupported"],[13,"OutOfMemory"],[13,"BadParam"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadState"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"BadParam"],[13,"AccessDenied"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"BadParam"],[13,"AccessDenied"],[13,"Timeout"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[13,"BadContext"],[13,"BadId"],[13,"BadParam"],[13,"AccessDenied"],[13,"Timeout"],[4,"LockError"],[4,"LockTimeoutError"],[4,"TryLockError"],[4,"UnlockError"],[4,"InitializeError"],[4,"InfoError"],[4,"BuildError"],[4,"DeleteError"],[4,"PriorityProtection"],[3,"MutexRef"],[3,"Mutex"],[3,"Builder"],[3,"Info"],[13,"BadContext"],[13,"AccessDenied"],[13,"OutOfMemory"],[13,"BadParam"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadState"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadParam"],[13,"Deadlock"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadParam"],[13,"Deadlock"],[13,"Ceiling"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadParam"],[13,"Deadlock"],[13,"Timeout"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadSequence"],[4,"CurrentIdError"],[3,"Processor"],[3,"ProcessorTryFromError"],[13,"BadContext"],[4,"SignalError"],[4,"WaitError"],[4,"WaitTimeoutError"],[4,"PollError"],[4,"InitializeError"],[4,"InfoError"],[4,"BuildError"],[4,"DeleteError"],[3,"SemaphoreRef"],[3,"Semaphore"],[3,"Builder"],[3,"Info"],[13,"BadContext"],[13,"AccessDenied"],[13,"OutOfMemory"],[13,"BadParam"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadState"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"QueueOverflow"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[4,"ActivateError"],[4,"ActivateOnError"],[4,"CancelActivateAllError"],[4,"SetBasePriorityError"],[4,"PriorityError"],[4,"MigrateError"],[4,"DeleteError"],[4,"StateError"],[4,"InfoError"],[4,"WakeError"],[4,"CancelWakeAllError"],[4,"ReleaseWaitError"],[4,"SuspendError"],[4,"ResumeError"],[4,"TerminateError"],[4,"RaiseTerminationError"],[4,"DisableTerminationError"],[4,"BuildError"],[4,"SleepError"],[4,"SleepTimeoutError"],[4,"DelayError"],[4,"ExitError"],[4,"CurrentIdError"],[4,"State"],[3,"TaskRef"],[3,"Current"],[3,"Task"],[3,"Info"],[3,"Builder"],[3,"BadContextError"],[3,"AllProcessors"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"QueueOverflow"],[13,"BadContext"],[13,"BadId"],[13,"NotSupported"],[13,"AccessDenied"],[13,"QueueOverflow"],[13,"BadParam"],[13,"BadContext"],[13,"AccessDenied"],[13,"OutOfMemory"],[13,"BadParam"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"NotSupported"],[13,"AccessDenied"],[13,"BadState"],[13,"BadContext"],[13,"BadContext"],[13,"NotSupported"],[13,"Released"],[13,"TerminateRequest"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadState"],[13,"BadContext"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"BadParam"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"BadState"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadState"],[13,"BadParam"],[13,"BadContext"],[13,"BadId"],[13,"NotSupported"],[13,"AccessDenied"],[13,"BadState"],[13,"BadContext"],[13,"BadId"],[13,"NotSupported"],[13,"AccessDenied"],[13,"BadState"],[13,"BadContext"],[13,"BadId"],[13,"BadState"],[13,"BadParam"],[13,"AccessDenied"],[13,"BadContext"],[13,"NotSupported"],[13,"Released"],[13,"TerminateRequest"],[13,"BadContext"],[13,"NotSupported"],[13,"Timeout"],[13,"Released"],[13,"TerminateRequest"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"NotSupported"],[13,"AccessDenied"],[13,"BadState"],[13,"QueueOverflow"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadState"],[13,"BadParam"],[13,"BadContext"],[13,"BadId"],[13,"NotSupported"],[13,"AccessDenied"],[13,"BadState"],[13,"QueueOverflow"],[3,"Timeout"],[3,"Duration"],[3,"TryFromDurationError"],[4,"QueueOrder"]],"a":{"acre_dtq":[862],"acre_mbf":[1511],"acre_mpf":[1244],"acre_mtx":[1808],"acre_sem":[2109],"acre_tsk":[2480],"act_tsk":[2407],"can_act":[2481],"can_wup":[2482],"chg_pri":[2707],"del_dtq":[877],"del_mbf":[1525],"del_mpf":[1255],"del_mtx":[1820],"del_sem":[2121],"del_tsk":[2517],"dis_ter":[2518],"dly_tsk":[2516],"ena_ter":[2520],"ext_ker":[1143],"ext_tsk":[2549],"fsnd_dtq":[974],"get_mpf":[1303],"get_pid":[2002],"get_pri":[2702],"get_tid":[2513],"get_tst":[2713],"ini_mbf":[1583],"ini_mpf":[1306],"ini_mtx":[1872],"ini_sem":[938,2170],"loc_mtx":[1887],"mact_tsk":[2408],"mig_tsk":[2675],"park":[2708],"park_timeout":[2709],"pget_mpf":[1344],"ploc_mtx":[1929],"pol_sem":[2195],"prcv_dtq":[1006],"prcv_mbf":[1646],"psnd_dtq":[1007],"psnd_mbf":[1647],"ras_ter":[2704],"rcv_dtq":[971],"rcv_mbf":[1614],"ref_dtq":[937],"ref_mbf":[1582],"ref_mpf":[1305],"ref_mtx":[1870],"ref_sem":[2168],"ref_tsk":[2639],"rel_mpf":[1331],"rel_wai":[2705],"rsm_tsk":[2706],"sig_sem":[2197],"slp_tsk":[2708],"snd_dtq":[973],"snd_mbf":[1616],"sns_ctx":[1152],"sns_dpn":[1149],"sns_dsp":[1150],"sns_ker":[1151],"sns_loc":[1148],"sns_ter":[2673],"sus_tsk":[2714],"ta_act":[2551],"ter_tsk":[2715],"tget_mpf":[1304],"tloc_mtx":[1888],"trcv_dtq":[972],"trcv_mbf":[1615],"tslp_tsk":[2709],"tsnd_dtq":[975],"tsnd_mbf":[1617],"twai_sem":[2235],"unl_mtx":[1943],"unpark":[2809],"wai_sem":[2234],"wup_tsk":[2809]}},\
"itron_solid_fmp3":{"doc":"Rust interface to interact with operating systems based on …","t":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,6,6,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,17,17,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,3,3,3,3,3,3,3,3,3,3,19,3,3,19,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,12,12,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,12,12,12,12,3,5,12,12,12,12,12,12,12,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,12,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,12,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,5,12,12,12,12,12,5,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,5,5,12,5,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,12,12,12,12,12,5,5,5,5,5,5,6,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,5,5,5,5,12,12,5,5,5,12,12,12,5,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,5,5,5,5,5,12,12,12,5,5,5,5,5,5,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,12,12,12,12,12,5,5,12,12,12,12,5,12,12,5,5,5,12,12,5,5,5,5,5,5,12,12,12,5,5,12,12,5,5,12,12,5,12,5,5,5,12,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,12,12,12,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,5,5,5,12,5,5,12,12,12,12,12,5,12,12,12,5,6,8,10,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,3,6,3,3,4,13,13,13,13,3,4,4,13,13,13,13,13,4,4,13,13,13,13,4,4,4,13,13,13,13,13,13,13,13,4,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,8,3,6,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,11,11,11,11,5,11,11,11,11,5,5,5,5,5,11,11,11,11,12,14,14,14,14,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,6,4,3,4,13,13,4,4,3,4,4,3,3,13,13,13,13,4,13,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,3,13,13,13,13,4,13,13,3,4,4,4,4,3,3,13,13,13,13,4,13,13,13,13,13,13,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,4,3,3,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,3,6,4,13,13,3,4,4,13,13,13,4,13,13,13,3,3,4,13,13,13,13,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,3,4,4,3,4,4,4,4,13,6,4,3,4,8,4,13,13,13,13,13,13,13,13,13,13,6,4,13,13,13,13,4,13,4,13,13,13,4,13,4,4,4,4,4,4,13,3,3,4,13,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,5,11,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,18,3,3,18,18,11,11,11,11,11,11,11,11,11,11,11,11,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,11,11,11,11,11,11,11,11,11,11,11],"n":["_changelog_","abi","closure","dataqueue","error","eventflag","interrupt","kernel","macros","memorypool","mutex","prioritydataqueue","processor","semaphore","task","time","wait","ACPTN","ATR","ER","ER_BOOL","ER_ID","ER_UINT","EXCNO","EXINF","E_BOVR","E_CLS","E_COMM","E_CTX","E_DLT","E_ID","E_ILUSE","E_MACV","E_NOEXS","E_NOID","E_NOMEM","E_NORES","E_NOSPT","E_OACV","E_OBJ","E_OK","E_PAR","E_QOVR","E_RASTER","E_RLWAI","E_RSATR","E_RSFN","E_SYS","E_TMOUT","E_WBLK","FALSE","FLGPTN","FN","FP","HRTCNT","ID","INHNO","INTNO","ISR","MB_T","MODE","MPF_T","NonNullID","NonZeroER","PRI","RELTIM","STAT","SYSTIM","TACP_KERNEL","TACP_SHARED","TASK","TA_ACT","TA_CEILING","TA_CLR","TA_NOACTQUE","TA_NULL","TA_STA","TA_TPRI","TA_WMUL","TENFY_ACTTSK","TENFY_INCVAR","TENFY_SETFLG","TENFY_SETVAR","TENFY_SIGSEM","TENFY_SNDDTQ","TENFY_WUPTSK","TIPM_ENAALL","TMAX_RELTIM","TMEHDR","TMO","TMO_FEVR","TMO_NBLK","TMO_POL","TNFY_ACTTSK","TNFY_HANDLER","TNFY_INCVAR","TNFY_SETFLG","TNFY_SETVAR","TNFY_SIGSEM","TNFY_SNDDTQ","TNFY_WUPTSK","TPRI_INI","TPRI_SELF","TRUE","TSK_NONE","TSK_SELF","TTS_DMT","TTS_RDY","TTS_RUN","TTS_SUS","TTS_WAI","TTS_WAS","TTW_DLY","TTW_FLG","TTW_MPF","TTW_MTX","TTW_RDTQ","TTW_RPDQ","TTW_SDTQ","TTW_SEM","TTW_SLP","TTW_SPDQ","TWF_ANDW","TWF_ORW","T_CALM","T_CCYC","T_CDTQ","T_CFLG","T_CISR","T_CMPF","T_CMTX","T_CPDQ","T_CSEM","T_CSPN","T_CTSK","T_ENFY","T_ENFY_DTQ","T_ENFY_VAR","T_NFY","T_NFYINFO","T_NFY_DTQ","T_NFY_FLG","T_NFY_HDR","T_NFY_IVAR","T_NFY_SEM","T_NFY_TSK","T_NFY_VAR","T_RALM","T_RCYC","T_RDTQ","T_RFLG","T_RMPF","T_RMTX","T_RPDQ","T_RSEM","T_RSPN","T_RTSK","__pad_for_aarch64","__pad_for_aarch64","acptn1","acptn2","acptn3","acptn4","acre_alm","acre_cyc","acre_dtq","acre_flg","acre_isr","acre_mpf","acre_mtx","acre_pdq","acre_sem","acre_spn","acre_tsk","act_tsk","actcnt","actprc","acttsk","acttsk","acvct","adj_tim","affinity","affinity","affinity","almatr","almstat","blkcnt","blksz","bool_t","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_act","can_wup","ceilpri","chg_ipm","chg_pri","chg_spr","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clr_flg","clr_int","cycatr","cycphs","cycstat","cyctim","data","del_alm","del_cyc","del_dtq","del_flg","del_isr","del_mpf","del_mtx","del_pdq","del_sem","del_spn","del_tsk","dis_dsp","dis_int","dis_ter","dister","dly_tsk","dtqatr","dtqcnt","dtqid","dtqid","dtqmb","ena_dsp","ena_int","ena_ter","enfy","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","exd_tsk","exinf","exinf","exinf","ext_ker","ext_tsk","fblkcnt","fch_hrt","flgatr","flgid","flgptn","flgptn","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fsnd_dtq","get_inf","get_ipm","get_lod","get_mpf","get_nth","get_pid","get_pri","get_tid","get_tim","get_tst","handler","htskid","iflgptn","incvar","incvar","ini_dtq","ini_flg","ini_mpf","ini_mtx","ini_pdq","ini_sem","int_t","intno","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","iprcid","iprcid","iprcid","isemcnt","isr","isratr","isrpri","itskpri","lefttim","lefttim","lefttmo","loc_cpu","loc_mtx","loc_spn","mact_tsk","maxdpri","maxsem","mget_lod","mget_nth","mig_tsk","mpf","mpfatr","mpfmb","mrot_rdq","msta_alm","msta_cyc","mtxatr","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","nfy","nfyinfo","nfyinfo","nfymode","p_var","p_var","p_var","pdqatr","pdqcnt","pdqmb","pget_mpf","ploc_mtx","pol_flg","pol_sem","prb_int","prcid","prcid","prcid","prcv_dtq","prcv_pdq","psnd_dtq","psnd_pdq","ras_int","ras_ter","raster","rcv_dtq","rcv_pdq","ref_alm","ref_cyc","ref_dtq","ref_flg","ref_mpf","ref_mtx","ref_pdq","ref_sem","ref_spn","ref_tsk","rel_mpf","rel_wai","rot_rdq","rsm_tsk","rtskid","rtskid","sdtqcnt","sematr","semcnt","semid","set_flg","set_tim","setflg","setflg","setvar","setvar","sig_sem","sigsem","sigsem","slp_tsk","snd_dtq","snd_pdq","snddtq","snddtq","sns_ctx","sns_dpn","sns_dsp","sns_ker","sns_loc","sns_ter","spdqcnt","spnatr","spnstat","sta_alm","sta_cyc","stk","stksz","stp_alm","stp_cyc","stskid","stskid","sus_tsk","task","ter_tsk","tget_mpf","tloc_mtx","tmehdr","trcv_dtq","trcv_pdq","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_spn","tskatr","tskbpri","tskid","tskpri","tskstat","tskwait","tslp_tsk","tsnd_dtq","tsnd_pdq","twai_flg","twai_sem","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uint_t","unl_cpu","unl_mtx","unl_spn","value","wai_flg","wai_sem","wobjid","wtskid","wtskid","wtskid","wtskid","wup_tsk","wupcnt","wuptsk","wuptsk","xsns_dpn","Closure","IntoClosure","into_closure","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadParam","BadState","BuildError","Builder","DataElement","Dataqueue","DataqueueRef","DeleteError","Deleted","Deleted","Deleted","Deleted","Info","InfoError","InitializeError","NotSupported","NotSupported","NotSupported","NotSupported","OutOfMemory","RecvError","RecvTimeoutError","Released","Released","Released","Released","SendError","SendForcedError","SendTimeoutError","TerminateRequest","TerminateRequest","TerminateRequest","TerminateRequest","Timeout","Timeout","Timeout","Timeout","TryRecvError","TrySendError","ZeroSized","as_raw","as_raw","as_raw_nonnull","as_raw_nonnull","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","capacity","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","delete","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","finish","first_waiting_receiving_task_id","first_waiting_sending_task_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_raw_nonnull","from_raw_nonnull","info","initialize","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_empty","leak","len","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","queue_order","recv","recv_timeout","send","send_forced","send_timeout","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_recv","try_send","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","Error","ErrorCode","ErrorKind","Kind","MaybeKind","Never","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","code","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from_error_code","get","into","into","into","into","kind","ne","ne","ne","new","new_unchecked","new_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","AccessDenied","ExitError","borrow","borrow_mut","clone","eq","exit","fmt","from","from_error_code","into","is_cpu_lock_active","is_dispatch_pending_active","is_dispatching_disabled","is_operational","is_task_context","ne","try_from","try_into","type_id","0","kernel","match_kernel","tt_is_kernel","tt_kernel","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadParam","BadParam","BadState","Block","BuildError","Builder","DeleteError","Deleted","Deleted","GetError","GetTimeoutError","Info","InfoError","InitializeError","MemoryPool","MemoryPoolRef","NotSupported","NotSupported","NotSupported","OutOfMemory","ReleaseError","Released","Released","TerminateRequest","TerminateRequest","Timeout","Timeout","TryGetError","as_raw","as_raw","as_raw_nonnull","as_raw_nonnull","as_ref","block_count","block_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","delete","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","finish","first_waiting_task_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","free_block_count","from","from","from","from","from","from","from","from","from","from","from","from","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_raw_nonnull","from_raw_nonnull","get","get_timeout","info","initialize","into","into","into","into","into","into","into","into","into","into","into","into","leak","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","queue_order","release","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadParam","BadParam","BadParam","BadParam","BadSequence","BadState","BuildError","Builder","Ceiling","Deadlock","Deadlock","Deadlock","DeleteError","Deleted","Deleted","Info","InfoError","InitializeError","LockError","LockTimeoutError","Mutex","MutexRef","None","NotSupported","NotSupported","OutOfMemory","PriorityProtection","Released","Released","TerminateRequest","TerminateRequest","Timeout","Timeout","TryLockError","UnlockError","as_raw","as_raw","as_raw_nonnull","as_raw_nonnull","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","delete","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","finish","first_waiting_task_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_raw_nonnull","from_raw_nonnull","info","inherit","initialize","into","into","into","into","into","into","into","into","into","into","into","into","into","leak","lock","lock_timeout","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","owning_task_id","priority_protection","queue_order","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","priority","0","0","0","0","0","0","0","0","0","0","BadContext","CurrentIdError","Processor","ProcessorTryFromError","as_raw","as_raw_nonnull","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","current","eq","eq","eq","fmt","fmt","fmt","from","from","from","from_error_code","from_raw","from_raw_nonnull","into","into","into","ne","ne","ne","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadParam","BadState","BuildError","Builder","Count","DeleteError","Deleted","Deleted","Info","InfoError","InitializeError","NotSupported","NotSupported","OutOfMemory","PollError","QueueOverflow","Released","Released","Semaphore","SemaphoreRef","SignalError","TerminateRequest","TerminateRequest","Timeout","Timeout","WaitError","WaitTimeoutError","as_raw","as_raw","as_raw_nonnull","as_raw_nonnull","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","count","delete","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","finish","first_waiting_task_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_raw_nonnull","from_raw_nonnull","info","initial_count","initialize","into","into","into","into","into","into","into","into","into","into","into","into","leak","max_count","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","poll","queue_order","signal","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wait","wait_timeout","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","AccessDenied","ActivateError","ActivateOnError","AllProcessors","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContext","BadContextError","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadId","BadParam","BadParam","BadParam","BadParam","BadParam","BadParam","BadState","BadState","BadState","BadState","BadState","BadState","BadState","BadState","BadState","BadState","BuildError","Builder","CancelActivateAllError","CancelWakeAllError","Current","CurrentIdError","DelayError","DeleteError","DisableTerminationError","Dormant","EnableTerminationError","ExitError","Info","InfoError","IntoProcessorSet","MigrateError","NotSupported","NotSupported","NotSupported","NotSupported","NotSupported","NotSupported","NotSupported","NotSupported","NotSupported","OutOfMemory","Priority","PriorityError","QueueOverflow","QueueOverflow","QueueOverflow","QueueOverflow","RaiseTerminationError","Ready","ReleaseWaitError","Released","Released","Released","ResumeError","Running","SetBasePriorityError","SleepError","SleepTimeoutError","State","StateError","SuspendError","Suspended","Task","TaskRef","TerminateError","TerminateRequest","TerminateRequest","TerminateRequest","Timeout","Waiting","WaitingSuspended","WakeError","activate","activate_on","as_raw","as_raw","as_raw","as_raw_nonnull","as_raw_nonnull","as_raw_nonnull","as_ref","as_ref","base_priority","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cancel_activate_all","cancel_wake_all","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","current","current_id","current_priority","default","delay","delete","disable_termination","drop","enable_termination","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","exit","finish","finish_and_activate","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_error_code","from_raw_nonnull","from_raw_nonnull","hash","hash","info","initial_priority","initial_processor","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_termination_disabled","leak","migrate","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","priority","processor_affinity","raise_termination","release_wait","resume","set_base_priority","sleep","sleep_timeout","stack_size","start","state","state","suspend","terminate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wake","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","Duration","FOREVER","Timeout","TryFromDurationError","ZERO","ZERO","as_raw","as_raw","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","cmp","cmp","duration","duration","eq","eq","fmt","fmt","from","from","from","from_micros","from_micros","from_millis","from_millis","from_nanos","from_nanos","from_raw","from_raw","from_secs","from_secs","hash","hash","into","into","into","is_finite","ne","ne","partial_cmp","partial_cmp","timeout","timeout","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Fifo","QueueOrder","TaskPriority","as_raw_atr","borrow","borrow_mut","clone","eq","fmt","from","into","try_from","try_into","type_id"],"q":["itron_solid_fmp3","","","","","","","","","","","","","","","","","itron_solid_fmp3::abi","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","itron_solid_fmp3::closure","","","itron_solid_fmp3::dataqueueitron_solid_fmp3::dataqueue::BuildError","","","","itron_solid_fmp3::dataqueue::DeleteError","","","","itron_solid_fmp3::dataqueue::InfoError","","","itron_solid_fmp3::dataqueue::InitializeError","","","itron_solid_fmp3::dataqueue::RecvError","","","","","","","itron_solid_fmp3::dataqueue::RecvTimeoutError","","","","","","","","itron_solid_fmp3::dataqueue::SendError","","","","","","","itron_solid_fmp3::dataqueue::SendForcedError","","","","itron_solid_fmp3::dataqueue::SendTimeoutError","","","","","","","","itron_solid_fmp3::dataqueue::TryRecvError","","","","itron_solid_fmp3::dataqueue::TrySendError","","","","itron_solid_fmp3::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","itron_solid_fmp3::kernel","","","","","","","","","","","","","","","","","","","","itron_solid_fmp3::kernel::ExitError","itron_solid_fmp3::macros","","","","itron_solid_fmp3::memorypoolitron_solid_fmp3::memorypool::BuildError","","","","","itron_solid_fmp3::memorypool::DeleteError","","","","itron_solid_fmp3::memorypool::GetError","","","","","","","itron_solid_fmp3::memorypool::GetTimeoutError","","","","","","","","itron_solid_fmp3::memorypool::InfoError","","","itron_solid_fmp3::memorypool::InitializeError","","","itron_solid_fmp3::memorypool::ReleaseError","","","","itron_solid_fmp3::memorypool::TryGetError","","","","itron_solid_fmp3::mutexitron_solid_fmp3::mutex::BuildError","","","","itron_solid_fmp3::mutex::DeleteError","","","","itron_solid_fmp3::mutex::InfoError","","","itron_solid_fmp3::mutex::InitializeError","","","itron_solid_fmp3::mutex::LockError","","","","","","","","","itron_solid_fmp3::mutex::LockTimeoutError","","","","","","","","","","itron_solid_fmp3::mutex::PriorityProtection","itron_solid_fmp3::mutex::TryLockError","","","","","","itron_solid_fmp3::mutex::UnlockError","","","","itron_solid_fmp3::processor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","itron_solid_fmp3::processor::CurrentIdError","itron_solid_fmp3::semaphoreitron_solid_fmp3::semaphore::BuildError","","","","itron_solid_fmp3::semaphore::DeleteError","","","","itron_solid_fmp3::semaphore::InfoError","","","itron_solid_fmp3::semaphore::InitializeError","","","itron_solid_fmp3::semaphore::PollError","","","","itron_solid_fmp3::semaphore::SignalError","","","","itron_solid_fmp3::semaphore::WaitError","","","","","","","itron_solid_fmp3::semaphore::WaitTimeoutError","","","","","","","","itron_solid_fmp3::taskitron_solid_fmp3::task::ActivateError","","","","itron_solid_fmp3::task::ActivateOnError","","","","","","itron_solid_fmp3::task::BuildError","","","","itron_solid_fmp3::task::CancelActivateAllError","","","itron_solid_fmp3::task::CancelWakeAllError","","","","","itron_solid_fmp3::task::CurrentIdError","itron_solid_fmp3::task::DelayError","","","","itron_solid_fmp3::task::DeleteError","","","","itron_solid_fmp3::task::DisableTerminationError","","itron_solid_fmp3::task::ExitError","itron_solid_fmp3::task::InfoError","","","itron_solid_fmp3::task::MigrateError","","","","itron_solid_fmp3::task::PriorityError","","","","itron_solid_fmp3::task::RaiseTerminationError","","","","","itron_solid_fmp3::task::ReleaseWaitError","","","","","itron_solid_fmp3::task::ResumeError","","","","","itron_solid_fmp3::task::SetBasePriorityError","","","","","itron_solid_fmp3::task::SleepError","","","","itron_solid_fmp3::task::SleepTimeoutError","","","","","itron_solid_fmp3::task::StateError","","","itron_solid_fmp3::task::SuspendError","","","","","","itron_solid_fmp3::task::TerminateError","","","","","itron_solid_fmp3::task::WakeError","","","","","","itron_solid_fmp3::time","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","itron_solid_fmp3::wait","","","","","","","","","","","","",""],"d":["Changelog (<code>CHANGELOG.md</code>)","C API","Closures: <code>(fn(EXINF), EXINF)</code>","Dataqueues","Error types.","Eventflags (TODO)","Interrupts (TODO)","Miscellaneous functions that are not associated to …","Provides macros that allow downstream crates to examine …","Memory pools","Mutexes","Priority dataqueues (TODO)","Multiprocessing","Semaphores","Tasks","Temporal quantification","Shared definitions for waitable objects","アクセス許可パターン","オブジェクトの属性","エラーコード","エラーコードまたは真偽値","エラーコードまたはID番号","エラーコードまたは符号無し整数","CPU例外ハンドラ番号","拡張情報","バッファオーバーフロー","待ちオブジェクトの状態変化","通信エラー","コンテキストエラー","待ちオブジェクトの削除","不正ID番号","サービスコール不正使用","メモリアクセス違反","オブジェクト未生成","ID番号不足","メモリ不足","資源不足","未サポート機能","オブジェクトアクセス違反","オブジェクト状態エラー","正常終了","パラメータエラー","キューイングオーバーフロー","タスクの終了要求","待ち状態の強制解除","予約属性","予約機能コード","システムエラー","ポーリング失敗またはタイムアウト","ノンブロッキング受付け","Represents a falsy value.","イベントフラグのビットパターン","機能コード","プログラムの起動番地","高分解能タイマのカウント値","オブジェクトのID番号","割込みハンドラ番号","割込み番号","","管理領域を確保するためのデータ型","サービスコールの動作モード","…","Non-null version of <code>ID</code>","","優先度","相対時間","オブジェクトの状態","システム時刻","カーネルドメインだけにアクセスを許可","すべてのドメインからアクセスを許可","","タスクを起動された状態で生成","優先度上限プロトコル","イベントフラグのクリア指定","起動要求をキューイングしない","オブジェクト属性を指定しない","周期通知を動作状態で生成","待ち行列をタスクの優先度順にする","複数の待ちタスク","タスクの起動","変数のインクリメント","イベントフラグのセット","変数の設定","セマフォの返却","データキューへの送信","タスクの起床","割込み優先度マスク全解除","…","","タイムアウト指定","永久待ち","ノンブロッキング","ポーリング","タスクの起動","タイムイベントハンドラの呼出し","変数のインクリメント","イベントフラグのセット","変数の設定","セマフォの資源の返却","データキューへの送信","タスクの起床","タスクの起動時優先度","自タスクのベース優先度","Represents a truthy value.","該当するタスクがない","自タスク指定","休止状態","実行可能状態","実行状態","強制待ち状態","待ち状態","二重待ち状態","時間経過待ち","イベントフラグ待ち","固定長メモリブロックの獲得待ち","ミューテックスのロック待ち状態","データキューからの受信待ち","優先度データキューからの受信待ち","データキューへの送信待ち","セマフォの資源獲得待ち","起床待ち","優先度データキューへの送信待ち","イベントフラグのAND待ち","イベントフラグのOR待ち","SOLID/FMP3 <code>T_CALM</code>","SOLID/FMP3 <code>T_CCYC</code>","","","TOPPERS/ASP3 and SOLID/FMP3 <code>T_CISR</code>","","","","","","SOLID/FMP3 extension","<code>T_NFYINFO::enfy</code>","","","<code>T_NFYINFO::nfy</code>","","","","","","","","","TOPPERS/ASP3 <code>T_RALM</code>","TOPPERS/FMP3 <code>T_RCYC</code>","","","","","","","","TOPPERS/FMP3 <code>T_RTSK</code>","","","通常操作1のアクセス許可パターン","通常操作2のアクセス許可パターン","管理操作のアクセス許可パターン","参照操作のアクセス許可パターン","","","","","","","","","","","","","起動要求キューイング数","次の起動時の割付けプロセッサのID","","","アクセス許可ベクタ","","タスクの割付け可能プロセッサ","周期通知の割付け可能プロセッサ","アラーム通知の割付け可能プロセッサ","アラーム通知属性","アラーム通知の動作状態","獲得できる固定長メモリブロックの数","固定長メモリブロックのサイズ","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ミューテックスの上限優先度","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","周期通知属性","周期通知の通知位相","周期通知の動作状態","周期通知の通知周期","送信する値","","","","","","","","","","","","","","","タスク終了禁止状態","","データキュー属性","…","データキューID","データキューID","データキュー管理領域の先頭番地","","","","エラーの通知に関する付随情報","","","","","","","","","","","","","","","","","","","","","","","","","","","","割込みサービスルーチンの拡張情報","タスクの拡張情報","タイムイベントハンドラの拡張情報","","","…","","イベントフラグ属性","イベントフラグID","イベントフラグの現在のビットパターン","セットするビットパターン","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","…","イベントフラグの初期ビットパターン","","","","","","","","","自然なサイズの符号付き整数","…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","タスクの初期割付けプロセッサ","周期通知の初期割付けプロセッサ","アラーム通知の初期割付けプロセッサ","セマフォの初期資源数","割込みサービスルーチンの先頭番地","割込みサービスルーチン属性","割込みサービスルーチン優先度","タスクの起動時優先度","次回通知時刻までの相対時間","通知時刻までの相対時間","タイムアウトするまでの時間","","","","","…","セマフォの最大資源数","","","","固定長メモリプール領域の先頭番地","固定長メモリプール属性","固定長メモリプール管理領域の先頭番地","","","","ミューテックス属性","","","","","","","","","","","","","","","","","","","","","","","","","","","タイムイベントの通知に関する付随情報","周期通知の通知方法","アラーム通知の通知方法","通知処理モード","変数の番地","変数の番地","変数の番地","優先度データキュー属性","…","優先度データキュー管理領域の先頭番地","","","","","","割付けプロセッサのID","割付けプロセッサのID","割付けプロセッサのID","","","","","","","タスク終了要求状態","","","","","","","","","","","","","","","","","…","…","…","セマフォ属性","セマフォの現在の資源数","セマフォID","","","","","","","","","","","","","","","","","","","","","…","スピンロック属性","スピンロックのロック状態","","","タスクのスタック領域の先頭番地","タスクのスタック領域のサイズ","","","…","…","","タスクのメインルーチンの先頭番地","","","","タイムイベントハンドラの先頭番地","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","タスク属性","タスクのベース優先度","タスクID","タスクの現在優先度","タスク状態","待ち要因","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","自然なサイズの符号無し整数","","","","設定する値","","","待ち対象のオブジェクトのID","…","セマフォの待ち行列の先頭のタスクのID番号","…","…","","起床要求キューイング数","","","","A bundle of a function pointer and associated data.","Conversion to <code>Closure</code>.","Convert <code>self</code> to <code>Closure</code>.","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Bad parameter.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>Dataqueue::build</code>.","The builder type for dataqueues. Created by …","The unit of data that can be sent through a dataqueue.","An owned dataqueue.","A borrowed reference to a dataqueue.","Error type for <code>DataqueueRef::delete</code>.","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Dataqueue information returned by <code>DataqueueRef::info</code>.","Error type for <code>DataqueueRef::info</code>.","Error type for <code>DataqueueRef::initialize</code>.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","Ran out of memory or dataqueue IDs, or the specified …","Error type for <code>DataqueueRef::recv</code>.","Error type for <code>DataqueueRef::recv_timeout</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>DataqueueRef::send</code>.","Error type for <code>DataqueueRef::send_forced</code>.","Error type for <code>DataqueueRef::send_timeout</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>DataqueueRef::try_recv</code>.","Error type for <code>DataqueueRef::try_send</code>.","The queue length is zero.","Get the raw object ID.","Get the raw object ID.","Get the raw object ID as <code>abi::NonNullID</code>.","Get the raw object ID as <code>abi::NonNullID</code>.","Borrow <code>Dataqueue</code> as <code>DataqueueRef</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>acre_dtq</code>: Create a builder for <code>Dataqueue</code>.","(<strong>Mandatory</strong>) Specify the dataqueue’s capacity, measured in","","","","","","","","","","","","","","<code>del_dtq</code>: Delete the dataqueue.","","","","","","","","","","","","","","","Create a dataqueue using the specified parameters.","Get the first waiting receiver’s task ID.","Get the first waiting sender’s task ID.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a <code>DataqueueRef</code> from a raw object ID.","Construct a <code>Dataqueue</code> from a raw object ID.","<code>ref_dtq</code>: Get the dataqueue’s general information.","<code>ini_sem</code>: Initialize the dataqueue.","","","","","","","","","","","","","","","","Get a flag indicating whether the dataqueue is empty.","Consume and “leak” <code>self</code>, returning a reference …","Get the number of data items contained in the dataqueue.","","","","","","","","","","","","","","Specify the queue order. Defaults to <code>Fifo</code> when unspecified.","<code>rcv_dtq</code>: Receive a data element from the dataqueue. Blocks …","<code>trcv_dtq</code>: Receive a data element to the dataqueue. Blocks …","<code>snd_dtq</code>: Send a data element to the dataqueue. Blocks the …","<code>fsnd_dtq</code>: Send a data element to the dataqueue. Removes (…","<code>tsnd_dtq</code>: Send a data element to the dataqueue. Blocks the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>prcv_dtq</code>: Receive a data element to the dataqueue. Fails …","<code>psnd_dtq</code>: Send a data element to the dataqueue. Fails and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Target-specific error value that can be categorized as one …","Raw error code.","Trait for error kind types.","Type for error kinds that are valid in the current target …","Placeholder for error kind variants.","Indicates that the error kind never occurs in the current …","","","","","","","","","","","","","Get the error code.","","","","","","","","","","","","","","Categorize the specified error code.","Get the numerical value.","","","","","Get the error kind.","","","","Construct an <code>ErrorCode</code>.","Construct <code>Error</code>.","Construct an <code>ErrorCode</code> without checking if <code>code</code> is a valid …","","","","","","","","","","","","","Requires: <code>cfg(any())</code>","Error type for <code>exit</code>.","","","","","<code>ext_ker</code>: Terminate the kernel.","","","","","<code>sns_loc</code>: Get a flag indicating whether the CPU lock state …","<code>sns_dpn</code>: Get a flag indicating whether the dispatch …","<code>sns_dsp</code>: Get a flag indicating whether dispatching is …","<code>sns_ker</code>: Get a flag indicating whether the kernel is in an …","<code>sns_ctx</code>: Get a flag indicating whether the current thread …","","","","","","Expand to the current kernel’s name (e.g., <code>&quot;asp3&quot;</code>).","Expand to the arm corresponding to the current kernel.","Determine if this crate was compiled for the specified …","Get the kernel selected by a Cargo feature.","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","The supplied memory block does not originate from the …","Bad parameter.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","A pointer to a memory block.","Error type for <code>MemoryPool::build</code>.","The builder type for memory pools. Created by …","Error type for <code>MemoryPoolRef::delete</code>.","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Error type for <code>MemoryPoolRef::get</code>.","Error type for <code>MemoryPoolRef::get_timeout</code>.","Memory pool information returned by <code>MemoryPoolRef::info</code>.","Error type for <code>MemoryPoolRef::info</code>.","Error type for <code>MemoryPoolRef::initialize</code>.","An owned memory pool.","A borrowed reference to a memory pool.","The task is a restricted task.","The task is a restricted task.","The specified parameter is not supported by the kernel.","Ran out of memory or memory pool IDs, or the specified …","Error type for <code>MemoryPoolRef::release</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>MemoryPoolRef::try_get</code>.","Get the raw object ID.","Get the raw object ID.","Get the raw object ID as <code>abi::NonNullID</code>.","Get the raw object ID as <code>abi::NonNullID</code>.","Borrow <code>MemoryPool</code> as <code>MemoryPoolRef</code>.","(<strong>Mandatory</strong>) Specify the capacity, measured in number of …","(<strong>Mandatory</strong>) Specify the block size.","","","","","","","","","","","","","","","","","","","","","","","","","<code>acre_mpf</code>: Create a builder for <code>MemoryPool</code>.","","","","","","","","","","","<code>del_mpf</code>: Delete the memory pool.","","","","","","","","","","","","Create a memory pool using the specified parameters.","Get the first waiting task’s ID.","","","","","","","","","","","","Get the number of free memory blocks.","","","","","","","","","","","","","","","","","","","","","Construct a <code>MemoryPoolRef</code> from a raw object ID.","Construct a <code>MemoryPool</code> from a raw object ID.","<code>get_mpf</code>: Acquire a memory block. Blocks the current task …","<code>tget_mpf</code>: Acquire a memory block. Blocks the current task …","<code>ref_mpf</code>: Get the memory pool’s general information.","<code>ini_mpf</code>: Initialize the memory pool.","","","","","","","","","","","","","Consume and “leak” <code>self</code>, returning a reference …","","","","","","","","","","","Specify the queue order. Defaults to <code>Fifo</code> when unspecified.","<code>rel_mpf</code>: Return a memory block to the memory pool.","","","","","","","","","","","","","<code>pget_mpf</code>: Acquire a memory block. Fails and returns …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","The calling task’s priority is higher than the mutex’s …","The calling task’s priority is higher than the mutex’s …","The calling task’s priority is higher than the mutex’s …","Bad parameter.","The mutex is not the lastly-locked mutex currently owned …","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>Mutex::build</code>.","The builder type for mutexes. Created by <code>Mutex::build</code>.","The priority ceiling protocol.","The calling task already owns the mutex.","The calling task already owns the mutex.","The calling task already owns the mutex.","Error type for <code>MutexRef::delete</code>.","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Mutex information returned by <code>MutexRef::info</code>.","Error type for <code>MutexRef::info</code>.","Error type for <code>MutexRef::initialize</code>.","Error type for <code>MutexRef::lock</code>.","Error type for <code>MutexRef::lock_timeout</code>.","An owned mutex.","A borrowed reference to a mutex.","No priority protection.","The task is a restricted task.","The task is a restricted task.","Ran out of mutex IDs.","Specifies a priority protection protocol used by a mutex.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>MutexRef::try_lock</code>.","Error type for <code>MutexRef::unlock</code>.","Get the raw object ID.","Get the raw object ID.","Get the raw object ID as <code>abi::NonNullID</code>.","Get the raw object ID as <code>abi::NonNullID</code>.","Borrow <code>Mutex</code> as <code>MutexRef</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>acre_mtx</code>: Create a builder for <code>Mutex</code>.","","","","","","","","","","","","<code>del_mtx</code>: Delete the mutex.","","","","","","","","","","","","","Create a mutex using the specified parameters.","Get the first waiting task’s ID.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a <code>MutexRef</code> from a raw object ID.","Construct a <code>Mutex</code> from a raw object ID.","<code>ref_mtx</code>: Get the mutex’s general information.","Return <code>Some(Self::Inherit)</code> if it’s supported by the …","<code>ini_mtx</code>: Initialize the mutex.","","","","","","","","","","","","","","Consume and “leak” <code>self</code>, returning a reference …","<code>loc_mtx</code>: Lock the mutex.","<code>tloc_mtx</code>: Lock the mutex with timeout.","","","","","","","","","","","","Get the owning task’s ID.","Specify the priority protection mechanism to use. Defaults …","Specify the queue order. Defaults to <code>Fifo</code> when unspecified.","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>ploc_mtx</code>: Attempt to lock the mutex. Returns immediately …","","","","","","","","","","","","","","<code>unl_mtx</code>: Unlock the mutex.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specifies the priority ceiling.","","","","","","","","","","","The CPU lock state is active.","Error type for <code>current</code>.","Refers to a single processor in a multi-processor system. …","The error type returned when a conversion from <code>usize</code> to …","Get a raw processor ID.","Get a raw processor ID as <code>abi::NonNullID</code>.","","","","","","","","","","<code>get_pid</code>: Get the current processor’s ID.","","","","","","","","","","","Construct <code>Processor</code> from a raw processor ID.","Construct <code>Processor</code> from a non-null raw processor ID.","","","","","","","","","","","","","","","","","","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Bad parameter.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>Semaphore::build</code>.","The builder type for semaphores. Created by …","Semaphore count.","Error type for <code>SemaphoreRef::delete</code>.","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Requires: <code>cfg(all(not(feature = &quot;none&quot;), feature = &quot;dcre&quot;))</code>","Semaphore information returned by <code>SemaphoreRef::info</code>.","Error type for <code>SemaphoreRef::info</code>.","Error type for <code>SemaphoreRef::initialize</code>.","The task is a restricted task.","The task is a restricted task.","Ran out of semaphore IDs.","Error type for <code>SemaphoreRef::poll</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","An owned semaphore.","A borrowed reference to a semaphore.","Error type for <code>SemaphoreRef::signal</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>SemaphoreRef::wait</code>.","Error type for <code>SemaphoreRef::wait_timeout</code>.","Get the raw object ID.","Get the raw object ID.","Get the raw object ID as <code>abi::NonNullID</code>.","Get the raw object ID as <code>abi::NonNullID</code>.","Borrow <code>Semaphore</code> as <code>SemaphoreRef</code>.","","","","","","","","","","","","","","","","","","","","","","","","","<code>acre_sem</code>: Create a builder for <code>Semaphore</code>.","","","","","","","","","","","Get the semaphore’s count.","<code>del_sem</code>: Delete the semaphore.","","","","","","","","","","","","Create a semaphore using the specified parameters.","Get the first waiting task’s ID.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a <code>SemaphoreRef</code> from a raw object ID.","Construct a <code>Semaphore</code> from a raw object ID.","<code>ref_sem</code>: Get the semaphore’s general information.","Specify the initial count. Defaults to <code>max_count</code> when …","<code>ini_sem</code>: Initialize the semaphore.","","","","","","","","","","","","","Consume and “leak” <code>self</code>, returning a reference …","Specify the maximum count. Defaults to <code>1</code> when unspecified.","","","","","","","","","","","<code>pol_sem</code>: Decrement the semaphore count by one. Fails and …","Specify the queue order. Defaults to <code>Fifo</code> when unspecified.","<code>sig_sem</code>: Increment the semaphore count by one.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>wai_sem</code>: Decrement the semaphore count by one. Blocks the …","<code>twai_sem</code>: Decrement the semaphore count by one. Blocks the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Requires: <code>cfg(any())</code>","Error type for <code>TaskRef::activate</code>.","Error type for <code>TaskRef::activate_on</code>.","An instance of <code>IntoProcessorSet</code> specifying all processors.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: …","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","The CPU lock state is active.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","The error type returned by <code>current</code> when the CPU lock state …","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: …","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","The class the task belongs to does not permit assigning …","Bad parameter.","Bad parameter.","Bad parameter.","Bad state.","Bad parameter.","The task is dormant.","The task is dormant.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Bad state.","Bad state.","Bad state.","Bad state.","Bad state.","Bad state.","Bad state.","Error type for <code>Task::build</code>.","The builder type for tasks. Created by <code>Task::build</code>.","Error type for <code>TaskRef::cancel_activate_all</code>.","Error type for <code>TaskRef::cancel_wake_all</code>.","Represents a reference to the current task. Returned by …","Error type for <code>current_id</code>.","Error type for <code>delay</code>.","Error type for <code>TaskRef::delete</code>.","Error type for <code>disable_termination</code>.","","Error type for <code>enable_termination</code>.","Error type for <code>exit</code>.","Task information returned by <code>TaskRef::info</code>.","Error type for <code>TaskRef::info</code>.","The trait implemented by types that can be passed to …","Error type for <code>TaskRef::migrate</code>.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","The task is a restricted task.","Ran out of memory or task IDs.","Task priority value.","Error type for <code>TaskRef::priority</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","The task is already suspended.","Error type for <code>TaskRef::raise_termination</code>.","","Error type for <code>TaskRef::release_wait</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Error type for <code>TaskRef::resume</code>.","","Error type for <code>TaskRef::set_base_priority</code>.","Error type for <code>sleep</code>.","Error type for <code>sleep_timeout</code>.","Task state returned by <code>TaskRef::state</code>.","Error type for <code>TaskRef::state</code>.","Error type for <code>TaskRef::suspend</code>.","","An owned task.","A borrowed reference to a task.","Error type for <code>TaskRef::terminate</code>.","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","Requires: <code>cfg(not(feature = &quot;none&quot;))</code>","","","Error type for <code>TaskRef::wake</code>.","<code>act_tsk</code>: Pend an activation request for the task.","<code>mact_tsk</code>: Pend an activation request for the task, …","Get the raw object ID.","Get the raw object ID.","Get the raw object ID.","Get the raw object ID as <code>abi::NonNullID</code>.","Get the raw object ID as <code>abi::NonNullID</code>.","Get the raw object ID as <code>abi::NonNullID</code>.","Borrow <code>Current</code> as <code>TaskRef</code>.","Borrow <code>Task</code> as <code>TaskRef</code>.","Get the task’s base priority.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>acre_tsk</code>: Create a builder for <code>Task</code>.","<code>can_act</code>: Cancel any pending activation requests for the …","<code>can_wup</code>: Cancel any wake up requests for the task. Returns …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a reference to the current task.","<code>get_tid</code>: Get the currently running task’s ID.","Get the task’s current priority.","","<code>dly_tsk</code>: Delay the current task.","<code>del_tsk</code>: Delete the task.","<code>dis_ter</code>: Disable the termination of the current task by a …","","<code>ena_ter</code>: Re-enable the termination of the current task by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>ext_tsk</code>: Terminate the current task.","Create a task using the specified parameters.","Create and activate a task using the specified parameters.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a <code>TaskRef</code> from a raw object ID.","Construct a <code>Task</code> from a raw object ID.","","","<code>ref_tsk</code>: Get the task’s general information.","(<strong>Mandatory</strong>) Specify the initial priority.","Specify the task’s initial assigned processor. Defaults …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>sns_ter</code>: Determine if the termination by a termination …","Consume and “leak” <code>self</code>, returning a reference …","<code>mig_tsk</code>: Change the task’s assigned processor.","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>get_pri</code>: Get the task’s priority.","Specify the task’s assignable processsor set. Defaults …","<code>ras_ter</code>: Pend a termination request.","<code>rel_wai</code>: Forcibly release the task from waiting.","<code>rsm_tsk</code>: Resume the task.","<code>chg_pri</code>: Change the task’s base priority.","<code>slp_tsk</code>: Put the current task to sleep.","<code>dly_tsk</code>: Put the current task to sleep with timeout.","(<strong>Mandatory</strong>) Specify to use an automatically allocated stack","(<strong>Mandatory</strong>) Specify the entry point.","Get the task’s state.","<code>get_tst</code>: Get the task’s state.","<code>sus_tsk</code>: Suspend the task.","<code>ter_tsk</code>: Terminate the task.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>wup_tsk</code>: Pend a wake up request for the task.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A valid relative time value (<code>abi::RELTIM</code>).","The infinite timeout value.","A valid timeout value (<code>abi::TMO</code>).","The error type returned when a checked duration conversion …","The zero duration, which causes polling.","The zero timeout value, which causes polling.","","","","","","","","","","","","","Construct a <code>Duration</code> value in a concise syntax. Panics if …","Construct a <code>Duration</code> value in a concise syntax. Panics if …","","","","","","","","Construct a new <code>Duration</code> from the specified number of …","Construct a new <code>Timeout</code> from the specified number of …","Construct a new <code>Duration</code> from the specified number of …","Construct a new <code>Timeout</code> from the specified number of …","Construct a new <code>Duration</code> from the specified number of …","Construct a new <code>Timeout</code> from the specified number of …","Construct a new <code>Duration</code> from a raw value.","Construct a new <code>Timeout</code> from a raw value.","Construct a new <code>Duration</code> from the specified number of …","Construct a new <code>Timeout</code> from the specified number of …","","","","","","","","","","","Construct a <code>Timeout</code> value in a concise syntax. Panics if …","Construct a <code>Timeout</code> value in a concise syntax. Panics if …","","","","","","","","","","","","","","The wait queue is processed in a FIFO order.","Specifies the sorting order of a wait queue.","The wait queue is processed in a task priority order.","Convert <code>self</code> to a value of type <code>abi::ATR</code>.","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,4,4,5,6,0,0,7,8,9,9,10,11,11,0,12,13,11,14,15,16,17,18,19,20,21,22,23,24,25,7,4,26,10,8,9,27,5,6,28,29,30,31,32,1,2,33,34,3,12,13,11,14,15,16,17,18,19,20,21,22,23,24,25,7,4,26,10,8,9,27,5,6,28,29,30,31,32,1,2,33,34,3,0,0,24,0,0,0,12,13,11,14,15,16,17,18,19,20,21,22,23,24,25,7,4,26,10,8,9,27,5,6,28,29,30,31,32,1,2,33,34,3,0,0,8,8,26,8,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,22,22,2,34,22,0,0,0,27,13,11,14,15,16,17,18,19,20,21,22,23,24,25,4,26,10,29,30,31,32,1,2,33,34,3,0,12,7,28,0,0,13,0,21,1,15,1,13,11,14,15,16,17,18,19,20,21,22,23,24,25,7,4,26,10,28,29,30,31,32,1,2,33,34,3,12,13,11,14,15,16,17,18,19,20,21,22,23,24,25,7,4,26,10,8,9,27,5,6,28,29,30,31,32,1,2,33,34,3,0,0,0,0,0,0,0,0,0,0,0,5,18,21,5,6,0,0,0,0,0,0,0,12,12,13,11,14,15,16,17,18,19,20,21,22,23,24,25,7,4,26,10,8,9,27,5,6,28,29,30,31,32,1,2,33,34,3,7,8,9,20,12,12,12,7,26,10,4,0,0,0,0,23,20,0,0,0,11,11,11,0,0,0,24,13,11,14,15,16,17,18,19,20,21,22,23,24,25,4,26,10,29,30,31,32,1,2,33,34,3,27,8,9,27,29,30,33,23,23,23,0,0,0,0,0,4,26,10,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,17,16,20,14,32,0,0,5,6,5,6,0,5,6,0,0,0,5,6,0,0,0,0,0,0,17,25,19,0,0,7,7,0,0,16,17,0,7,0,0,0,28,0,0,12,13,11,14,15,16,17,18,19,20,21,22,23,24,25,7,4,26,10,8,9,27,5,6,28,29,30,31,32,1,2,33,34,3,12,13,11,14,15,16,17,18,19,20,21,22,23,24,25,7,4,26,10,8,9,27,5,6,28,29,30,31,32,1,2,33,34,3,0,7,4,31,4,4,4,0,0,0,0,0,12,13,11,14,15,16,17,18,19,20,21,22,23,24,25,7,4,26,10,8,9,27,5,6,28,29,30,31,32,1,2,33,34,3,0,0,0,0,29,0,0,4,13,14,15,18,0,4,5,6,0,0,0,35,36,37,38,39,40,41,42,43,44,45,46,36,37,38,39,40,41,42,43,44,45,46,36,37,38,39,40,41,42,43,44,46,45,46,0,0,0,0,0,0,36,37,40,41,0,0,0,36,37,40,41,45,0,0,36,37,40,41,0,0,0,36,37,40,41,37,38,41,42,0,0,39,47,48,47,48,48,49,36,37,38,39,40,41,42,43,44,45,46,50,47,48,49,36,37,38,39,40,41,42,43,44,45,46,50,47,48,48,49,36,37,38,39,40,41,42,43,44,45,46,50,47,47,48,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,50,36,37,38,39,40,41,42,43,44,45,46,50,47,48,49,36,37,38,39,40,41,42,43,44,45,46,50,47,48,36,37,38,39,40,41,42,43,44,45,46,47,48,47,47,49,36,37,38,39,40,41,42,43,44,45,46,50,47,48,50,48,50,36,37,38,39,40,41,42,43,44,45,46,47,48,49,47,47,47,47,47,49,36,37,38,39,40,41,42,43,44,45,46,50,47,48,49,36,37,38,39,40,41,42,43,44,45,46,50,47,48,47,47,49,36,37,38,39,40,41,42,43,44,45,46,50,47,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,0,0,0,0,0,0,108,109,107,110,108,109,107,110,108,109,107,110,108,108,109,107,110,108,109,107,110,108,109,109,107,110,111,109,108,109,107,110,108,108,109,107,109,108,109,108,109,107,110,108,109,107,110,108,109,107,110,112,0,112,112,112,112,0,112,112,112,112,0,0,0,0,0,112,112,112,112,113,0,0,0,0,114,115,116,117,118,119,120,121,114,115,116,117,118,119,120,121,114,115,116,117,118,119,121,117,120,121,0,0,0,0,114,115,0,0,0,0,0,0,0,114,115,120,120,0,114,115,114,115,115,116,0,122,123,122,123,123,124,124,124,114,115,116,117,118,119,120,121,125,122,123,124,114,115,116,117,118,119,120,121,125,122,123,123,114,115,116,117,118,119,120,121,125,122,122,123,114,115,116,117,118,119,120,121,122,123,124,125,114,115,116,117,118,119,120,121,125,122,123,125,124,114,115,116,117,118,119,120,121,125,122,123,114,115,116,117,118,119,120,121,122,123,122,122,122,122,124,114,115,116,117,118,119,120,121,125,122,123,123,114,115,116,117,118,119,120,121,122,123,124,122,124,114,115,116,117,118,119,120,121,125,122,123,122,124,114,115,116,117,118,119,120,121,125,122,123,124,114,115,116,117,118,119,120,121,125,122,123,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,164,165,166,167,168,169,170,171,164,165,166,167,168,169,171,164,165,166,170,167,171,0,0,172,164,165,166,0,164,165,0,0,0,0,0,0,0,172,164,165,170,0,164,165,164,165,165,166,0,0,173,174,173,174,174,175,164,165,166,167,168,169,170,171,176,173,172,174,175,164,165,166,167,168,169,170,171,176,173,172,174,174,164,165,166,167,168,169,170,171,176,173,172,173,174,164,165,166,167,168,169,170,171,173,172,174,175,176,164,165,166,167,168,169,170,171,176,173,172,174,175,164,165,166,167,168,169,170,171,176,173,172,174,164,165,166,167,168,169,170,171,173,174,173,172,173,175,164,165,166,167,168,169,170,171,176,173,172,174,174,173,173,164,165,166,167,168,169,170,171,173,172,174,176,175,175,175,164,165,166,167,168,169,170,171,176,173,172,174,175,164,165,166,167,168,169,170,171,176,173,172,174,173,175,164,165,166,167,168,169,170,171,176,173,172,174,173,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,0,0,0,222,222,221,222,223,221,222,223,221,222,223,0,221,222,223,221,222,223,221,222,223,221,222,222,221,222,223,221,222,223,221,222,222,223,221,222,223,221,222,223,224,225,226,227,228,229,230,231,232,225,226,227,228,229,230,231,232,225,226,227,228,229,230,232,231,232,0,0,0,0,226,227,0,0,0,226,227,231,0,225,226,227,0,0,0,226,227,227,228,0,0,233,234,233,234,234,235,225,226,227,228,229,230,231,232,236,233,234,235,225,226,227,228,229,230,231,232,236,233,234,234,225,226,227,228,229,230,231,232,236,233,236,233,234,225,226,227,228,229,230,231,232,233,234,235,236,225,226,227,228,229,230,231,232,236,233,234,235,225,226,227,228,229,230,231,232,236,233,234,225,226,227,228,229,230,231,232,233,234,233,235,233,235,225,226,227,228,229,230,231,232,236,233,234,234,235,225,226,227,228,229,230,231,232,233,234,233,235,233,235,225,226,227,228,229,230,231,232,236,233,234,235,225,226,227,228,229,230,231,232,236,233,234,235,225,226,227,228,229,230,231,232,236,233,234,233,233,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,0,0,0,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,292,293,294,295,290,296,291,0,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,275,277,279,288,289,291,277,278,280,283,284,285,286,287,288,289,0,0,0,0,0,0,0,0,0,297,0,0,0,0,0,0,275,283,284,285,286,287,292,293,294,291,0,0,274,275,283,286,0,297,0,292,293,294,0,297,0,0,0,0,0,0,297,0,0,0,292,293,294,293,297,297,0,298,298,298,299,300,298,299,300,299,300,301,302,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,292,293,294,295,290,303,296,291,297,301,298,299,304,300,302,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,292,293,294,295,290,303,296,291,297,301,298,299,304,300,300,298,298,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,292,293,294,295,290,303,296,291,297,301,298,299,304,0,0,301,304,0,298,0,300,0,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,292,293,294,295,290,303,296,291,297,298,304,300,0,302,302,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,292,293,294,295,290,303,296,291,297,301,298,299,304,300,302,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,292,293,294,295,290,303,296,291,297,301,298,299,304,300,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,292,293,294,295,290,296,291,298,300,303,297,298,302,302,302,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,292,293,294,295,290,303,296,291,297,301,298,299,304,300,0,300,298,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,292,293,294,295,290,303,296,291,298,300,298,302,298,298,298,298,0,0,302,302,301,298,298,298,302,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,292,293,294,295,290,303,296,291,297,301,298,299,304,300,302,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,292,293,294,295,290,303,296,291,297,301,298,299,304,300,302,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,292,293,294,295,290,303,296,291,297,301,298,299,304,300,298,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,0,399,0,0,400,399,400,399,401,400,399,401,400,399,400,399,400,399,0,0,400,399,400,399,401,400,399,400,399,400,399,400,399,400,399,400,399,400,399,401,400,399,399,400,399,400,399,0,0,401,400,400,400,399,399,399,401,400,399,401,400,399,402,0,402,402,402,402,402,402,402,402,402,402,402,402],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[],["t_cisr",3]],[[],["t_rmpf",3]],[[],["t_cmpf",3]],[[],["t_rsem",3]],[[],["t_rflg",3]],[[],["t_rdtq",3]],[[],["t_rpdq",3]],[[],["t_rmtx",3]],[[],["t_rspn",3]],[[],["t_csem",3]],[[],["t_cflg",3]],[[],["t_cdtq",3]],[[],["t_cpdq",3]],[[],["t_cmtx",3]],[[],["t_cspn",3]],[[],["t_ctsk",3]],[[],["t_rtsk",3]],[[],["t_rcyc",3]],[[],["t_ralm",3]],[[],["t_ccyc",3]],[[],["t_calm",3]],[[],["t_nfyinfo",3]],[[],["t_nfy",19]],[[],["t_enfy",19]],[[],["t_nfy_hdr",3]],[[],["t_nfy_var",3]],[[],["t_nfy_ivar",3]],[[],["t_nfy_tsk",3]],[[],["t_nfy_sem",3]],[[],["t_nfy_flg",3]],[[],["t_nfy_dtq",3]],[[],["t_enfy_var",3]],[[],["t_enfy_dtq",3]],[[],["acvct",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["t_rmpf",3]],["bool",15]],[[["t_cmpf",3]],["bool",15]],[[["t_rsem",3]],["bool",15]],[[["t_rflg",3]],["bool",15]],[[["t_rdtq",3]],["bool",15]],[[["t_rpdq",3]],["bool",15]],[[["t_rmtx",3]],["bool",15]],[[["t_rspn",3]],["bool",15]],[[["t_csem",3]],["bool",15]],[[["t_cflg",3]],["bool",15]],[[["t_cdtq",3]],["bool",15]],[[["t_cpdq",3]],["bool",15]],[[["t_cmtx",3]],["bool",15]],[[["t_cspn",3]],["bool",15]],[[["t_rtsk",3]],["bool",15]],[[["t_rcyc",3]],["bool",15]],[[["t_ralm",3]],["bool",15]],[[["t_nfy_var",3]],["bool",15]],[[["t_nfy_ivar",3]],["bool",15]],[[["t_nfy_tsk",3]],["bool",15]],[[["t_nfy_sem",3]],["bool",15]],[[["t_nfy_flg",3]],["bool",15]],[[["t_nfy_dtq",3]],["bool",15]],[[["t_enfy_var",3]],["bool",15]],[[["t_enfy_dtq",3]],["bool",15]],[[["acvct",3]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["t_rmpf",3]],["bool",15]],[[["t_cmpf",3]],["bool",15]],[[["t_rsem",3]],["bool",15]],[[["t_rflg",3]],["bool",15]],[[["t_rdtq",3]],["bool",15]],[[["t_rpdq",3]],["bool",15]],[[["t_rmtx",3]],["bool",15]],[[["t_rspn",3]],["bool",15]],[[["t_csem",3]],["bool",15]],[[["t_cflg",3]],["bool",15]],[[["t_cdtq",3]],["bool",15]],[[["t_cpdq",3]],["bool",15]],[[["t_cmtx",3]],["bool",15]],[[["t_cspn",3]],["bool",15]],[[["t_rtsk",3]],["bool",15]],[[["t_rcyc",3]],["bool",15]],[[["t_ralm",3]],["bool",15]],[[["t_nfy_var",3]],["bool",15]],[[["t_nfy_ivar",3]],["bool",15]],[[["t_nfy_tsk",3]],["bool",15]],[[["t_nfy_sem",3]],["bool",15]],[[["t_nfy_flg",3]],["bool",15]],[[["t_nfy_dtq",3]],["bool",15]],[[["t_enfy_var",3]],["bool",15]],[[["t_enfy_dtq",3]],["bool",15]],[[["acvct",3]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["closure",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["id",6]],[[],["id",6]],[[],["nonnullid",6]],[[],["nonnullid",6]],[[],["dataqueueref",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["builder",3,[["__capacity_is_not_specified__",3]]]],[[["usize",15]],["builder",3]],[[],["senderror",4]],[[],["sendtimeouterror",4]],[[],["trysenderror",4]],[[],["sendforcederror",4]],[[],["recverror",4]],[[],["recvtimeouterror",4]],[[],["tryrecverror",4]],[[],["initializeerror",4]],[[],["infoerror",4]],[[],["builderror",4]],[[],["deleteerror",4]],[[],["info",3]],[[],["dataqueueref",3]],[[],["result",4,[["error",3,[["deleteerror",4]]]]]],[[]],[[["senderror",4]],["bool",15]],[[["sendtimeouterror",4]],["bool",15]],[[["trysenderror",4]],["bool",15]],[[["sendforcederror",4]],["bool",15]],[[["recverror",4]],["bool",15]],[[["recvtimeouterror",4]],["bool",15]],[[["tryrecverror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["builderror",4]],["bool",15]],[[["deleteerror",4]],["bool",15]],[[["dataqueueref",3]],["bool",15]],[[["dataqueue",3]],["bool",15]],[[],["result",4,[["dataqueue",3],["error",3,[["builderror",4]]]]]],[[],["option",4,[["nonnullid",6]]]],[[],["option",4,[["nonnullid",6]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["nonnullid",6]]],[[["nonnullid",6]]],[[],["result",4,[["info",3],["error",3,[["infoerror",4]]]]]],[[],["result",4,[["error",3,[["initializeerror",4]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["dataqueueref",3]],[[],["usize",15]],[[["senderror",4]],["bool",15]],[[["sendtimeouterror",4]],["bool",15]],[[["trysenderror",4]],["bool",15]],[[["sendforcederror",4]],["bool",15]],[[["recverror",4]],["bool",15]],[[["recvtimeouterror",4]],["bool",15]],[[["tryrecverror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["builderror",4]],["bool",15]],[[["deleteerror",4]],["bool",15]],[[["dataqueueref",3]],["bool",15]],[[["dataqueue",3]],["bool",15]],[[["queueorder",4]]],[[],["result",4,[["dataelement",6],["error",3,[["recverror",4]]]]]],[[["timeout",3]],["result",4,[["dataelement",6],["error",3,[["recvtimeouterror",4]]]]]],[[["dataelement",6]],["result",4,[["error",3,[["senderror",4]]]]]],[[["dataelement",6]],["result",4,[["error",3,[["sendforcederror",4]]]]]],[[["dataelement",6],["timeout",3]],["result",4,[["error",3,[["sendtimeouterror",4]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["dataelement",6],["error",3,[["tryrecverror",4]]]]]],[[["dataelement",6]],["result",4,[["error",3,[["trysenderror",4]]]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["error",3]],[[],["errorcode",3]],[[],["kind",3]],[[],["never",4]],[[],["errorcode",3]],[[["error",3]],["bool",15]],[[["errorcode",3]],["bool",15]],[[["kind",3]],["bool",15]],[[["never",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["error",3]]],[[]],[[]],[[]],[[["errorcode",3]],["option",4]],[[],["er",6]],[[]],[[]],[[]],[[]],[[]],[[["error",3]],["bool",15]],[[["errorcode",3]],["bool",15]],[[["kind",3]],["bool",15]],[[["er",6]],["option",4]],[[["errorcode",3]]],[[["er",6]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[],["exiterror",4]],[[["exiterror",4]],["bool",15]],[[],["error",3,[["exiterror",4]]]],[[["formatter",3]],["result",6]],[[]],[[["errorcode",3]],["option",4]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["exiterror",4]],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["id",6]],[[],["id",6]],[[],["nonnullid",6]],[[],["nonnullid",6]],[[],["memorypoolref",3]],[[["usize",15]],["builder",3]],[[["usize",15]],["builder",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["builder",3,[["__block_size_is_not_specified__",3],["__block_count_is_not_specified__",3]]]],[[],["geterror",4]],[[],["gettimeouterror",4]],[[],["trygeterror",4]],[[],["releaseerror",4]],[[],["initializeerror",4]],[[],["infoerror",4]],[[],["builderror",4]],[[],["deleteerror",4]],[[],["info",3]],[[],["memorypoolref",3]],[[],["result",4,[["error",3,[["deleteerror",4]]]]]],[[]],[[["geterror",4]],["bool",15]],[[["gettimeouterror",4]],["bool",15]],[[["trygeterror",4]],["bool",15]],[[["releaseerror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["builderror",4]],["bool",15]],[[["deleteerror",4]],["bool",15]],[[["memorypoolref",3]],["bool",15]],[[["memorypool",3]],["bool",15]],[[],["result",4,[["memorypool",3],["error",3,[["builderror",4]]]]]],[[],["option",4,[["nonnullid",6]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["nonnullid",6]]],[[["nonnullid",6]]],[[],["result",4,[["block",6],["error",3,[["geterror",4]]]]]],[[["timeout",3]],["result",4,[["block",6],["error",3,[["gettimeouterror",4]]]]]],[[],["result",4,[["info",3],["error",3,[["infoerror",4]]]]]],[[],["result",4,[["error",3,[["initializeerror",4]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["memorypoolref",3]],[[["geterror",4]],["bool",15]],[[["gettimeouterror",4]],["bool",15]],[[["trygeterror",4]],["bool",15]],[[["releaseerror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["builderror",4]],["bool",15]],[[["deleteerror",4]],["bool",15]],[[["memorypoolref",3]],["bool",15]],[[["memorypool",3]],["bool",15]],[[["queueorder",4]]],[[["block",6]],["result",4,[["error",3,[["releaseerror",4]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["block",6],["error",3,[["trygeterror",4]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["id",6]],[[],["id",6]],[[],["nonnullid",6]],[[],["nonnullid",6]],[[],["mutexref",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["builder",3]],[[],["lockerror",4]],[[],["locktimeouterror",4]],[[],["trylockerror",4]],[[],["unlockerror",4]],[[],["initializeerror",4]],[[],["infoerror",4]],[[],["builderror",4]],[[],["deleteerror",4]],[[],["info",3]],[[],["mutexref",3]],[[],["priorityprotection",4]],[[],["result",4,[["error",3,[["deleteerror",4]]]]]],[[]],[[["lockerror",4]],["bool",15]],[[["locktimeouterror",4]],["bool",15]],[[["trylockerror",4]],["bool",15]],[[["unlockerror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["builderror",4]],["bool",15]],[[["deleteerror",4]],["bool",15]],[[["mutexref",3]],["bool",15]],[[["priorityprotection",4]],["bool",15]],[[["mutex",3]],["bool",15]],[[],["result",4,[["mutex",3],["error",3,[["builderror",4]]]]]],[[],["option",4,[["nonnullid",6]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["nonnullid",6]]],[[["nonnullid",6]]],[[],["result",4,[["info",3],["error",3,[["infoerror",4]]]]]],[[],["option",4]],[[],["result",4,[["error",3,[["initializeerror",4]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["mutexref",3]],[[],["result",4,[["error",3,[["lockerror",4]]]]]],[[["timeout",3]],["result",4,[["error",3,[["locktimeouterror",4]]]]]],[[["lockerror",4]],["bool",15]],[[["locktimeouterror",4]],["bool",15]],[[["trylockerror",4]],["bool",15]],[[["unlockerror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["builderror",4]],["bool",15]],[[["deleteerror",4]],["bool",15]],[[["mutexref",3]],["bool",15]],[[["priorityprotection",4]],["bool",15]],[[["mutex",3]],["bool",15]],[[],["option",4,[["nonnullid",6]]]],[[["priorityprotection",4]],["builder",3]],[[["queueorder",4]],["builder",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["error",3,[["trylockerror",4]]]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",4,[["error",3,[["unlockerror",4]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["id",6]],[[],["nonnullid",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["currentiderror",4]],[[],["processor",3]],[[],["processortryfromerror",3]],[[],["result",4,[["processor",3],["error",3,[["currentiderror",4]]]]]],[[["currentiderror",4]],["bool",15]],[[["processor",3]],["bool",15]],[[["processortryfromerror",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["errorcode",3]],["option",4]],[[["id",6]],["option",4]],[[["nonnullid",6]]],[[]],[[]],[[]],[[["currentiderror",4]],["bool",15]],[[["processor",3]],["bool",15]],[[["processortryfromerror",3]],["bool",15]],[[],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["id",6]],[[],["id",6]],[[],["nonnullid",6]],[[],["nonnullid",6]],[[],["semaphoreref",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["builder",3]],[[],["signalerror",4]],[[],["waiterror",4]],[[],["waittimeouterror",4]],[[],["pollerror",4]],[[],["initializeerror",4]],[[],["infoerror",4]],[[],["builderror",4]],[[],["deleteerror",4]],[[],["info",3]],[[],["semaphoreref",3]],[[],["count",6]],[[],["result",4,[["error",3,[["deleteerror",4]]]]]],[[]],[[["signalerror",4]],["bool",15]],[[["waiterror",4]],["bool",15]],[[["waittimeouterror",4]],["bool",15]],[[["pollerror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["builderror",4]],["bool",15]],[[["deleteerror",4]],["bool",15]],[[["semaphoreref",3]],["bool",15]],[[["semaphore",3]],["bool",15]],[[],["result",4,[["semaphore",3],["error",3,[["builderror",4]]]]]],[[],["option",4,[["nonnullid",6]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["nonnullid",6]]],[[["nonnullid",6]]],[[],["result",4,[["info",3],["error",3,[["infoerror",4]]]]]],[[["count",6]],["builder",3]],[[],["result",4,[["error",3,[["initializeerror",4]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["semaphoreref",3]],[[["count",6]],["builder",3]],[[["signalerror",4]],["bool",15]],[[["waiterror",4]],["bool",15]],[[["waittimeouterror",4]],["bool",15]],[[["pollerror",4]],["bool",15]],[[["initializeerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["builderror",4]],["bool",15]],[[["deleteerror",4]],["bool",15]],[[["semaphoreref",3]],["bool",15]],[[["semaphore",3]],["bool",15]],[[],["result",4,[["error",3,[["pollerror",4]]]]]],[[["queueorder",4]],["builder",3]],[[],["result",4,[["error",3,[["signalerror",4]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",4,[["error",3,[["waiterror",4]]]]]],[[["timeout",3]],["result",4,[["error",3,[["waittimeouterror",4]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4,[["error",3,[["activateerror",4]]]]]],[[["processor",3]],["result",4,[["error",3,[["activateonerror",4]]]]]],[[],["id",6]],[[],["id",6]],[[],["id",6]],[[],["nonnullid",6]],[[],["nonnullid",6]],[[],["nonnullid",6]],[[],["taskref",3]],[[],["taskref",3]],[[],["priority",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["builder",3,[["__start_is_not_specified__",3],["__stack_is_not_specified__",3],["__initial_priority_is_not_specified__",3]]]],[[],["result",4,[["usize",15],["error",3,[["cancelactivateallerror",4]]]]]],[[],["result",4,[["usize",15],["error",3,[["cancelwakeallerror",4]]]]]],[[],["activateerror",4]],[[],["activateonerror",4]],[[],["cancelactivateallerror",4]],[[],["setbasepriorityerror",4]],[[],["priorityerror",4]],[[],["migrateerror",4]],[[],["deleteerror",4]],[[],["stateerror",4]],[[],["infoerror",4]],[[],["wakeerror",4]],[[],["cancelwakeallerror",4]],[[],["releasewaiterror",4]],[[],["suspenderror",4]],[[],["resumeerror",4]],[[],["terminateerror",4]],[[],["raiseterminationerror",4]],[[],["sleeperror",4]],[[],["sleeptimeouterror",4]],[[],["delayerror",4]],[[],["exiterror",4]],[[],["disableterminationerror",4]],[[],["badcontexterror",3]],[[],["currentiderror",4]],[[],["builderror",4]],[[],["state",4]],[[],["info",3]],[[],["taskref",3]],[[],["current",3]],[[],["allprocessors",3]],[[],["result",4,[["current",3],["badcontexterror",3]]]],[[],["result",4,[["option",4,[["nonnullid",6]]],["error",3,[["currentiderror",4]]]]]],[[],["priority",6]],[[],["allprocessors",3]],[[["duration",3]],["result",4,[["error",3,[["delayerror",4]]]]]],[[],["result",4,[["error",3,[["deleteerror",4]]]]]],[[],["result",4,[["error",3,[["disableterminationerror",4]]]]]],[[]],[[],["result",4,[["error",3,[["enableterminationerror",6]]]]]],[[["activateerror",4]],["bool",15]],[[["activateonerror",4]],["bool",15]],[[["cancelactivateallerror",4]],["bool",15]],[[["setbasepriorityerror",4]],["bool",15]],[[["priorityerror",4]],["bool",15]],[[["migrateerror",4]],["bool",15]],[[["deleteerror",4]],["bool",15]],[[["stateerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["wakeerror",4]],["bool",15]],[[["cancelwakeallerror",4]],["bool",15]],[[["releasewaiterror",4]],["bool",15]],[[["suspenderror",4]],["bool",15]],[[["resumeerror",4]],["bool",15]],[[["terminateerror",4]],["bool",15]],[[["raiseterminationerror",4]],["bool",15]],[[["sleeperror",4]],["bool",15]],[[["sleeptimeouterror",4]],["bool",15]],[[["delayerror",4]],["bool",15]],[[["exiterror",4]],["bool",15]],[[["disableterminationerror",4]],["bool",15]],[[["badcontexterror",3]],["bool",15]],[[["currentiderror",4]],["bool",15]],[[["builderror",4]],["bool",15]],[[["state",4]],["bool",15]],[[["taskref",3]],["bool",15]],[[["allprocessors",3]],["bool",15]],[[["task",3]],["bool",15]],[[],["error",3,[["exiterror",4]]]],[[],["result",4,[["task",3],["error",3,[["builderror",4]]]]]],[[],["result",4,[["task",3],["error",3,[["builderror",4]]]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["errorcode",3]],["option",4]],[[["nonnullid",6]]],[[["nonnullid",6]]],[[]],[[]],[[],["result",4,[["info",3],["error",3,[["infoerror",4]]]]]],[[["priority",6]],["builder",3]],[[["processor",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["taskref",3]],[[["processor",3]],["result",4,[["error",3,[["migrateerror",4]]]]]],[[["activateerror",4]],["bool",15]],[[["activateonerror",4]],["bool",15]],[[["cancelactivateallerror",4]],["bool",15]],[[["setbasepriorityerror",4]],["bool",15]],[[["priorityerror",4]],["bool",15]],[[["migrateerror",4]],["bool",15]],[[["deleteerror",4]],["bool",15]],[[["stateerror",4]],["bool",15]],[[["infoerror",4]],["bool",15]],[[["wakeerror",4]],["bool",15]],[[["cancelwakeallerror",4]],["bool",15]],[[["releasewaiterror",4]],["bool",15]],[[["suspenderror",4]],["bool",15]],[[["resumeerror",4]],["bool",15]],[[["terminateerror",4]],["bool",15]],[[["raiseterminationerror",4]],["bool",15]],[[["sleeperror",4]],["bool",15]],[[["sleeptimeouterror",4]],["bool",15]],[[["delayerror",4]],["bool",15]],[[["exiterror",4]],["bool",15]],[[["disableterminationerror",4]],["bool",15]],[[["badcontexterror",3]],["bool",15]],[[["currentiderror",4]],["bool",15]],[[["builderror",4]],["bool",15]],[[["taskref",3]],["bool",15]],[[["task",3]],["bool",15]],[[],["result",4,[["priority",6],["error",3,[["priorityerror",4]]]]]],[[]],[[],["result",4,[["error",3,[["raiseterminationerror",4]]]]]],[[],["result",4,[["error",3,[["releasewaiterror",4]]]]]],[[],["result",4,[["error",3,[["resumeerror",4]]]]]],[[["priority",6]],["result",4,[["error",3,[["setbasepriorityerror",4]]]]]],[[],["result",4,[["error",3,[["sleeperror",4]]]]]],[[["timeout",3]],["result",4,[["error",3,[["sleeptimeouterror",4]]]]]],[[["usize",15]],["builder",3]],[[],["builder",3]],[[],["state",4]],[[],["result",4,[["state",4],["error",3,[["stateerror",4]]]]]],[[],["result",4,[["error",3,[["suspenderror",4]]]]]],[[],["result",4,[["error",3,[["terminateerror",4]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",4,[["error",3,[["wakeerror",4]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["reltim",6]],[[],["tmo",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["duration",3]],[[],["timeout",3]],[[["duration",3]],["ordering",4]],[[["timeout",3]],["ordering",4]],null,null,[[["duration",3]],["bool",15]],[[["timeout",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["u128",15]],["option",4]],[[["reltim",6]]],[[["tmo",6]]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["duration",3]],["bool",15]],[[["timeout",3]],["bool",15]],[[["duration",3]],["option",4,[["ordering",4]]]],[[["timeout",3]],["option",4,[["ordering",4]]]],null,null,[[],["result",4]],[[],["result",4]],[[["timeout",3]],["result",4]],[[["stdduration",3]],["result",4]],[[],["result",4]],[[["stdduration",3]],["result",4]],[[["duration",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[],["atr",6]],[[]],[[]],[[],["queueorder",4]],[[["queueorder",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"T_NFY_FLG"],[3,"T_NFY_DTQ"],[3,"acvct"],[3,"T_RTSK"],[19,"T_NFY"],[19,"T_ENFY"],[3,"T_CTSK"],[3,"T_CCYC"],[3,"T_CALM"],[3,"T_RALM"],[3,"T_CMPF"],[3,"T_CISR"],[3,"T_RMPF"],[3,"T_RSEM"],[3,"T_RFLG"],[3,"T_RDTQ"],[3,"T_RPDQ"],[3,"T_RMTX"],[3,"T_RSPN"],[3,"T_CSEM"],[3,"T_CFLG"],[3,"T_CDTQ"],[3,"T_CPDQ"],[3,"T_CMTX"],[3,"T_CSPN"],[3,"T_RCYC"],[3,"T_NFYINFO"],[3,"T_NFY_HDR"],[3,"T_NFY_VAR"],[3,"T_NFY_IVAR"],[3,"T_NFY_TSK"],[3,"T_NFY_SEM"],[3,"T_ENFY_VAR"],[3,"T_ENFY_DTQ"],[8,"IntoClosure"],[4,"SendError"],[4,"SendTimeoutError"],[4,"TrySendError"],[4,"SendForcedError"],[4,"RecvError"],[4,"RecvTimeoutError"],[4,"TryRecvError"],[4,"InitializeError"],[4,"InfoError"],[4,"BuildError"],[4,"DeleteError"],[3,"DataqueueRef"],[3,"Dataqueue"],[3,"Builder"],[3,"Info"],[13,"BadContext"],[13,"AccessDenied"],[13,"OutOfMemory"],[13,"BadParam"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadState"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"ZeroSized"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[3,"Kind"],[3,"Error"],[3,"ErrorCode"],[4,"Never"],[8,"ErrorKind"],[4,"ExitError"],[13,"AccessDenied"],[4,"GetError"],[4,"GetTimeoutError"],[4,"TryGetError"],[4,"ReleaseError"],[4,"InitializeError"],[4,"InfoError"],[4,"BuildError"],[4,"DeleteError"],[3,"MemoryPoolRef"],[3,"MemoryPool"],[3,"Builder"],[3,"Info"],[13,"BadContext"],[13,"AccessDenied"],[13,"NotSupported"],[13,"OutOfMemory"],[13,"BadParam"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadState"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadParam"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[4,"LockError"],[4,"LockTimeoutError"],[4,"TryLockError"],[4,"UnlockError"],[4,"InitializeError"],[4,"InfoError"],[4,"BuildError"],[4,"DeleteError"],[4,"PriorityProtection"],[3,"MutexRef"],[3,"Mutex"],[3,"Builder"],[3,"Info"],[13,"BadContext"],[13,"AccessDenied"],[13,"OutOfMemory"],[13,"BadParam"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadState"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadParam"],[13,"Deadlock"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadParam"],[13,"Deadlock"],[13,"Ceiling"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadParam"],[13,"Deadlock"],[13,"Timeout"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadSequence"],[4,"CurrentIdError"],[3,"Processor"],[3,"ProcessorTryFromError"],[13,"BadContext"],[4,"SignalError"],[4,"WaitError"],[4,"WaitTimeoutError"],[4,"PollError"],[4,"InitializeError"],[4,"InfoError"],[4,"BuildError"],[4,"DeleteError"],[3,"SemaphoreRef"],[3,"Semaphore"],[3,"Builder"],[3,"Info"],[13,"BadContext"],[13,"AccessDenied"],[13,"OutOfMemory"],[13,"BadParam"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadState"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"QueueOverflow"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[13,"BadContext"],[13,"NotSupported"],[13,"BadId"],[13,"AccessDenied"],[13,"Timeout"],[13,"Released"],[13,"TerminateRequest"],[13,"Deleted"],[4,"ActivateError"],[4,"ActivateOnError"],[4,"CancelActivateAllError"],[4,"SetBasePriorityError"],[4,"PriorityError"],[4,"MigrateError"],[4,"DeleteError"],[4,"StateError"],[4,"InfoError"],[4,"WakeError"],[4,"CancelWakeAllError"],[4,"ReleaseWaitError"],[4,"SuspendError"],[4,"ResumeError"],[4,"TerminateError"],[4,"RaiseTerminationError"],[4,"DisableTerminationError"],[4,"BuildError"],[4,"SleepError"],[4,"SleepTimeoutError"],[4,"DelayError"],[4,"ExitError"],[4,"CurrentIdError"],[4,"State"],[3,"TaskRef"],[3,"Current"],[3,"Task"],[3,"Info"],[3,"Builder"],[3,"BadContextError"],[3,"AllProcessors"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"QueueOverflow"],[13,"BadContext"],[13,"BadId"],[13,"NotSupported"],[13,"AccessDenied"],[13,"QueueOverflow"],[13,"BadParam"],[13,"BadContext"],[13,"AccessDenied"],[13,"OutOfMemory"],[13,"BadParam"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"NotSupported"],[13,"AccessDenied"],[13,"BadState"],[13,"BadContext"],[13,"BadContext"],[13,"NotSupported"],[13,"Released"],[13,"TerminateRequest"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadState"],[13,"BadContext"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"BadParam"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"BadState"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadState"],[13,"BadParam"],[13,"BadContext"],[13,"BadId"],[13,"NotSupported"],[13,"AccessDenied"],[13,"BadState"],[13,"BadContext"],[13,"BadId"],[13,"NotSupported"],[13,"AccessDenied"],[13,"BadState"],[13,"BadContext"],[13,"BadId"],[13,"BadState"],[13,"BadParam"],[13,"AccessDenied"],[13,"BadContext"],[13,"NotSupported"],[13,"Released"],[13,"TerminateRequest"],[13,"BadContext"],[13,"NotSupported"],[13,"Timeout"],[13,"Released"],[13,"TerminateRequest"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadContext"],[13,"BadId"],[13,"NotSupported"],[13,"AccessDenied"],[13,"BadState"],[13,"QueueOverflow"],[13,"BadContext"],[13,"BadId"],[13,"AccessDenied"],[13,"BadState"],[13,"BadParam"],[13,"BadContext"],[13,"BadId"],[13,"NotSupported"],[13,"AccessDenied"],[13,"BadState"],[13,"QueueOverflow"],[3,"Timeout"],[3,"Duration"],[3,"TryFromDurationError"],[4,"QueueOrder"]],"a":{"acre_dtq":[867],"acre_mpf":[1249],"acre_mtx":[1501],"acre_sem":[1805],"acre_tsk":[2176],"act_tsk":[2103],"can_act":[2177],"can_wup":[2178],"chg_pri":[2404],"del_dtq":[882],"del_mpf":[1260],"del_mtx":[1513],"del_sem":[1817],"del_tsk":[2213],"dis_ter":[2214],"dly_tsk":[2212],"ena_ter":[2216],"ext_ker":[1148],"ext_tsk":[2245],"fsnd_dtq":[979],"get_mpf":[1308],"get_pid":[1696],"get_pri":[2399],"get_tid":[2209],"get_tst":[2410],"ini_mpf":[1311],"ini_mtx":[1565],"ini_sem":[943,1866],"loc_mtx":[1580],"mact_tsk":[2104],"mig_tsk":[2372],"park":[2405],"park_timeout":[2406],"pget_mpf":[1349],"ploc_mtx":[1622],"pol_sem":[1891],"prcv_dtq":[1011],"psnd_dtq":[1012],"ras_ter":[2401],"rcv_dtq":[976],"ref_dtq":[942],"ref_mpf":[1310],"ref_mtx":[1563],"ref_sem":[1864],"ref_tsk":[2336],"rel_mpf":[1336],"rel_wai":[2402],"rsm_tsk":[2403],"sig_sem":[1893],"slp_tsk":[2405],"snd_dtq":[978],"sns_ctx":[1157],"sns_dpn":[1154],"sns_dsp":[1155],"sns_ker":[1156],"sns_loc":[1153],"sns_ter":[2370],"sus_tsk":[2411],"ta_act":[2247],"ter_tsk":[2412],"tget_mpf":[1309],"tloc_mtx":[1581],"trcv_dtq":[977],"tslp_tsk":[2406],"tsnd_dtq":[980],"twai_sem":[1931],"unl_mtx":[1636],"unpark":[2506],"wai_sem":[1930],"wup_tsk":[2506]}},\
"tt_call":{"doc":"github crates-io docs-rs","t":[14,14,14,14,14,14,14,14,14,14,14,14,14,14],"n":["error_eof","error_unexpected","error_unexpected_last","parse_type","tt_call","tt_debug","tt_false","tt_if","tt_is_comma","tt_is_ident","tt_is_lifetime","tt_replace","tt_return","tt_true"],"q":["tt_call","","","","","","","","","","","","",""],"d":["Fail due to an unexpected end of input.","Fail due to an unexpected input token.","Fail due to an unexpected input token, faulting the last …","Parse any syntactically valid Rust type. <strong>[tt-call]</strong>","Evaluate a tt-call macro and return its output to a given …","Print arbitrary output values returned by a tt-call macro. …","Predicate that is always false. <strong>[tt-call]</strong>","Evaluate a condition and expand to one or the other of two …","Predicate that accepts a single token and determines …","Predicate that accepts a single token and determines …","Predicate that accepts a single token and determines …","Replace each token that matches a given predicate by a …","Return zero or more output values to the caller macro.","Predicate that is always true. <strong>[tt-call]</strong>"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};